openapi: 3.0.0
info:
  title: Phocus
  version: 1.0.0
paths:
  'LEXService/getDocument/{documentid}':
    post:
      tags:
        - LEXService
      summary: getDocument
      operationId: getDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'productreference/getProductWithReferences/{onlyActive}':
    post:
      tags:
        - productreference
      summary: getProductWithReferences
      operationId: getProductWithReferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyActive:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductWithReferencesDTO%3E'
  'garagedataperiod/getCustomers/{garagevehicleId}':
    post:
      tags:
        - garagedataperiod
      summary: getCustomers
      operationId: getCustomers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagevehicleId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCustomer%3E'
  'LEXService/getAudio/{eventid}':
    post:
      tags:
        - LEXService
      summary: streamAudio
      operationId: streamAudio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                range:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  LEXService/getSubjectFromToken:
    post:
      tags:
        - LEXService
      summary: getSubjectFromToken
      operationId: getSubjectFromToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
  'email/searchEmails/{subjectid}/{value}':
    post:
      tags:
        - email
      summary: searchEmails
      operationId: searchEmails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CEmailItem%3E'
  settings/printingStatus:
    post:
      tags:
        - settings
      summary: printingState
      operationId: printingState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  'fit/cancelAppointment/{appointmentcustomerid}':
    post:
      tags:
        - fit
      summary: cancelAppointment
      operationId: cancelAppointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentcustomerid:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  accounting/getBankreconciliation:
    post:
      tags:
        - accounting
      summary: getBankreconciliation
      operationId: getBankreconciliation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/BankReconciliationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankReconciliationAccountingDTO'
  agrosabas/generateProductionFromAssignables:
    post:
      tags:
        - agrosabas
      summary: generateProductionFromAssignables
      operationId: generateProductionFromAssignables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CAgrosabasAssignable%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  timetick/deleteImputations:
    post:
      tags:
        - timetick
      summary: deleteImputations
      operationId: deleteImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imputationids:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-fld/workercultivationcost:
    post:
      tags:
        - phocus-fld
      summary: getWorkedTime
      operationId: getWorkedTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkerProductionCostResponse%3E'
  'nextcloud/getCasefileFolderTree/{casefileid}':
    post:
      tags:
        - nextcloud
      summary: getCasefileFolderTree
      operationId: getCasefileFolderTree
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                casefileid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTreeFolderResponse%3E'
  timetick/saveWorkspace:
    post:
      tags:
        - timetick
      summary: saveWorkspace
      operationId: saveWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaveWorkspacesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'messaging/getSubjectsFromAccountworkertochat/{subjectId}':
    post:
      tags:
        - messaging
      summary: getSubjectsFromAccountworkertochat
      operationId: getSubjectsFromAccountworkertochat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSubject%3E'
  chk/processBarcode:
    post:
      tags:
        - chk
      summary: processBarcode
      operationId: processBarcode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/BarcodeDataperiodRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarcodeDataperiodResponse'
  'workerCalendar/readTemplate/{contractorId}':
    post:
      tags:
        - workerCalendar
      summary: readTemplate
      operationId: readTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                contractorId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sale/saveSaleorderdetailcontainers:
    post:
      tags:
        - sale
      summary: saveSaleorderdetailcontainers
      operationId: saveSaleorderdetailcontainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaveSaleorderdetailcontainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorderdetailcontainer%3E'
  document/moveDocuments:
    post:
      tags:
        - document
      summary: moveDocuments
      operationId: moveDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                moveDocumentsRequest:
                  $ref: '#/components/schemas/MoveDocumentsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  groupMessaging/removeMembersFromGroup:
    post:
      tags:
        - groupMessaging
      summary: removeMembersFromGroup
      operationId: removeMembersFromGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/MemberGroupRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  'LEXService/checkworker/{activeWorkerReportDetailId}/{phoneNumber}':
    post:
      tags:
        - LEXService
      summary: checkWorker
      operationId: checkWorker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                activeWorkerReportDetailId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activeworkerreportdetail'
  casefile/eventAnalisys:
    post:
      tags:
        - casefile
      summary: getAnalisys
      operationId: getAnalisys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCasefileEvent%3E'
  sale/getSaleorderDetails:
    post:
      tags:
        - sale
      summary: getSaleorderDetails
      operationId: getSaleorderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaledetailRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleResponse'
  digitalcertificate/certificateInfo:
    post:
      tags:
        - digitalcertificate
      summary: certificateInfo
      operationId: certificateInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CertificateInfoRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInfo'
  production/joinPallets:
    post:
      tags:
        - production
      summary: joinPallets
      operationId: joinPallets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serialshippingcontainerList:
                  $ref: '#/components/schemas/List%3CSerialshippingcontainer%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/FLDVariationResume:
    post:
      tags:
        - phocus-fld
      summary: getFLDVariationResume
      operationId: getFLDVariationResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FLDVariationResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FLDVariationResumeResponse'
  crm/importAdditionalFieldsExcel:
    post:
      tags:
        - crm
      summary: importExcel
      operationId: importExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelStream:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSubjectadditionalfieldvalue%3E'
  durgastockservice/stock:
    post:
      tags:
        - durgastockservice
      summary: stock
      operationId: stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'worknote/changeSettlementGroup/{settlementId}/{settlemetgroup}':
    post:
      tags:
        - worknote
      summary: changeSettlementGroup
      operationId: changeSettlementGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementGroupId:
                  type: integer
                settlementId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  billing/getVatResumeDTO:
    post:
      tags:
        - billing
      summary: getVatResumeDTO
      operationId: getVatResumeDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportVatResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatResumeDTO'
  'fit/aceptAlternative/{alternative}':
    post:
      tags:
        - fit
      summary: aceptAlternativeService
      operationId: aceptAlternativeService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alternativeId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  stock/getTraceability:
    post:
      tags:
        - stock
      summary: getTraceability
      operationId: getTraceability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TraceabilityRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CBatchNode%3E'
  presence/getSujectsWithPhoto:
    post:
      tags:
        - presence
      summary: getSubjectWithPhoto
      operationId: getSubjectWithPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  'accounting/openYear/{companyId}/{year}':
    post:
      tags:
        - accounting
      summary: openYear
      operationId: openYear
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                companyid:
                  type: integer
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAccountingentry%3E'
  'worknote/generateSeizurePaymentFile/{seizurepayment}':
    post:
      tags:
        - worknote
      summary: generateSeizurePaymentFile
      operationId: generateSeizurePaymentFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seizurePaymentId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  stock/containermovements:
    post:
      tags:
        - stock
      summary: containerMovements
      operationId: containerMovements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ContainerMovementsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection%3CContainerMovement%3E'
  container/storeContainer:
    post:
      tags:
        - container
      summary: storeContainer
      operationId: storeContainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newStoreContainerRequest:
                  $ref: '#/components/schemas/NewStoreContainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  ghmv/getIntrastatCsv:
    post:
      tags:
        - ghmv
      summary: getIntrastatCsv
      operationId: getIntrastatCsv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportIntrastatCsvRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  accounting/getStatements:
    post:
      tags:
        - accounting
      summary: getStatements
      operationId: getStatements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/StatementRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CStatement%3E'
  phocus-brd/purchaseOrderReport:
    post:
      tags:
        - phocus-brd
      summary: purchaseOrderReport
      operationId: purchaseOrderReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  models/revisionPendingModels:
    post:
      tags:
        - models
      summary: revisionPendingModels
      operationId: revisionPendingModels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  subjectChargeActuation/saveAndSendMailChargeActuation:
    post:
      tags:
        - subjectChargeActuation
      summary: saveAndSendMailChargeActuation
      operationId: saveAndSendMailChargeActuation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectChargeActuationMailings:
                  $ref: '#/components/schemas/List%3CSubjectChargeActuationMailing%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  olap/productivity:
    post:
      tags:
        - olap
      summary: getProductivity
      operationId: getProductivity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductivityItem%3E'
  ghmv/checkStockAndConsumptions:
    post:
      tags:
        - ghmv
      summary: checkStockAndConsumptions
      operationId: checkStockAndConsumptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'nextcloud/getDocument/{documentid}':
    post:
      tags:
        - nextcloud
      summary: getDocument
      operationId: getDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sale/summaryFromForecast:
    post:
      tags:
        - sale
      summary: getSummaryFromForecast
      operationId: getSummaryFromForecast
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forecast:
                  $ref: '#/components/schemas/Forecast'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastSummary'
  email/saveQuaterlyTaxEmailAttachments:
    post:
      tags:
        - email
      summary: saveQuaterlyTaxEmailAttachments
      operationId: saveQuaterlyTaxEmailAttachments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saveQuaterlyTaxAttachmentDTO:
                  $ref: '#/components/schemas/SaveQuaterlyTaxAttachmentDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  planification/currentPresenceExcel:
    post:
      tags:
        - planification
      summary: currentPresenceExcel
      operationId: currentPresenceExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocus-fld/getIrrigationsectorWithCultivation:
    post:
      tags:
        - phocus-fld
      summary: getIrrigationsectorWithCultivation
      operationId: getIrrigationsectorWithCultivation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CIrrigationSectorWithCultivationDTO%3E'
  'sage/getBalanceClaim/{year}/{enterpriseCode}':
    post:
      tags:
        - sage
      summary: getBalanceClaim
      operationId: getBalanceClaim
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enterpriseCode:
                  type: integer
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CBalanceClaim%3E'
  sage/checkWorker:
    post:
      tags:
        - sage
      summary: checkWorker
      operationId: checkWorker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CheckWorkerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'form/deleteForm/{id}':
    post:
      tags:
        - form
      summary: deleteForm
      operationId: deleteForm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/deleteSectorGeopoints:
    post:
      tags:
        - phocus-fld
      summary: deleteSectorGeopoints
      operationId: deleteSectorGeopoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sector:
                  $ref: '#/components/schemas/Sector'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'worknote/getSettlementsPendingPayment/{settlemetgroup}':
    post:
      tags:
        - worknote
      summary: getSettlementsPendingPayment
      operationId: getSettlementsPendingPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementGroupId:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSettlementResume%3E'
  phocus-fld/sectorPolygonsBySector:
    post:
      tags:
        - phocus-fld
      summary: getSectorPolygons
      operationId: getSectorPolygons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sector:
                  $ref: '#/components/schemas/Sector'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPolygon%3E'
  sale/generateSaleorderincidenceReport:
    post:
      tags:
        - sale
      summary: getInvoiceReport
      operationId: getInvoiceReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  batchgenerator/resolverBatch:
    post:
      tags:
        - batchgenerator
      summary: possibleValues
      operationId: possibleValues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/Batch'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
  accounting/saveDetail:
    post:
      tags:
        - accounting
      summary: saveDetail
      operationId: saveDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                detail:
                  $ref: '#/components/schemas/Accountingentrydetail'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-brd/getNextPaletNumber:
    post:
      tags:
        - phocus-brd
      summary: getNextPaletNumber
      operationId: getNextPaletNumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPaletNumberResponse'
  production/getExecutionProductionResume:
    post:
      tags:
        - production
      summary: getExecutionProductionResume
      operationId: getExecutionProductionResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductionExecutionResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionExecutionResumeResponse'
  'fit/newchangerequest/{appointmentcustomerid}':
    post:
      tags:
        - fit
      summary: createChangeRequest
      operationId: createChangeRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentcustomerid:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sale/printCargo:
    post:
      tags:
        - sale
      summary: printCargo
      operationId: printCargo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  purchase/getPurchaseOrderDetails:
    post:
      tags:
        - purchase
      summary: getPurchaseOrderDetails
      operationId: getPurchaseOrderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PurchaseOrderDetailRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseorderdetail%3E'
  container/printSSCCs:
    post:
      tags:
        - container
      summary: printSSCCs
      operationId: printSSCCs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serialshippingcontainerdetailidList:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocusmes/generateImputations:
    post:
      tags:
        - phocusmes
      summary: generateImputations
      operationId: generateImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateImputationsRequest'
                regenerate:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'form/getFormsFromEntity/{entityclass}/{id}':
    post:
      tags:
        - form
      summary: getFormsFromPlannedproduction
      operationId: getFormsFromPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entityId:
                  type: integer
                entityclass:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object[]'
  phocusservice/individualProductivityOlap:
    post:
      tags:
        - phocusservice
      summary: getIndividualProductivityOlap
      operationId: getIndividualProductivityOlap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  durgareportservice/report:
    post:
      tags:
        - durgareportservice
      summary: report
      operationId: report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  mcn/customervehicles:
    post:
      tags:
        - mcn
      summary: getCustomerVehicles
      operationId: getCustomerVehicles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'email/newFolder/{subjectid}/{folderid}/{newFolder}':
    post:
      tags:
        - email
      summary: newFolder
      operationId: newFolder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newFolder:
                  type: string
                subjectid:
                  type: integer
                folderid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emailfolder'
  'LEXService/getPendingTasksForExecutor/{executorid}/{isGTD}':
    post:
      tags:
        - LEXService
      summary: getPendingTasksForExecutor
      operationId: getPendingTasksForExecutor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isGTD:
                  type: boolean
                executorid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set%3CPendingTaskDTO%3E'
  agrosabas/getForecastExcelReport:
    post:
      tags:
        - agrosabas
      summary: getForecastExcelReport
      operationId: getForecastExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sage/getErteCommunication:
    post:
      tags:
        - sage
      summary: getErteCommunication
      operationId: getErteCommunication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ErteCommunicationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  agrosabas/generateProductionFromAssignablesDTO:
    post:
      tags:
        - agrosabas
      summary: generateProductionFromAssignablesDTO
      operationId: generateProductionFromAssignablesDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AgrosabasAssignableDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'traceability/getMobileEntrydetailLabel/{entrydetailId}':
    post:
      tags:
        - traceability
      summary: getMobileEntrydetailLabel
      operationId: getMobileEntrydetailLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entrydetailId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'realWorkingDays/getWorkersRealWorkingDays/{email}':
    post:
      tags:
        - realWorkingDays
      summary: getWorkersRealWorkingDays
      operationId: getWorkersRealWorkingDays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  accounting/saveBankreconciliation:
    post:
      tags:
        - accounting
      summary: saveBankreconciliation
      operationId: saveBankreconciliation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CBankreconciliationaccountingentrydetail%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'phocus-crm/getPlanned/{plannedId}':
    post:
      tags:
        - phocus-crm
      summary: getPlanned
      operationId: getPlanned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plannedId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Planned'
  purchase/modifyPurchaseOrderDetails:
    post:
      tags:
        - purchase
      summary: modifyPurchaseOrderDetails
      operationId: modifyPurchaseOrderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestList:
                  $ref: '#/components/schemas/List%3CPurchaseOrderDetailChangeRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseorder%3E'
  auditable/getPendingAuditablesCount:
    post:
      tags:
        - auditable
      summary: getAuditables
      operationId: getAuditables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
  production/saveProvisioning:
    post:
      tags:
        - production
      summary: saveProvisioning
      operationId: saveProvisioning
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaveProvisioningRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  phocus-fld/comsumptioncultivationcost:
    post:
      tags:
        - phocus-fld
      summary: getConsumptionOLAP
      operationId: getConsumptionOLAP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CConsumptionCostOLAPResponse%3E'
  'production/getTasksByCustomer/{customer}':
    post:
      tags:
        - production
      summary: getTasksByCustomer
      operationId: getTasksByCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTask%3E'
  'casefile/accountcasefiles/{accountid}':
    post:
      tags:
        - casefile
      summary: getAccountCaseFiles
      operationId: getAccountCaseFiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CResumedCasefile%3E'
  'phocus-crm/getLead/{leadId}':
    post:
      tags:
        - phocus-crm
      summary: getLead
      operationId: getLead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                leadId:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
  agrosabas/gePreCuttingBladeExcelReport:
    post:
      tags:
        - agrosabas
      summary: gePreCuttingBladeExcelReport
      operationId: gePreCuttingBladeExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  marvic/generateFLDOperations:
    post:
      tags:
        - marvic
      summary: generateFLDOperations
      operationId: generateFLDOperations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  billing/invoiceReport:
    post:
      tags:
        - billing
      summary: getInvoiceReport
      operationId: getInvoiceReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'worknote/generatePaymentFile/{settlementpayment}':
    post:
      tags:
        - worknote
      summary: generatePaymentFile
      operationId: generatePaymentFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementPaymentId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  fruca/getTotalPalletsByDay/:
    post:
      tags:
        - fruca
      summary: saveTimetick
      operationId: saveTimetick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TotalPalletsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialshippingByTerminalResponse%3E'
  planification/newPlanificationDetails:
    post:
      tags:
        - planification
      summary: newPlanificationDetails
      operationId: newPlanificationDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                details:
                  $ref: '#/components/schemas/List%3CPlanificationdetail%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  presence/excelPlanification:
    post:
      tags:
        - presence
      summary: excelPlanification
      operationId: excelPlanification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocusservice/companyImage:
    post:
      tags:
        - phocusservice
      summary: getCompanyImage
      operationId: getCompanyImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ByteArrayInputStream'
  'sage/deleteLaboralplanification/{planificationid}':
    post:
      tags:
        - sage
      summary: deletePlanification
      operationId: deletePlanification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                planificationId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-brd/dataperiodResultReport:
    post:
      tags:
        - phocus-brd
      summary: dataperiodResultReport
      operationId: dataperiodResultReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  batchgenerator/getBatch:
    post:
      tags:
        - batchgenerator
      summary: getBatch
      operationId: getBatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/BatchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
  phocus-fld/FLDResumeExcelReportByCultivation:
    post:
      tags:
        - phocus-fld
      summary: getFLDResumeExcelReport
      operationId: getFLDResumeExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cultivation:
                  $ref: '#/components/schemas/Cultivation'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'sage/downloadSSFile/{planificationId}/{workerId}/{laboralcontractorId}':
    post:
      tags:
        - sage
      summary: downloadSSFile
      operationId: downloadSSFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workerId:
                  type: integer
                laboralcontractorId:
                  type: integer
                planificationId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
  worknote/productionWorknoteCube:
    post:
      tags:
        - worknote
      summary: productionWorknoteCube
      operationId: productionWorknoteCube
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ResumedDataperiodRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProfitItem%3E'
  'purchase/getCentercostByAccountingEntryDetail/{accountingEntryDetailId}':
    post:
      tags:
        - purchase
      summary: getCentercostByAccountingEntryDetail
      operationId: getCentercostByAccountingEntryDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                accountingEntryDetailId:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCostCenterNode%3E'
  olap/detailedConsumption:
    post:
      tags:
        - olap
      summary: getDetailedConsumption
      operationId: getDetailedConsumption
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductionDetail%3E'
  role/getMenuitemsResume:
    post:
      tags:
        - role
      summary: getMenuitemsResume
      operationId: getMenuitemsResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'garagesalenote/getGaragesalenoteToSign/{salenoteid}':
    post:
      tags:
        - garagesalenote
      summary: getGaragesalenoteToSign
      operationId: getGaragesalenoteToSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentToSignDTO'
  'productionforecast/getProductionForecastForProduct/{productid}/{year}/{firstWeek}':
    post:
      tags:
        - productionforecast
      summary: getProductionForecastForProduct
      operationId: getProductionForecastForProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                year:
                  type: integer
                firstWeek:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkspaceForecast%3E'
  'phocus-brd/getDataperiodType/{type}':
    post:
      tags:
        - phocus-brd
      summary: getDataperiodType
      operationId: getDataperiodType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataperiodtypeResponse'
  'garagedataperiod/updateResponsible/{garagedataperiodid}/{responsibleId}':
    post:
      tags:
        - garagedataperiod
      summary: updateResponsible
      operationId: updateResponsible
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                responsibleId:
                  type: integer
                garagedataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  billing/getModel347Excel:
    post:
      tags:
        - billing
      summary: getModel347Excel
      operationId: getModel347Excel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocusmes/doTimeTick:
    post:
      tags:
        - phocusmes
      summary: getTime
      operationId: getTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewTimetickRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetickInfoResponse'
  salary/workingSubjects:
    post:
      tags:
        - salary
      summary: workingSubjects
      operationId: workingSubjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ValidContractsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSubject%3E'
  sale/importCustomerproductsFromExcel:
    post:
      tags:
        - sale
      summary: importCustomerproductsFromExcel
      operationId: importCustomerproductsFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'event/registerExecutionPlannedproduction/{executionid}/{plannedproductionid}':
    post:
      tags:
        - event
      summary: registerExecutionPlannedproduction
      operationId: registerExecutionPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executionid:
                  type: integer
                plannedproductionid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
  production/getLineWorknote:
    post:
      tags:
        - production
      summary: getLineWorknote
      operationId: getLineWorknote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'purchase/saveCentercostByAccountingEntryDetail/{accountingEntryDetailId}':
    post:
      tags:
        - purchase
      summary: saveCentercostByAccountingEntryDetail
      operationId: saveCentercostByAccountingEntryDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                costCenterDetails:
                  $ref: '#/components/schemas/List%3CCostCenterNode%3E'
                token:
                  type: string
                accountingEntryDetailId:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  sage/laboralreport/generate:
    post:
      tags:
        - sage/laboralreport
      summary: sync
      operationId: sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  LEXService/createFolder:
    post:
      tags:
        - LEXService
      summary: createFolder
      operationId: createFolder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadRequest:
                  $ref: '#/components/schemas/UploadRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  sale/salesData:
    post:
      tags:
        - sale
      summary: getSalesData
      operationId: getSalesData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SalesDataRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleData%3E'
  olap/consumption:
    post:
      tags:
        - olap
      summary: getConsumption
      operationId: getConsumption
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDetailedConsumption%3E'
  'importer/status/{format}':
    post:
      tags:
        - importer
      summary: getStatus
      operationId: getStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'presence/workerWithCard/{cardserial}':
    post:
      tags:
        - presence
      summary: getWorkerWithCard
      operationId: getWorkerWithCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                cardserial:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
  groupMessaging/search/message:
    post:
      tags:
        - groupMessaging
      summary: getMessages
      operationId: getMessages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SearchGroupMessagesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CMessage%3E'
  'phocusmes/currentMessagesFor/{assetId}':
    post:
      tags:
        - phocusmes
      summary: getCurrentMessagesFor
      operationId: getCurrentMessagesFor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
  production/pendingProduction:
    post:
      tags:
        - production
      summary: getPendingProduction
      operationId: getPendingProduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingProductionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPendingProductionItem%3E'
  'worknote/getSettlementsPending/{year}':
    post:
      tags:
        - worknote
      summary: getSettlementsPending
      operationId: getSettlementsPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSettlementResume%3E'
  phocus-fld/fertigationRecommendationReport:
    post:
      tags:
        - phocus-fld
      summary: fertigationRecommendationReport
      operationId: fertigationRecommendationReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  auditable/getAuditables:
    post:
      tags:
        - auditable
      summary: getAuditables
      operationId: getAuditables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AuditableRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  report/incidencesReport:
    post:
      tags:
        - report
      summary: getIncidencesReport
      operationId: getIncidencesReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'sage/syncWorkerInCompany/{companyId}/{idcardnumber}':
    post:
      tags:
        - sage
      summary: syncCompany
      operationId: syncCompany
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idcardnumber:
                  type: string
                companyId:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  fit/updateTrainer:
    post:
      tags:
        - fit
      summary: updateAppointmentsList
      operationId: updateAppointmentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TrainerUpdateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAppointment%3E'
  production/generatePlannedproduction:
    post:
      tags:
        - production
      summary: generatePlannedproduction
      operationId: generatePlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateProductionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'email/getEmailItem/{eventid}':
    post:
      tags:
        - email
      summary: getEmailItem
      operationId: getEmailItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailItem'
  sale/updateSalenote:
    post:
      tags:
        - sale
      summary: updateSalenote
      operationId: updateSalenote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagesalenote:
                  $ref: '#/components/schemas/Salenote'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salenote'
  moyca/uploadHispatecDataperiods:
    post:
      tags:
        - moyca
      summary: uploadHispatecDataperiods
      operationId: uploadHispatecDataperiods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  mcn/purchasesOLAP:
    post:
      tags:
        - mcn
      summary: purchasesOLAP
      operationId: purchasesOLAP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/McnOlapRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CGaragePurchaseItem%3E'
  rest/clearDatabaseCache:
    post:
      tags:
        - rest
      summary: clearDatabaseCache
      operationId: clearDatabaseCache
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/HttpServletRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/getRecipegeneration:
    post:
      tags:
        - phocus-fld
      summary: getRecipegeneration
      operationId: getRecipegeneration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cultivationidList:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-fld/generateFertigationsReport:
    post:
      tags:
        - phocus-fld
      summary: getFertigationsReport
      operationId: getFertigationsReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  olap/executionData:
    post:
      tags:
        - olap
      summary: getExecutionData
      operationId: getExecutionData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduction%3E'
  billing/getPendingPurchaseInvoices:
    post:
      tags:
        - billing
      summary: getPendingPurchaseInvoices
      operationId: getPendingPurchaseInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingPurchaseInvoicesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchasenoteExtra%3E'
  redsys/activationsStatus:
    post:
      tags:
        - redsys
      summary: activationsStatus
      operationId: activationsStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'document/updateDocumentTags/{documentId}':
    post:
      tags:
        - document
      summary: updateDocumentTags
      operationId: updateDocumentTags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentId:
                  type: integer
                token:
                  type: string
                tags:
                  $ref: '#/components/schemas/List%3CTag%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  'presence/subjectWithCard/{cardserial}':
    post:
      tags:
        - presence
      summary: getSubjectWithCard
      operationId: getSubjectWithCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                cardserial:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
  redsys/getSSNumber:
    post:
      tags:
        - redsys
      summary: getSSNumber
      operationId: getSSNumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GetSSNumberInfo'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  durgastockservice/out:
    post:
      tags:
        - durgastockservice
      summary: out
      operationId: out
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  production/regenerateConsumptions:
    post:
      tags:
        - production
      summary: rebuildConsumptions
      operationId: rebuildConsumptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executionCodes:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'sage/laborAgreements/{companyId}':
    post:
      tags:
        - sage
      summary: laborAgreementsInCompany
      operationId: laborAgreementsInCompany
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                companyId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayList%3CConvenio%3E'
  'planification/currentPresenceOnLine/{line}/{timestamp}':
    post:
      tags:
        - planification
      summary: getPresenceAtTimeOnLine
      operationId: getPresenceAtTimeOnLine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                line:
                  type: integer
                token:
                  type: string
                timestamp:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentPresenceResponse'
  'garagedataperiod/printDefaultReport/{garageDataperiodId}':
    post:
      tags:
        - garagedataperiod
      summary: printDefaultReport
      operationId: printDefaultReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                garageDataperiodId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'salary/settlementGroupsForDate/{date}':
    post:
      tags:
        - salary
      summary: getSettlementGroupsForDate
      operationId: getSettlementGroupsForDate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                millis:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSettlementgroup%3E'
  phocus-fld/saveConsumption:
    post:
      tags:
        - phocus-fld
      summary: saveConsumption
      operationId: saveConsumption
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataperiodconsumption:
                  $ref: '#/components/schemas/FLDDataperiodConsumption'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumption'
  verdimedreport/nightlyHours:
    post:
      tags:
        - verdimedreport
      summary: getNightlyHours
      operationId: getNightlyHours
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  chk/activeWorker:
    post:
      tags:
        - chk
      summary: activeWorker
      operationId: activeWorker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CheckRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'LEXService/getCasefileDocuments/{casefileid}/{limit}':
    post:
      tags:
        - LEXService
      summary: getCasefileDocuments
      operationId: getCasefileDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                casefileid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFileResponse%3E'
  ghmv/accrualResume:
    post:
      tags:
        - ghmv
      summary: accrualResume
      operationId: accrualResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AccrualResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'form/getFormResume/{formid}':
    post:
      tags:
        - form
      summary: getFormResume
      operationId: getFormResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFormmeasure%3E'
  garagesalenote/getGaragesalenoteToSign:
    post:
      tags:
        - garagesalenote
      summary: getGaragesalenoteToSign
      operationId: getGaragesalenoteToSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocumentToSignDTO%3E'
  purchase/purchasesData:
    post:
      tags:
        - purchase
      summary: purchasesData
      operationId: purchasesData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PurchasesDataRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  sale/getSalenoteDetails:
    post:
      tags:
        - sale
      summary: getSalenoteDetails
      operationId: getSalenoteDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaledetailRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleResponse'
  phocusservice/productivityDailyResume:
    post:
      tags:
        - phocusservice
      summary: getProductivityDailyResume
      operationId: getProductivityDailyResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  olap/requiredTaskRythm:
    post:
      tags:
        - olap
      summary: getRequiredTaskRythm
      operationId: getRequiredTaskRythm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CRequiredTaskRythm%3E'
  'productdata/mergeProducts/{fromProductId}/{toProductId}/':
    post:
      tags:
        - productdata
      summary: mergeProducts
      operationId: mergeProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toProductId:
                  type: integer
                token:
                  type: string
                fromProductId:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'transaction/getSepa19/{transactionId}':
    post:
      tags:
        - transaction
      summary: getSepa19
      operationId: getSepa19
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sale/getSaleOrderIncidenceReceivers:
    post:
      tags:
        - sale
      summary: getSaleOrderIncidenceReceivers
      operationId: getSaleOrderIncidenceReceivers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  presence/printTicketOnTerminal:
    post:
      tags:
        - presence
      summary: printTicketOnTerminal
      operationId: printTicketOnTerminal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toPrint:
                  $ref: '#/components/schemas/Execution'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/generateFertigationFromRecommendation:
    post:
      tags:
        - phocus-fld
      summary: generateFertigationFromRecommendation
      operationId: generateFertigationFromRecommendation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateFertigationFromRecommendationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  settings/configStatus:
    post:
      tags:
        - settings
      summary: configStatus
      operationId: configStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  stock/rebuildFromInventory:
    post:
      tags:
        - stock
      summary: rebuildFromInventory
      operationId: rebuildFromInventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'production/getProvisioningLabelAdditionalInfo/{saleorderdetailid}':
    post:
      tags:
        - production
      summary: getProvisioningLabelAdditionalInfo
      operationId: getProvisioningLabelAdditionalInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleorderdetailid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionLabelInfo'
  production/autoAssociateProductionAndExecution:
    post:
      tags:
        - production
      summary: autoAssociateProductionAndExecution
      operationId: autoAssociateProductionAndExecution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AutoAssociationProductionExecutionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CExecution%3E'
  'productionforecast/getProductionForecast/{year}/{firstWeek}':
    post:
      tags:
        - productionforecast
      summary: getProductionForecast
      operationId: getProductionForecast
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                firstWeek:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWeeklyForecastResume%3E'
  planification/assignTaskToTimeticks:
    post:
      tags:
        - planification
      summary: suggestPeopleAssignation
      operationId: suggestPeopleAssignation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TimeticksFromTemplateSaveRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTimetick%3E'
  'LEXService/searchCasefileBySubject/{subjectid}':
    post:
      tags:
        - LEXService
      summary: searchCasefileBySubject
      operationId: searchCasefileBySubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCasefile%3E'
  'worknote/getSettlementsResume/{settlemetgroup}':
    post:
      tags:
        - worknote
      summary: getSettlementsResume
      operationId: getSettlementsResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementGroupId:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'presence/recalculateTicks/{date}':
    post:
      tags:
        - presence
      summary: recalculateTicks
      operationId: recalculateTicks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  stock/getStockResume:
    post:
      tags:
        - stock
      summary: getStockResume
      operationId: getStockResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/StockQuery'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockDetailResume'
  phocus-fld/generateFertigation:
    post:
      tags:
        - phocus-fld
      summary: generateFertigation
      operationId: generateFertigation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateFertigationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  worknote/getSeizuresPending:
    post:
      tags:
        - worknote
      summary: getSeizuresPending
      operationId: getSeizuresPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSettlementSeizureResume%3E'
  agrosabas/getSaleinviocedetailWithSalenote:
    post:
      tags:
        - agrosabas
      summary: getSaleinviocedetailWithSalenote
      operationId: getSaleinviocedetailWithSalenote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pc:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAgrosabasSaleinvoicedetailWithSalenoteDTO%3E'
  timetick/saveWorkedDayTimetick:
    post:
      tags:
        - timetick
      summary: saveWorkedDayTimetick
      operationId: saveWorkedDayTimetick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TimeticksFromTemplateSaveRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'fit/searchAppointmentCustomer/{fromDate}/{toDate}/{systemuser}':
    post:
      tags:
        - fit
      summary: searchAppointmentCustomer
      operationId: searchAppointmentCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromDate:
                  type: string
                toDate:
                  type: string
                systemuser:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAppointmentCustomerResponse%3E'
  phocus-fld/getTreatmentDiagramExcel:
    post:
      tags:
        - phocus-fld
      summary: getTreatmentDiagramExcel
      operationId: getTreatmentDiagramExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  chk/workerRegistration:
    post:
      tags:
        - chk
      summary: workerRegistration
      operationId: workerRegistration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/RegistrationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  production/printProvisioningEntity:
    post:
      tags:
        - production
      summary: printProvisioningEntity
      operationId: printProvisioningEntity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provision:
                  $ref: '#/components/schemas/Provision'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'sale/printCMR/{salenoteid}':
    post:
      tags:
        - sale
      summary: printCMR
      operationId: printCMR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduct%3E'
  settings/disablePrinting:
    post:
      tags:
        - settings
      summary: disablePrinting
      operationId: disablePrinting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/payrollAttachment:
    post:
      tags:
        - salary
      summary: getPayrollAttachment
      operationId: getPayrollAttachment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  fileservice/getSujectsWithPhoto:
    post:
      tags:
        - fileservice
      summary: getSubjectWithPhoto
      operationId: getSubjectWithPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'event/closePendingTask/{pendingtaskid}':
    post:
      tags:
        - event
      summary: closePendingTask
      operationId: closePendingTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pendingTaskId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pendingtask'
  'worknote/getWorkerPayments/{worker}':
    post:
      tags:
        - worknote
      summary: getWorkerPayments
      operationId: getWorkerPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPaymentWorkerResume%3E'
  'production/getProductivity/{month}/{year}':
    post:
      tags:
        - production
      summary: getProductivity
      operationId: getProductivity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                month:
                  type: integer
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkerPlus%3E'
  flexmonsterservice/fixExcelSheetFromBytesString:
    post:
      tags:
        - flexmonsterservice
      summary: fixExcelSheetFromBytes
      operationId: fixExcelSheetFromBytes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bytes:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  fit/getCustomersBalances:
    post:
      tags:
        - fit
      summary: getCustomersBalances
      operationId: getCustomersBalances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CustomersBalancesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCustomerBalance%3E'
  'models/revisionPendingModels/{revised}':
    post:
      tags:
        - models
      summary: revisionPendingModels
      operationId: revisionPendingModels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                revised:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CModeldeclaration%3E'
  models/saveInSageIncomeStatementBankAccount:
    post:
      tags:
        - models
      summary: saveInSageIncomeStatementBankAccount
      operationId: saveInSageIncomeStatementBankAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incomestatementbankaccount:
                  $ref: '#/components/schemas/Incomestatementbankaccount'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  phocus-fld/totalscultivationcost:
    post:
      tags:
        - phocus-fld
      summary: getTotalsOLAP
      operationId: getTotalsOLAP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CConsumptionAndHoursCostResponse%3E'
  'models/incomeStatement/{year}':
    post:
      tags:
        - models
      summary: getIncomeStatement
      operationId: getIncomeStatement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CIncomeStatementInformation%3E'
  'email/getAndStoreEmailFromZimbra/{subjectid}/{mailId}/{folderId}/{mailDate}/{mailChangeDate}/{emailAddress}':
    post:
      tags:
        - email
      summary: getAndStoreEmailFromZimbra
      operationId: getAndStoreEmailFromZimbra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mailChangeDate:
                  type: string
                emailAddress:
                  type: string
                mailId:
                  type: integer
                subjectid:
                  type: integer
                folderId:
                  type: integer
                mailDate:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailItem'
  chk/saveAttributeSubjectValue:
    post:
      tags:
        - chk
      summary: saveAttributeSubjectValue
      operationId: saveAttributeSubjectValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attributesubjectvalue:
                  $ref: '#/components/schemas/Attributesubjectvalue'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attributesubjectvalue'
  chk/filterField:
    post:
      tags:
        - chk
      summary: filterField
      operationId: filterField
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ObjectRenderRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRenderResponse'
  'laboral/searchLaboralworker/{laboralworker}':
    post:
      tags:
        - laboral
      summary: searchLaboralworker
      operationId: searchLaboralworker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                worker:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSearchLaboralworker%3E'
  stock/printStockchangeFormat:
    post:
      tags:
        - stock
      summary: printStockchangeFormat
      operationId: printStockchangeFormat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  event/newPendingTask:
    post:
      tags:
        - event
      summary: newPendingTask
      operationId: newPendingTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pendingTaskRequest:
                  $ref: '#/components/schemas/NewPendingTaskRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pendingtask'
  role/addRoleMenuitems:
    post:
      tags:
        - role
      summary: addRoleMenuitems
      operationId: addRoleMenuitems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/RoleMenuitemsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  stock/getPendingDocumentationSerialshippingcontainer:
    post:
      tags:
        - stock
      summary: getPendingDocumentationSerialshippingcontainer
      operationId: getPendingDocumentationSerialshippingcontainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialshippingcontainerResume%3E'
  'event/registerExecutionDuration/{executionid}/{duration}':
    post:
      tags:
        - event
      summary: registerExecutionDuration
      operationId: registerExecutionDuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: number
                executionid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionItem'
  sale/printPromissoryNotesPDF:
    post:
      tags:
        - sale
      summary: printPromissoryNotesPDF
      operationId: printPromissoryNotesPDF
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentidList:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'garagedataperiod/getGaragedataperiodsBySubject/{onlyOpen}':
    post:
      tags:
        - garagedataperiod
      summary: getGaragedataperiodsBySubject
      operationId: getGaragedataperiodsBySubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyOpen:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocumentToSignDTO%3E'
  attribute/getAttributeValue:
    post:
      tags:
        - attribute
      summary: getAttributeValue
      operationId: getAttributeValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AttributeValueRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  flexmonsterservice/saveOlapReport:
    post:
      tags:
        - flexmonsterservice
      summary: saveReport
      operationId: saveReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportConfiguration:
                  $ref: '#/components/schemas/ReportConfiguration'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  worknote/generateResume:
    post:
      tags:
        - worknote
      summary: generateResume
      operationId: generateResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SettlementGroupRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocusmes/enabledTriggers:
    post:
      tags:
        - phocusmes
      summary: enabledTriggers
      operationId: enabledTriggers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  salary/getSeizuresPending:
    post:
      tags:
        - salary
      summary: getSeizuresPending
      operationId: getSeizuresPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSeizureResume%3E'
  presence/ticksReport:
    post:
      tags:
        - presence
      summary: getPresence
      operationId: getPresence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocus-fld/enclosurePolygons:
    post:
      tags:
        - phocus-fld
      summary: getEnclosuresPolygons
      operationId: getEnclosuresPolygons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPolygon%3E'
  salary/validContracts:
    post:
      tags:
        - salary
      summary: validContracts
      operationId: validContracts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ValidContractsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map%3CInteger,%20List%3CContract%3E%3E'
  verdimedreport/sepeXml:
    post:
      tags:
        - verdimedreport
      summary: getSepeXml
      operationId: getSepeXml
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'stock/getStockForPlannedProduction/{plannedProductionId}':
    post:
      tags:
        - stock
      summary: getStockForPlannedProduction
      operationId: getStockForPlannedProduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plannedProductionId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockDataResponse'
  billing/getModel115DTO:
    post:
      tags:
        - billing
      summary: getModel115DTO
      operationId: getModel115DTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CModel115%3E'
  phocus-brd/getDataperiodResult:
    post:
      tags:
        - phocus-brd
      summary: getDataperiodResult
      operationId: getDataperiodResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/Dataperiod'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataperiodResultResponse'
  'myrtea/export/{path:.*}':
    post:
      tags:
        - myrtea
      summary: search
      operationId: search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportRequest'
                uriInfo:
                  $ref: '#/components/schemas/UriInfo'
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  salary/generateSettlementFromExcel:
    post:
      tags:
        - salary
      summary: generateSettlementFromExcel
      operationId: generateSettlementFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementGeneratorResponse'
  agrosabas/getWarehouseExcelReport:
    post:
      tags:
        - agrosabas
      summary: getWarehouseExcelReport
      operationId: getWarehouseExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  models/saveInSageNewIncomeStatementEstate:
    post:
      tags:
        - models
      summary: saveInSageNewIncomeStatementEstate
      operationId: saveInSageNewIncomeStatementEstate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incomestatementestate:
                  $ref: '#/components/schemas/Incomestatementestate'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  timetick/massiveUpdateImputations:
    post:
      tags:
        - timetick
      summary: massiveUpdateImputations
      operationId: massiveUpdateImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaveMassiveImputationsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CImputation%3E'
  'planification/currentPresenceResume/{timestamp}':
    post:
      tags:
        - planification
      summary: currentPresenceResume
      operationId: currentPresenceResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                timestamp:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentPresenceResume'
  planification/teamsExcel:
    post:
      tags:
        - planification
      summary: teamsExcel
      operationId: teamsExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  production/editPlannedProduction:
    post:
      tags:
        - production
      summary: editPlannedproduction
      operationId: editPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/EditPlannedproductionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  'presence/getPhotoForSubject/{subjectid}':
    post:
      tags:
        - presence
      summary: getPhotoForSubject
      operationId: getPhotoForSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  production/updateProductionCosts:
    post:
      tags:
        - production
      summary: updateProductionCosts
      operationId: updateProductionCosts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/UpdateProductionCostsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'models/getDocumentFor/{modelid}':
    post:
      tags:
        - models
      summary: getDocumentFor
      operationId: getDocumentFor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelDeclarationId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  email/startZimbraEmailImporter:
    post:
      tags:
        - email
      summary: startZimbraEmailImporter
      operationId: startZimbraEmailImporter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'fileservice/processParsed/{fileParseId}':
    post:
      tags:
        - fileservice
      summary: processParsed
      operationId: processParsed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileParserId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'purchase/unlinkPurchasenoteInpurchaseinvoice/{purchaseinvoiceid}/{purchasenoteid}':
    post:
      tags:
        - purchase
      summary: unlinkPurchasenoteInpurchaseinvoice
      operationId: unlinkPurchasenoteInpurchaseinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                purchasenoteid:
                  type: integer
                token:
                  type: string
                purchaseinvoiceid:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  traceability/entriesReport:
    post:
      tags:
        - traceability
      summary: getEntriesReport
      operationId: getEntriesReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'sale/risk/{customerId}':
    post:
      tags:
        - sale
      summary: getRisk
      operationId: getRisk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskResume'
  sale/printPromissoryNotes:
    post:
      tags:
        - sale
      summary: printPromissoryNotes
      operationId: printPromissoryNotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentidList:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduct%3E'
  phocus-fld/saveCultivation:
    post:
      tags:
        - phocus-fld
      summary: saveCultivation
      operationId: saveCultivation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataperiodCultivation:
                  $ref: '#/components/schemas/DataperiodCultivation'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'
  presence/monthlyticks:
    post:
      tags:
        - presence
      summary: monthlyTicks
      operationId: monthlyTicks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  accounting/updateContractorForAccountingEntries:
    post:
      tags:
        - accounting
      summary: updateContractorForAccountingEntries
      operationId: updateContractorForAccountingEntries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ChangeAccountingContractorRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'LEXService/getDataperiodDocuments/{dataperiodid}':
    post:
      tags:
        - LEXService
      summary: getDataperiodDocuments
      operationId: getDataperiodDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFileResponse%3E'
  stock/searchSerialShippingContainer:
    post:
      tags:
        - stock
      summary: searchSerialShippingContainer
      operationId: searchSerialShippingContainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SerialShippingSearchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialShippingContainerInfo%3E'
  'event/registerEmailEvent/{executorid}/{eventid}/{type}/{duration}':
    post:
      tags:
        - event
      summary: registerEmailEvent
      operationId: registerEmailEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: number
                eventid:
                  type: integer
                executorid:
                  type: integer
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'billing/getBankaccounts/{contractorId}':
    post:
      tags:
        - billing
      summary: getBankAccounts
      operationId: getBankAccounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contractorId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CBankaccount%3E'
  stock/getStockFromQuery:
    post:
      tags:
        - stock
      summary: getStockFromQuery
      operationId: getStockFromQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stockQuery:
                  $ref: '#/components/schemas/StockQuery'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockDataResponse'
  durgastockservice/weigh:
    post:
      tags:
        - durgastockservice
      summary: weigh
      operationId: weigh
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-fld/fldIntrastatDocument:
    post:
      tags:
        - phocus-fld
      summary: getFldIntrastatDocument
      operationId: getFldIntrastatDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'container/updateBox/{boxid}/{palletizerid}/{end}':
    post:
      tags:
        - container
      summary: updateBox
      operationId: updateBox
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                end:
                  type: string
                palletizerid:
                  type: integer
                token:
                  type: string
                boxid:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
  'kpi/chart-data/{widgetId}':
    post:
      tags:
        - kpi
      summary: getChartData
      operationId: getChartData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                widgetId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  'production/duplicateproduct/{productid}':
    post:
      tags:
        - production
      summary: duplicateOrder
      operationId: duplicateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  agricultural/hoursProcess:
    post:
      tags:
        - agricultural
      summary: hoursProcess
      operationId: hoursProcess
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  production/autoAssociateContainers:
    post:
      tags:
        - production
      summary: autoAssociateContainers
      operationId: autoAssociateContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AutoAssociateContainersRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/payrollNetResume:
    post:
      tags:
        - salary
      summary: getPayrollNetResume
      operationId: getPayrollNetResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sale/salesolap:
    post:
      tags:
        - sale
      summary: getSalesOlap
      operationId: getSalesOlap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleOlapDTO%3E'
  'sale/finalDestinationCustomer/{customerid}':
    post:
      tags:
        - sale
      summary: finalDestinationCustomer
      operationId: finalDestinationCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorderfinaldestination%3E'
  sale/closeProductionforecast:
    post:
      tags:
        - sale
      summary: closeProductionforecast
      operationId: closeProductionforecast
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductionForecastRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  warehouse/printReport:
    post:
      tags:
        - warehouse
      summary: printReport
      operationId: printReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-crm/leadsDTO:
    post:
      tags:
        - phocus-crm
      summary: getLeadsDTO
      operationId: getLeadsDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLeadDTO%3E'
  LEXService/casefiles:
    post:
      tags:
        - LEXService
      summary: getCasefiles
      operationId: getCasefiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                casefileSelectorFilter:
                  $ref: '#/components/schemas/CasefileSelectorFilter'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCasefile%3E'
  report/monthlyHours:
    post:
      tags:
        - report
      summary: getMonthlyHours
      operationId: getMonthlyHours
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  rest/instancesByPrimaryKey:
    post:
      tags:
        - rest
      summary: instancesByPrimaryKey
      operationId: instancesByPrimaryKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/InstancesByPrimaryKeyRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
  presence/workerCalendars:
    post:
      tags:
        - presence
      summary: getWorkerCalendars
      operationId: getWorkerCalendars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkerCalendar%3E'
  production/FactoryResumeExcelReport:
    post:
      tags:
        - production
      summary: getFactoryResumeExcelReport
      operationId: getFactoryResumeExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  presence/saveTimetick:
    post:
      tags:
        - presence
      summary: saveTimetick
      operationId: saveTimetick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timetick:
                  $ref: '#/components/schemas/Timetick'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetick'
  salary/workersExcel:
    post:
      tags:
        - salary
      summary: workersExcel
      operationId: workersExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sale/getOrderBySalenote:
    post:
      tags:
        - sale
      summary: getOrderBySalenote
      operationId: getOrderBySalenote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenote:
                  $ref: '#/components/schemas/Salenote'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  container/discardPallets:
    post:
      tags:
        - container
      summary: discardPallets
      operationId: discardPallets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serialshippingcontainerList:
                  $ref: '#/components/schemas/List%3CSerialshippingcontainer%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'scannerdocument/getRegionsFromProvider/{providerid}':
    post:
      tags:
        - scannerdocument
      summary: getRegionsFromProvider
      operationId: getRegionsFromProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                providerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProvidermodeldetail%3E'
  billing/getModel111Excel:
    post:
      tags:
        - billing
      summary: getModel111Excel
      operationId: getModel111Excel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  accounting/nonTotalCostcenterAssigned:
    post:
      tags:
        - accounting
      summary: nonTotalCostcenterAssigned
      operationId: nonTotalCostcenterAssigned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NonFinishedEntriesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CNonTotalCostcenterAssignedEntry%3E'
  production/getPendingSerialShippingContainer:
    post:
      tags:
        - production
      summary: getPendingSerialShippingContainer
      operationId: getPendingSerialShippingContainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSerialShippingContainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/generateSettlementSeizurePayments:
    post:
      tags:
        - salary
      summary: generateSettlementSeizurePayments
      operationId: generateSettlementSeizurePayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PaymentSettlementSeizureRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'fit/sendBalance/{customerid}/{fromDate}/{email}':
    post:
      tags:
        - fit
      summary: sendBalance
      operationId: sendBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromDate:
                  type: string
                email:
                  type: string
                token:
                  type: string
                customer:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  laboral/generateReport:
    post:
      tags:
        - laboral
      summary: generateReport
      operationId: generateReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ITRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  email/sendMail:
    post:
      tags:
        - email
      summary: sendMail
      operationId: sendMail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/Email'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
  'sage/uploadBalance/{customerid}/{year}':
    post:
      tags:
        - sage
      summary: uploadBalance
      operationId: uploadBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                stream:
                  $ref: '#/components/schemas/InputStream'
                customerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'event/getExecutionsForCasefile/{casefileid}':
    post:
      tags:
        - event
      summary: getExecutionsForCasefile
      operationId: getExecutionsForCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                casefileid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CExecution%3E'
  'stock/getLocationsWithStockByWarehouseAndProduct/{warehouseId}/{quantity}/{productId}':
    post:
      tags:
        - stock
      summary: getUbicationsWithStockFromQuery
      operationId: getUbicationsWithStockFromQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                productId:
                  type: integer
                warehouseId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CStocklocation%3E'
  billing/generateSaleInvoice:
    post:
      tags:
        - billing
      summary: generateSaleInvoice
      operationId: generateSaleInvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateSaleInvoicesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleinvoice%3E'
  traceability/createEntry:
    post:
      tags:
        - traceability
      summary: getEntries
      operationId: getEntries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CreateEntryRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
  salary/getNewWorkers:
    post:
      tags:
        - salary
      summary: getNewWorkers
      operationId: getNewWorkers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewWorkersRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorker%3E'
  sale/generateEDI:
    post:
      tags:
        - sale
      summary: generateEDI
      operationId: generateEDI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoiceList:
                  $ref: '#/components/schemas/List%3CSaleinvoice%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  production/deleteOrUpdatePlannedproduction:
    post:
      tags:
        - production
      summary: deleteOrUpdatePlannedproduction
      operationId: deleteOrUpdatePlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DeleteOrUpdatePlannedproduction'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/associateContainers:
    post:
      tags:
        - production
      summary: associateContainers
      operationId: associateContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AssociateContainersRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sale/printIntrastatPDF:
    post:
      tags:
        - sale
      summary: printIntrastatPDF
      operationId: printIntrastatPDF
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  mastrigo/getBatchFields:
    post:
      tags:
        - mastrigo
      summary: getBatchFields
      operationId: getBatchFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ExtraFieldsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CExecutionExtraField%3E'
  role/getMenuRoles:
    post:
      tags:
        - role
      summary: getMenuRoles
      operationId: getMenuRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  $ref: '#/components/schemas/Role'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  laboraldoc/generatePlanifications:
    post:
      tags:
        - laboraldoc
      summary: generatePlanifications
      operationId: generatePlanifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GeneratePlanificationsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'attribute/getClazzAttributes/{clazz}':
    post:
      tags:
        - attribute
      summary: getAttributeValue
      operationId: getAttributeValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                persistenceCriteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                clazzName:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAttribute%3E'
  laboraldoc/searchPlanifications:
    post:
      tags:
        - laboraldoc
      summary: searchPlanifications
      operationId: searchPlanifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SearchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralreportplanification%3E'
  fit/createSettlement:
    post:
      tags:
        - fit
      summary: createSettlement
      operationId: createSettlement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CreateSettlementRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settlement'
  models/saveIncomeStatement:
    post:
      tags:
        - models
      summary: saveIncomeStatement
      operationId: saveIncomeStatement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                information:
                  $ref: '#/components/schemas/IncomeStatementInformation'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeStatementInformation'
  production/getPendingSaleorderDetail:
    post:
      tags:
        - production
      summary: getPendingSaleorderDetail
      operationId: getPendingSaleorderDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSerialShippingContainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sage/changeLaboralcontracts:
    post:
      tags:
        - sage
      summary: changeLaboralcontracts
      operationId: changeLaboralcontracts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ChangeContractsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  LEXService/deleteDocuments:
    post:
      tags:
        - LEXService
      summary: deleteDocuments
      operationId: deleteDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentids:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'event/getSuggestedCasefiles/{executorid}/{customerid}':
    post:
      tags:
        - event
      summary: getSuggestedCasefiles
      operationId: getSuggestedCasefiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executorid:
                  type: integer
                customerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCasefile%3E'
  salary/uploadCompressedImputations:
    post:
      tags:
        - salary
      summary: uploadCompressedImputations
      operationId: uploadCompressedImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                zipFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  stock/getFreeSerialshippingcontainer:
    post:
      tags:
        - stock
      summary: getFreeSerialshippingcontainer
      operationId: getFreeSerialshippingcontainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialshippingcontainer%3E'
  worknote/updateSettlementsFromNominasol:
    post:
      tags:
        - worknote
      summary: updateSettlementsFromNominasol
      operationId: updateSettlementsFromNominasol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/UpdateSettlementsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'groupMessaging/{solutionId}/{groupid}/message':
    post:
      tags:
        - groupMessaging
      summary: sendMessage
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groupid:
                  type: integer
                solutionid:
                  type: integer
                message:
                  $ref: '#/components/schemas/Message'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  sale/importCustomers:
    post:
      tags:
        - sale
      summary: importCustomers
      operationId: importCustomers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  moyca/getExporterUpdateSentences:
    post:
      tags:
        - moyca
      summary: getExporterUpdateSentences
      operationId: getExporterUpdateSentences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  laboral/getIts:
    post:
      tags:
        - laboral
      summary: getIts
      operationId: getIts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ITRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralausenceExtended%3E'
  ghmv/clearBatch:
    post:
      tags:
        - ghmv
      summary: clearBatch
      operationId: clearBatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'laboraldoc/shareLaboralReport/{laboralreportdocumentid}':
    post:
      tags:
        - laboraldoc
      summary: shareLaboralReport
      operationId: shareLaboralReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralreportdocumentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareData'
  'garagedataperiod/getVehicles/{customerId}':
    post:
      tags:
        - garagedataperiod
      summary: getVehicles
      operationId: getVehicles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CGaragevehicleCustomerDTO%3E'
  phocus-fld/getFertigationRecommendationByIrrigationSectorResume:
    post:
      tags:
        - phocus-fld
      summary: getFertigationRecommendationByIrrigationSectorResume
      operationId: getFertigationRecommendationByIrrigationSectorResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TreatmentResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFertigationrecommendationByIrrigationSectorResume%3E'
  purchase/generatePurchaseOrders:
    post:
      tags:
        - purchase
      summary: generatePurchaseOrders
      operationId: generatePurchaseOrders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CPurchaseOrderFromSalesRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseorder%3E'
  'form/createForm/{entityclass}/{id}':
    post:
      tags:
        - form
      summary: createForm
      operationId: createForm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form:
                  $ref: '#/components/schemas/Form'
                entityId:
                  type: integer
                entityclass:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
  'garagedataperiod/getGaragedataperiodsToSign/{onlyPending}':
    post:
      tags:
        - garagedataperiod
      summary: getGaragedataperiodsToSign
      operationId: getGaragedataperiodsToSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyPending:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocumentToSignDTO%3E'
  billing/getModel115Excel:
    post:
      tags:
        - billing
      summary: getModel115Excel
      operationId: getModel115Excel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'salary/generateLoanPaymentFile/{loanpayment}':
    post:
      tags:
        - salary
      summary: generateLoanPaymentFile
      operationId: generateLoanPaymentFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loanPaymentId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  container/autoAssociateContainers:
    post:
      tags:
        - container
      summary: autoAssociateContainers
      operationId: autoAssociateContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AutoAssociateContainersRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'sage/getFilledDocuments/{form}':
    post:
      tags:
        - sage
      summary: getFilledDocuments
      operationId: getFilledDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form:
                  type: string
                stream:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'LEXService/getPlannedproductionsForResponsible/{responsibleid}/{maxDuedateDays}':
    post:
      tags:
        - LEXService
      summary: getPlannedproductionsForResponsible
      operationId: getPlannedproductionsForResponsible
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxDuedateDays:
                  type: integer
                responsibleid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPlannedproduction%3E'
  phocus-fld/sectorPolygonsRequest:
    post:
      tags:
        - phocus-fld
      summary: getSectorPolygons
      operationId: getSectorPolygons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SectorMapRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPolygon%3E'
  production/getAssignables:
    post:
      tags:
        - production
      summary: getAssignationPendingRecords
      operationId: getAssignationPendingRecords
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CForecast%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAssignable%3E'
  phocus-fld/saveFertigationChanges:
    post:
      tags:
        - phocus-fld
      summary: saveFertigationChanges
      operationId: saveFertigationChanges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FertigationChangesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  sale/confirmSaleNotes:
    post:
      tags:
        - sale
      summary: confirmSaleNotes
      operationId: confirmSaleNotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CSalenote%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSalenote%3E'
  presence/restingReport:
    post:
      tags:
        - presence
      summary: restingReport
      operationId: restingReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'phocus-crm/oportunityFromLead/{leadId}':
    post:
      tags:
        - phocus-crm
      summary: oportunityFromLead
      operationId: oportunityFromLead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                token:
                  type: string
                leadId:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
  'sale/downloadCMR/{salenoteid}':
    post:
      tags:
        - sale
      summary: downloadCMR
      operationId: downloadCMR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'rest/possibleValues/{path:.*}':
    post:
      tags:
        - rest
      summary: possibleValues
      operationId: possibleValues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uriInfo:
                  $ref: '#/components/schemas/UriInfo'
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
  agrosabas/getComercialExcelReport:
    post:
      tags:
        - agrosabas
      summary: getComercialExcelReport
      operationId: getComercialExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  salary/generateLoanPayments:
    post:
      tags:
        - salary
      summary: generateLoanPayments
      operationId: generateLoanPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PaymentLoanRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  redsys/deactivateWorkers:
    post:
      tags:
        - redsys
      summary: deactivateWorkers
      operationId: deactivateWorkers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  mailingservice/getSubjects:
    post:
      tags:
        - mailingservice
      summary: getSubjects
      operationId: getSubjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GetSubjectsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubjectsResponse'
  'messaging/addWorkertochatToUser/{subjectId}/{workerId}':
    post:
      tags:
        - messaging
      summary: addWorkertochatToUser
      operationId: addWorkertochatToUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workerId:
                  type: integer
                subjectId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocusservice/monitorableData:
    post:
      tags:
        - phocusservice
      summary: getMonitorableData
      operationId: getMonitorableData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'laboraldoc/getReportRequestUI/{reportId}':
    post:
      tags:
        - laboraldoc
      summary: getReportRequestUI
      operationId: getReportRequestUI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CString%3E'
  phocus-brd/generateLists:
    post:
      tags:
        - phocus-brd
      summary: generateLists
      operationId: generateLists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  production/getProductionIncidences:
    post:
      tags:
        - production
      summary: getProductionIncidences
      operationId: getProductionIncidences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/WorknotesIncidenceReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorknotesIncidenceReport'
  planification/suggestPeopleAssignation:
    post:
      tags:
        - planification
      summary: suggestPeopleAssignation
      operationId: suggestPeopleAssignation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/WorkstationAssignmentRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstationAssignmentResponse'
  'messaging/{solutionId}/markDelivered':
    post:
      tags:
        - messaging
      summary: markDelivered
      operationId: markDelivered
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                solutionid:
                  type: integer
                messagerecipientIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  groupMessaging/createGroup:
    post:
      tags:
        - groupMessaging
      summary: createGroup
      operationId: createGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CreateGroupRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  sage/laboralausences/sync:
    post:
      tags:
        - sage/laboralausences
      summary: sync
      operationId: sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itList:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  'phocusmes/getOEE/{lineid}':
    post:
      tags:
        - phocusmes
      summary: getOEE
      operationId: getOEE
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OEEData'
  'messaging/markMessagerecipientReceived/{messagerecipientId}':
    post:
      tags:
        - messaging
      summary: markMessagerecipientReceived
      operationId: markMessagerecipientReceived
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messagerecipientId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messagerecipient'
  presence/saveLocation:
    post:
      tags:
        - presence
      summary: saveLocation
      operationId: saveLocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaveLocationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'event/registerEmailPlannedproduction/{executorid}/{eventid}/{plannedproductionid}':
    post:
      tags:
        - event
      summary: registerEmailEvent
      operationId: registerEmailEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                plannedproductionid:
                  type: integer
                executorid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'chk/getInitialObjects/{dataperiodid}':
    post:
      tags:
        - chk
      summary: getInitialObjects
      operationId: getInitialObjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRenderResponse'
  flexmonsterservice/saveReportConfiguration:
    post:
      tags:
        - flexmonsterservice
      summary: saveOlapConfiguration
      operationId: saveOlapConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportConfiguration:
                  $ref: '#/components/schemas/ReportConfiguration'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  worknote/generateSettlementSeizurePayments:
    post:
      tags:
        - worknote
      summary: generateSettlementSeizurePayments
      operationId: generateSettlementSeizurePayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PaymentSettlementSeizureRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'ghmv/importAccountingEntry/{from}/{to}':
    post:
      tags:
        - ghmv
      summary: importAccountingEntry
      operationId: importAccountingEntry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toString:
                  type: string
                fromString:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  chk/addDataperiodmovement:
    post:
      tags:
        - chk
      summary: addDataperiodmovement
      operationId: addDataperiodmovement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AddDataperiodMovementRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  form/uploadPicture:
    post:
      tags:
        - form
      summary: uploadPicture
      operationId: uploadPicture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bytes:
                  $ref: '#/components/schemas/byte[]'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  purchase/generateTransportPurchaseInvoice:
    post:
      tags:
        - purchase
      summary: generateTransportPurchaseInvoice
      operationId: generateTransportPurchaseInvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TransportPurchaseInvoiceGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'phocus-fld/getPlotByWorkspace/{workspaceid}':
    post:
      tags:
        - phocus-fld
      summary: getPlotByWorkspace
      operationId: getPlotByWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                workspaceid:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPlot%3E'
  phocusmes/doSimpleTimeTick:
    post:
      tags:
        - phocusmes
      summary: timetickByIdCardNumber
      operationId: timetickByIdCardNumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SimpleTimetickRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetickInfoResponse'
  models/importmodel:
    post:
      tags:
        - models
      summary: importModel
      operationId: importModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ImportModelRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  scannerdocument/saveModel:
    post:
      tags:
        - scannerdocument
      summary: saveModel
      operationId: saveModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewModelRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  garagesalenote/signGaragesalenote:
    post:
      tags:
        - garagesalenote
      summary: signGaragesalenote
      operationId: signGaragesalenote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentToSignDTO:
                  $ref: '#/components/schemas/DocumentToSignDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  rest/resetSyncDatabase:
    post:
      tags:
        - rest
      summary: resetSyncDatabase
      operationId: resetSyncDatabase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  report/getCastillaFiles:
    post:
      tags:
        - report
      summary: getCastillaFiles
      operationId: getCastillaFiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocus-fld/getFertigationRecommendationResume:
    post:
      tags:
        - phocus-fld
      summary: getFertigationRecommendationResume
      operationId: getFertigationRecommendationResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TreatmentResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFertigationrecommendationgroupResume%3E'
  'billing/getChargeDueDatesFrom/{filename}':
    post:
      tags:
        - billing
      summary: getChargeDueDatesFrom
      operationId: getChargeDueDatesFrom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                file:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CChargeduedate%3E'
  salary/deleteImputations:
    post:
      tags:
        - salary
      summary: deleteImputations
      operationId: deleteImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imputations:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'LEXService/markNotenotificationReaded/{notenotificationId}':
    post:
      tags:
        - LEXService
      summary: markNotenotificationReaded
      operationId: markNotenotificationReaded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notenotificationId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notenotification'
  timetick/getTimeticks:
    post:
      tags:
        - timetick
      summary: getTimeticks
      operationId: getTimeticks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DailyTimetickGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  worknote/generateExcels:
    post:
      tags:
        - worknote
      summary: generateExcels
      operationId: generateExcels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SettlementGroupRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  productdata/resolverProduct:
    post:
      tags:
        - productdata
      summary: possibleValues
      operationId: possibleValues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductResolverRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduct%3E'
  'stock/printStockLocation/{stockLocationId}':
    post:
      tags:
        - stock
      summary: printDefaultReport
      operationId: printDefaultReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                stockLocationId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  billing/dueDatePending:
    post:
      tags:
        - billing
      summary: dueDatePending
      operationId: dueDatePending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DueDateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CObject%3E'
  'container/updatePallet/{palletizerid}/{palletid}/{sscc}/{start}/{end}':
    post:
      tags:
        - container
      summary: updatePallet
      operationId: updatePallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                palletid:
                  type: integer
                sscc:
                  type: string
                start:
                  type: string
                end:
                  type: string
                palletizerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PalletResponse'
  event/getEmailSmartPlannedproduction:
    post:
      tags:
        - event
      summary: getEmailSmartPlannedproduction
      operationId: getEmailSmartPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailSmartPlannedproductionRequest:
                  $ref: '#/components/schemas/EmailSmartPlannedproductionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  presence/excelTicksReport:
    post:
      tags:
        - presence
      summary: getExcelPresence
      operationId: getExcelPresence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'garagedataperiod/getGaragedataperiods/{onlyOpen}':
    post:
      tags:
        - garagedataperiod
      summary: getGaragedataperiods
      operationId: getGaragedataperiods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyOpen:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocumentToSignDTO%3E'
  sale/getProductionforecast:
    post:
      tags:
        - sale
      summary: getProductionforecast
      operationId: getProductionforecast
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductionForecastRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'fileservice/file/{path:.*}':
    post:
      tags:
        - fileservice
      summary: getFile
      operationId: getFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'report/getEmails/{type}':
    post:
      tags:
        - report
      summary: getEmails
      operationId: getEmails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'ui//{className}':
    post:
      tags:
        - ui
      summary: get
      operationId: get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uriInfo:
                  $ref: '#/components/schemas/UriInfo'
                className:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrudFormDefinition%3CObject%3E'
  nextcloud/getFullFolderTree/:
    post:
      tags:
        - nextcloud
      summary: getFullFolderTree
      operationId: getFullFolderTree
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTreeFolderResponse%3E'
  billing/getSaleInvoicesToMailing:
    post:
      tags:
        - billing
      summary: getSaleInvoicesToMailing
      operationId: getSaleInvoicesToMailing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaleInvoicesToMailingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleInvoicesToMailingResponse%3E'
  'nextcloud/deleteDocument/{documentid}':
    post:
      tags:
        - nextcloud
      summary: deleteDocument
      operationId: deleteDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'presence/workerTimetick/{date}':
    post:
      tags:
        - presence
      summary: getWorkerTimetick
      operationId: getWorkerTimetick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkerTimetick%3E'
  stock/stockData:
    post:
      tags:
        - stock
      summary: getStockData
      operationId: getStockData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CStockDataDetail%3E'
  accounting/getPDFBalance:
    post:
      tags:
        - accounting
      summary: getPDFBalance
      operationId: getPDFBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'timetick/generateAllTimeticks/{date}':
    post:
      tags:
        - timetick
      summary: generateAllTimeticks
      operationId: generateAllTimeticks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'production/getNonClassifiedProductsOfTypeForField/{productTypeId}/{attributeid}':
    post:
      tags:
        - production
      summary: getNonClassifiedProductsOfTypeForField
      operationId: getNonClassifiedProductsOfTypeForField
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attributeid:
                  type: integer
                producttypeid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduct%3E'
  stock/generateStockadjustment:
    post:
      tags:
        - stock
      summary: generateStockadjustment
      operationId: generateStockadjustment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stockadjustment:
                  $ref: '#/components/schemas/Stockadjustment'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stockadjustment'
  salary/getNewCession:
    post:
      tags:
        - salary
      summary: getNewCession
      operationId: getNewCession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewWorkersRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCessionResume%3E'
  phocus-fld/importSigpacFromExcel:
    post:
      tags:
        - phocus-fld
      summary: importSigpacFromExcel
      operationId: importSigpacFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-brd/BRDSacrificeResume:
    post:
      tags:
        - phocus-brd
      summary: getFLDResume
      operationId: getFLDResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BRDSacrificeResumeResponse'
  production/createPlannedProductionByTask:
    post:
      tags:
        - production
      summary: createPlannedProductionByTask
      operationId: createPlannedProductionByTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plannedproduction:
                  $ref: '#/components/schemas/Plannedproduction'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPlannedproduction%3E'
  salary/updateHourlyPrice:
    post:
      tags:
        - salary
      summary: updateHourlyPrice
      operationId: updateHourlyPrice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/UpdateHourlyPriceRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  laboraldoc/getReport:
    post:
      tags:
        - laboraldoc
      summary: getReport
      operationId: getReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Laboralreportdocument'
  production/getAssignablesFromPlanification:
    post:
      tags:
        - production
      summary: getAssignablesFromPlanification
      operationId: getAssignablesFromPlanification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CPendingAssignationRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAssignable%3E'
  phocus-fld/linkedCultivtionProduction:
    post:
      tags:
        - phocus-fld
      summary: linkedCultivtionProduction
      operationId: linkedCultivtionProduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductionCultivationsLinkedRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'garagedataperiod/sendGaragedataperiodToSign/{garagedataperiodid}':
    post:
      tags:
        - garagedataperiod
      summary: sendGaragedataperiodToSign
      operationId: sendGaragedataperiodToSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagedataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  laboral/redSendDetail:
    post:
      tags:
        - laboral
      summary: redSend
      operationId: redSend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralausencedetail:
                  $ref: '#/components/schemas/Laboralausencedetail'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Laboralausencedetail'
  role/saveMenu:
    post:
      tags:
        - role
      summary: saveMenu
      operationId: saveMenu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menu:
                  $ref: '#/components/schemas/List%3CMenuitem%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'sale/duplicateOrder/{saleorderid}/{duplicateDetails}':
    post:
      tags:
        - sale
      summary: duplicateOrder
      operationId: duplicateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleorderid:
                  type: integer
                duplicateDetails:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saleorder'
  laboraldoc/searchDocuments:
    post:
      tags:
        - laboraldoc
      summary: searchDocuments
      operationId: searchDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SearchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralreportdocument%3E'
  garagedataperiod/getGaragedataperiodsToSign:
    post:
      tags:
        - garagedataperiod
      summary: getGaragedataperiodsToSign
      operationId: getGaragedataperiodsToSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocumentToSignDTO%3E'
  elite/workspace:
    post:
      tags:
        - elite
      summary: getWorkspaces
      operationId: getWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCustomer%3E'
  'fit/balance/{user}':
    post:
      tags:
        - fit
      summary: getBalance
      operationId: getBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestedUser:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: number
  chk/modifiedDataperiod:
    post:
      tags:
        - chk
      summary: modifiedDataperiod
      operationId: modifiedDataperiod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/Modifieddataperiod'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocusservice/saveMenu:
    post:
      tags:
        - phocusservice
      summary: saveMenu
      operationId: saveMenu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menu:
                  $ref: '#/components/schemas/LinkedList%3CMenuitem%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  timetick/searchTimeticks:
    post:
      tags:
        - timetick
      summary: searchTimeticks
      operationId: searchTimeticks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SearchTimeTicksRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  salary/importDataPeriodsFromExcel:
    post:
      tags:
        - salary
      summary: importDataperiodsFromExcel
      operationId: importDataperiodsFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  worker/importWorkersFromExcel:
    post:
      tags:
        - worker
      summary: importWorkersFromExcel
      operationId: importWorkersFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  timetick/updateWorkerWorkspace:
    post:
      tags:
        - timetick
      summary: updateWorkerWorkspace
      operationId: updateWorkerWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/UpdateWorkspaceRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-fld/excelreportConsumptionAndProductionscost:
    post:
      tags:
        - phocus-fld
      summary: excelReportConsumptionAndProductionsCost
      operationId: excelReportConsumptionAndProductionsCost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  nextcloud/deleteDocuments:
    post:
      tags:
        - nextcloud
      summary: deleteDocuments
      operationId: deleteDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentids:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'sale/forecast/{year}/{week}':
    post:
      tags:
        - sale
      summary: getForecastFor
      operationId: getForecastFor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                week:
                  type: integer
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastResponse'
  'garagedataperiod/getNotesImages/{garagedataperiodnoteid}':
    post:
      tags:
        - garagedataperiod
      summary: getNotesImages
      operationId: getNotesImages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagedataperiodnoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CGarageDataperiodNoteImageDTO%3E'
  'models/setaccount/{subjectid}/{accountid}':
    post:
      tags:
        - models
      summary: setAccount
      operationId: setAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountid:
                  type: string
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  LEXService/getBirthdayWix:
    post:
      tags:
        - LEXService
      summary: getBirthdayWix
      operationId: getBirthdayWix
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts:
                  $ref: '#/components/schemas/List%3CContactWix%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CContactWix%3E'
  'salary/createWorkerFromSubject/{subjectid}':
    post:
      tags:
        - salary
      summary: createWorkerFromSubject
      operationId: createWorkerFromSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
  'sage/laboralausences/sync/{id}':
    post:
      tags:
        - sage/laboralausences
      summary: sync
      operationId: sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  chk/report:
    post:
      tags:
        - chk
      summary: report
      operationId: report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  mcn/garageDataperiodMaterialsOLAP:
    post:
      tags:
        - mcn
      summary: garageDataperiodMaterialsOLAP
      operationId: garageDataperiodMaterialsOLAP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/McnOlapRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CGarageDataperiodMaterialsItem%3E'
  manager/status:
    post:
      tags:
        - manager
      summary: status
      operationId: status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/dataperiodDay:
    post:
      tags:
        - phocus-fld
      summary: dataperiodDay
      operationId: dataperiodDay
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DataperiodSearchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDataperiodResume%3E'
  'culture/generateNoteExpense/{year}/{company}/{templateType}':
    post:
      tags:
        - culture
      summary: generateNoteExpense
      operationId: generateNoteExpense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateType:
                  $ref: '#/components/schemas/CultureTemplateType'
                year:
                  type: integer
                company:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  crm/updateAttributeValuesSubject:
    post:
      tags:
        - crm
      summary: updateAttributeValuesSubject
      operationId: updateAttributeValuesSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attributeValuesSubjectDTO:
                  $ref: '#/components/schemas/AttributeValuesSubjectDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  purchase/addPurchaseinvoicedetail:
    post:
      tags:
        - purchase
      summary: addPurchaseinvoicedetail
      operationId: addPurchaseinvoicedetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PurchaseinvoicedetailWithCostcenter'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  production/generateProductionFromAssignables:
    post:
      tags:
        - production
      summary: generateProductionFromAssignables
      operationId: generateProductionFromAssignables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CAssignable%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/getProductionWithoutCultivation:
    post:
      tags:
        - phocus-fld
      summary: getProductionWithoutCultivation
      operationId: getProductionWithoutCultivation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/Map%3CString,Object%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduction%3E'
  'event/updateExecutionDelegateSubject/{executionid}/{subjectid}':
    post:
      tags:
        - event
      summary: updateExecutionDelegateSubject
      operationId: updateExecutionDelegateSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executionid:
                  type: integer
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionItem'
  role/removeRoleMenuitems:
    post:
      tags:
        - role
      summary: removeRoleMenuitems
      operationId: removeRoleMenuitems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/RoleMenuitemsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  production/getProductionList:
    post:
      tags:
        - production
      summary: getProductionList
      operationId: getProductionList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductionListRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductionResume%3E'
  elite/importWorkers:
    post:
      tags:
        - elite
      summary: importWorkers
      operationId: importWorkers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorker%3E'
  'purchase/getProvidersProduct/{productid}':
    post:
      tags:
        - purchase
      summary: getProvidersProduct
      operationId: getProvidersProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProviderproduct%3E'
  'production/getProductSalesPurchasesHistory/{productId}':
    post:
      tags:
        - production
      summary: getProductSalesPurchasesHistory
      operationId: getProductSalesPurchasesHistory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSalesPurchasesHistoryDTO'
  'laboraldoc/deleteShareLaboralReport/{laboralreportdocumentid}/{shareid}':
    post:
      tags:
        - laboraldoc
      summary: deleteShareLaboralReport
      operationId: deleteShareLaboralReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shareId:
                  type: integer
                laboralreportdocumentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  phocus-fld/cultivationsReport:
    post:
      tags:
        - phocus-fld
      summary: cultivationsReport
      operationId: cultivationsReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  warehouse/importDataperiodTemplate:
    post:
      tags:
        - warehouse
      summary: importDataperiodTemplate
      operationId: importDataperiodTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'LEXService/getGeneralPlannedproductionForCasefile/{casefileId}':
    post:
      tags:
        - LEXService
      summary: getGeneralPlannedproductionForCasefile
      operationId: getGeneralPlannedproductionForCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                casefileId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  sale/getSaleProducts:
    post:
      tags:
        - sale
      summary: getSaleProducts
      operationId: getSaleProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduct%3E'
  'phocus-brd/getDataperiodexecution/{dataperiodid}':
    post:
      tags:
        - phocus-brd
      summary: getDataperiodexecution
      operationId: getDataperiodexecution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDataperiodexecution%3E'
  phocus-fld/saveCultivationGeopoints:
    post:
      tags:
        - phocus-fld
      summary: saveCultivationGeopoints
      operationId: saveCultivationGeopoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geopoints:
                  $ref: '#/components/schemas/List%3CCultivationgeopoint%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'sage/uploadFacturatechInvoices/{customerid}/{year}/{type}':
    post:
      tags:
        - sage
      summary: uploadFacturatechInvoices
      operationId: uploadFacturatechInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                stream:
                  $ref: '#/components/schemas/InputStream'
                customerid:
                  type: integer
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'fit/addCustomerToAppointment/{appointmentid}':
    post:
      tags:
        - fit
      summary: addCustomerToAppointment
      operationId: addCustomerToAppointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  sale/getPendingSaleOrderDetails:
    post:
      tags:
        - sale
      summary: getPendingSaleOrderDetails
      operationId: getPendingSaleOrderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSaleOrderDetailsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorderdetail%3E'
  worker/importWorkers:
    post:
      tags:
        - worker
      summary: importWorkersFromExcel
      operationId: importWorkersFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/makeNewHires:
    post:
      tags:
        - salary
      summary: makeNewHires
      operationId: makeNewHires
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workerList:
                  $ref: '#/components/schemas/List%3CWorker%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  role/updateRole:
    post:
      tags:
        - role
      summary: updateRole
      operationId: updateRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  $ref: '#/components/schemas/Role'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  purchase/recalculateTransportCost:
    post:
      tags:
        - purchase
      summary: recalculateTransportCost
      operationId: recalculateTransportCost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SalenoteTransportPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  purchase/getPendingNoteSaleOrderDetails:
    post:
      tags:
        - purchase
      summary: getPendingNoteSaleOrderDetails
      operationId: getPendingNoteSaleOrderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingPurchaseOrderDetailsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseorderdetail%3E'
  worknote/calculateProfit:
    post:
      tags:
        - worknote
      summary: calculateProfit
      operationId: calculateProfit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ResumedDataperiodRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  presence/rejectVacation:
    post:
      tags:
        - presence
      summary: rejectVacation
      operationId: rejectVacation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectVacationIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  chk/getSSNumber:
    post:
      tags:
        - chk
      summary: getSSNumber
      operationId: getSSNumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SSNumberRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/getProductivityResumedByWorker:
    post:
      tags:
        - production
      summary: getProductivityResumedByWorker
      operationId: getProductivityResumedByWorker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  production/printProvisioning:
    post:
      tags:
        - production
      summary: printProvisioning
      operationId: printProvisioning
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PrintProvisioningRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  accounting/getBalanceDetailed:
    post:
      tags:
        - accounting
      summary: getBalanceDetailed
      operationId: getBalanceDetailed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResult'
  billing/payDueDatePending:
    post:
      tags:
        - billing
      summary: payDueDatePending
      operationId: payDueDatePending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PayDueDateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  'LEXService/activeworkersreport/{laboralContractorId}/{forceItaUpdate}':
    post:
      tags:
        - LEXService
      summary: getActiveWorkerReport
      operationId: getActiveWorkerReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralcontractorid:
                  type: integer
                forceItaUpdate:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activeworkerreport'
  planification/getAvailablePeople:
    post:
      tags:
        - planification
      summary: getAvailablePeople
      operationId: getAvailablePeople
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorker%3E'
  phocusservice/login:
    post:
      tags:
        - phocusservice
      summary: login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  billing/getPurchaseInvoices:
    post:
      tags:
        - billing
      summary: getPurchaseInvoices
      operationId: getPurchaseInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                criteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseInvoiceExtra%3E'
  warehouse/productioncard:
    post:
      tags:
        - warehouse
      summary: readProductioncard
      operationId: readProductioncard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReadproductioncardRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodereadedResponse'
  'messaging/{solutionId}/markReaded':
    post:
      tags:
        - messaging
      summary: markReaded
      operationId: markReaded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                solutionid:
                  type: integer
                messagerecipientIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  messaging/search/message:
    post:
      tags:
        - messaging
      summary: getMessages
      operationId: getMessages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SearchMessagesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CMessage%3E'
  phocusservice/roles:
    post:
      tags:
        - phocusservice
      summary: getRoles
      operationId: getRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CRole%3E'
  'production/productTasks/{taskId}':
    post:
      tags:
        - production
      summary: getProductsWithoutProductionCost
      operationId: getProductsWithoutProductionCost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProducttask%3E'
  stock/addInventoryDetailToProductAndLocation/:
    post:
      tags:
        - stock
      summary: addInventoryDetailToProductAndLocation
      operationId: addInventoryDetailToProductAndLocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addInventoryDetailDTO:
                  $ref: '#/components/schemas/AddInventoryDetailDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  olap/taskCosts:
    post:
      tags:
        - olap
      summary: getTaskCosts
      operationId: getTaskCosts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTaskCost%3E'
  worknote/generateVerificationExcel:
    post:
      tags:
        - worknote
      summary: generateVerificationExcel
      operationId: generateVerificationExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SettlementGroupRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/createImputationsFromTemplate:
    post:
      tags:
        - salary
      summary: createImputationsFromTemplate
      operationId: createImputationsFromTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                zipFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  mcn/cleanProviderInCustomer:
    post:
      tags:
        - mcn
      summary: cleanProviderInCustomer
      operationId: cleanProviderInCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  warehouse/activeProductions:
    post:
      tags:
        - warehouse
      summary: getActiveProductions
      operationId: getActiveProductions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionResponse'
  'flexmonsterservice/olapReport/{reportid}':
    post:
      tags:
        - flexmonsterservice
      summary: getReport
      operationId: getReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'chat/getDialogFromCasefile/{accountId}/{idcasefile}':
    post:
      tags:
        - chat
      summary: getDialogFromCasefile
      operationId: getDialogFromCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: integer
                token:
                  type: string
                idcasefile:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map%3CLong,%20List%3CDialog%3E%3E'
  timetick/fixTimeticks:
    post:
      tags:
        - timetick
      summary: fixTimeticks
      operationId: fixTimeticks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CTimetick%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  accounting/getAccounts:
    post:
      tags:
        - accounting
      summary: getAccounts
      operationId: getAccounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AccountSearchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CComposedAccount%3E'
  'rest//{path:.*}':
    post:
      tags:
        - rest
      summary: get
      operationId: get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uriInfo:
                  $ref: '#/components/schemas/UriInfo'
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  'email/markEmailReaded/{eventid}/{readed}':
    post:
      tags:
        - email
      summary: markEmailReaded
      operationId: markEmailReaded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                readed:
                  type: boolean
                eventid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
  'phocusmes/doTimeTick/{terminalId}/{assetid}/{timestamp}':
    post:
      tags:
        - phocusmes
      summary: getTime
      operationId: getTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetid:
                  type: integer
                terminal:
                  type: string
                token:
                  type: string
                timestamp:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetickInfoResponse'
  groupMessaging/createGroupByCasefile:
    post:
      tags:
        - groupMessaging
      summary: createGroupByCasefile
      operationId: createGroupByCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CreateGroupRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  billing/getDocumentTotalizer:
    post:
      tags:
        - billing
      summary: getDocumentTotalizer
      operationId: getDocumentTotalizer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/List%3CDocumentEntity%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTotalizer'
  phocus-fld/generateFertigationRecommendations:
    post:
      tags:
        - phocus-fld
      summary: generateFertigationRecommendations
      operationId: generateFertigationRecommendations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateFertigationRecommendationsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-fld/waterPerWorkspaceExcel:
    post:
      tags:
        - phocus-fld
      summary: waterPerWorkspaceExcel
      operationId: waterPerWorkspaceExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  billing/importPdfInvoice:
    post:
      tags:
        - billing
      summary: importPdfInvoice
      operationId: importPdfInvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pdfFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchaseinvoice'
  'email/uploadAttachment/{filename}':
    post:
      tags:
        - email
      summary: uploadAttachment
      operationId: uploadAttachment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                file:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
  billing/salenoteFormats:
    post:
      tags:
        - billing
      summary: getSalenoteFormats
      operationId: getSalenoteFormats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInvoiceFormat%3E'
  salary/getSeizureExtra:
    post:
      tags:
        - salary
      summary: getSeizureExtra
      operationId: getSeizureExtra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                criteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSeizureExtra%3E'
  crm/updateAttributeValuesSubjects:
    post:
      tags:
        - crm
      summary: updateAttributeValuesSubjects
      operationId: updateAttributeValuesSubjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attributeValuesSubjectDTOs:
                  $ref: '#/components/schemas/List%3CAttributeValuesSubjectDTO%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'billing/updateSalenoteChecked/{saleNoteId}/{checked}':
    post:
      tags:
        - billing
      summary: updateSalenoteChecked
      operationId: updateSalenoteChecked
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleNoteId:
                  type: integer
                checked:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  groupMessaging/addMembersToGroup:
    post:
      tags:
        - groupMessaging
      summary: addMembersToGroup
      operationId: addMembersToGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/MemberGroupRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  production/updateExecutions:
    post:
      tags:
        - production
      summary: updateExecutions
      operationId: updateExecutions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CExecution%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/generateTreatments:
    post:
      tags:
        - phocus-fld
      summary: generateTreatments
      operationId: generateTreatments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateTreatmentsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocusservice/getUsers:
    post:
      tags:
        - phocusservice
      summary: getAccounts
      operationId: getAccounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAccount%3E'
  'phocus-fld/getEnclosureData/{enclosureId}':
    post:
      tags:
        - phocus-fld
      summary: getEnclosureData
      operationId: getEnclosureData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enclosureId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnclosureDataDTO'
  presence/registerCard:
    post:
      tags:
        - presence
      summary: registerCard
      operationId: registerCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/RegisterPresenceCardRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  chk/saveTimetick:
    post:
      tags:
        - chk
      summary: saveTimetick
      operationId: saveTimetick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timetick:
                  $ref: '#/components/schemas/Timetick'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetick'
  salary/makeNewCession:
    post:
      tags:
        - salary
      summary: makeNewCession
      operationId: makeNewCession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/MakeNewCessionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  billing/getCMRAvailableFormats:
    post:
      tags:
        - billing
      summary: getCMRAvailableFormats
      operationId: getCMRAvailableFormats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInvoiceFormat%3E'
  'garagedataperiod/deleteNoteImage/{garagedataperiodnoteimageid}':
    post:
      tags:
        - garagedataperiod
      summary: deleteNoteImage
      operationId: deleteNoteImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagedataperiodnoteimageid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  task/pendingEmails:
    post:
      tags:
        - task
      summary: getMails
      operationId: getMails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CEmail%3E'
  'phocus-fld/duplicateCultivation/{cultivationId}':
    post:
      tags:
        - phocus-fld
      summary: duplicateCultivation
      operationId: duplicateCultivation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DuplicateCultivationRequest'
                cultivationId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'
  'laboraldoc/sendLaboralreport/{laboralreportdocumentid}/{emailList}':
    post:
      tags:
        - laboraldoc
      summary: sendLaboralreport
      operationId: sendLaboralreport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailList:
                  type: string
                laboralreportdocumentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  laboral/redDownloadCheck:
    post:
      tags:
        - laboral
      summary: redDownloadCheck
      operationId: redDownloadCheck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralausencedetail:
                  $ref: '#/components/schemas/Laboralausencedetail'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocus-fld/sectorPolygons:
    post:
      tags:
        - phocus-fld
      summary: getSectorPolygons
      operationId: getSectorPolygons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPolygon%3E'
  billing/invoiceFormats:
    post:
      tags:
        - billing
      summary: getInvoiceFormats
      operationId: getInvoiceFormats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInvoiceFormat%3E'
  'digitalcertificate/downloadFile/{advisercustomerid}/{notificationId}':
    post:
      tags:
        - digitalcertificate
      summary: downloadNotificationFile
      operationId: downloadNotificationFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notificationId:
                  type: integer
                advisercustomerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
  sale/salesDataV2:
    post:
      tags:
        - sale
      summary: getSalesDataV2
      operationId: getSalesDataV2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SalesDataRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  garagedataperiod/getGarageSaleNoteGenerationDTO:
    post:
      tags:
        - garagedataperiod
      summary: getGarageSaleNoteGenerationDTO
      operationId: getGarageSaleNoteGenerationDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pc:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CGarageSaleNoteGenerationDTO%3E'
  'stock/getLocationsWithStockFromQuery/{quantity}/{allLocationsIfNotStock}':
    post:
      tags:
        - stock
      summary: getUbicationsWithStockFromQuery
      operationId: getUbicationsWithStockFromQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                allLocationsIfNotStock:
                  type: boolean
                stockQuery:
                  $ref: '#/components/schemas/StockQuery'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CStocklocation%3E'
  sale/getSaleorderIncidenceResume:
    post:
      tags:
        - sale
      summary: getSaleorderIncidenceResume
      operationId: getSaleorderIncidenceResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleorderdetailid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrderIncidenceResume'
  timetick/saveCalendars:
    post:
      tags:
        - timetick
      summary: saveCalendars
      operationId: saveCalendars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaveCalendarsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  olap/oee:
    post:
      tags:
        - olap
      summary: getOEE
      operationId: getOEE
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3COEEData%3E'
  workerCalendar/getTemplate:
    post:
      tags:
        - workerCalendar
      summary: getTemplate
      operationId: getTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateRequest:
                  $ref: '#/components/schemas/TemplateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  presence/workedTime:
    post:
      tags:
        - presence
      summary: getWorkedTime
      operationId: getWorkedTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CImputationInterval%3E'
  accounting/nonFinishedEntries:
    post:
      tags:
        - accounting
      summary: nonFinishedEntries
      operationId: nonFinishedEntries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NonFinishedEntriesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CNonFinishedEntry%3E'
  scannerdocument/getFile:
    post:
      tags:
        - scannerdocument
      summary: getFile
      operationId: getFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'worker/normalizeWorkers/{assetid}':
    post:
      tags:
        - worker
      summary: normalizeWorkers
      operationId: normalizeWorkers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
  'planification/selectResources/{planificationid}/{onlyPending}':
    post:
      tags:
        - planification
      summary: selectAssets
      operationId: selectAssets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyPending:
                  type: boolean
                planificationid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Planification'
  presence/excelreportfortnight:
    post:
      tags:
        - presence
      summary: excelReportFortnight
      operationId: excelReportFortnight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  worknote/generateSettlementPayments:
    post:
      tags:
        - worknote
      summary: generateSettlementPayments
      operationId: generateSettlementPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PaymentSettlementRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  stock/getPendingSerialshippingcontainer:
    post:
      tags:
        - stock
      summary: getPendingSerialshippingcontainer
      operationId: getPendingSerialshippingcontainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialshippingcontainerResume%3E'
  phocus-fld/getTreatmentDiagramData:
    post:
      tags:
        - phocus-fld
      summary: getTreatmentDiagramData
      operationId: getTreatmentDiagramData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FLDTreatmentExcelReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCultivationTreatments%3E'
  'nextcloud/getNoteDocuments/{type}/{noteId}/{limit}':
    post:
      tags:
        - nextcloud
      summary: getNoteDocuments
      operationId: getNoteDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                noteId:
                  type: integer
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFileResponse%3E'
  LEXService/loginZimbra:
    post:
      tags:
        - LEXService
      summary: loginZimbra
      operationId: loginZimbra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZimbraLoginResult'
  presence/getETTWorkedDay:
    post:
      tags:
        - presence
      summary: getETTWorkedDay
      operationId: getETTWorkedDay
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ETTWorkedDayRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETTWorkedDay'
  mcn/mcnReport:
    post:
      tags:
        - mcn
      summary: mcnReport
      operationId: mcnReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/McnReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'stock/getSerialshippingcontainerPlannedproduction/{plannedproductionId}':
    post:
      tags:
        - stock
      summary: getSerialshippingcontainerPlannedproduction
      operationId: getSerialshippingcontainerPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plannedProductionId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialshippingcontainerResume%3E'
  'productdata/getProductData/{productId}/{customerId}':
    post:
      tags:
        - productdata
      summary: getProductData
      operationId: getProductData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                customerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDataDTO'
  mailingservice/saveSubjects:
    post:
      tags:
        - mailingservice
      summary: saveSubjects
      operationId: saveSubjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaveSubjectRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  accounting/getDiary:
    post:
      tags:
        - accounting
      summary: getDiary
      operationId: getDiary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportDiaryRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'fit/trainersReport/{fromDate}/{toDate}/{email}':
    post:
      tags:
        - fit
      summary: sendTrainersReport
      operationId: sendTrainersReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromDate:
                  type: string
                toDate:
                  type: string
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'accounting/generateAmortizations/{depreciableAssetId}':
    post:
      tags:
        - accounting
      summary: generateAmortizations
      operationId: generateAmortizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                depreciableAssetId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAmortizationdetail%3E'
  'sage/getCheck349Info/{year}':
    post:
      tags:
        - sage
      summary: getCheck349Info
      operationId: getCheck349Info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCheck349Info%3E'
  'phocusservice/addRoleToUser/{accountid}/{roleid}':
    post:
      tags:
        - phocusservice
      summary: addRoleToUser
      operationId: addRoleToUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountid:
                  type: integer
                roleid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'form/createFormsampling/{entityclass}/{id}':
    post:
      tags:
        - form
      summary: createFormsampling
      operationId: createFormsampling
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formsampling:
                  $ref: '#/components/schemas/Formsampling'
                entityId:
                  type: integer
                entityclass:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
  sale/generateEDINote:
    post:
      tags:
        - sale
      summary: generateEDINote
      operationId: generateEDINote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenote:
                  $ref: '#/components/schemas/Salenote'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sale/getSalenoteReportByIds:
    post:
      tags:
        - sale
      summary: getSalenoteReportByIds
      operationId: getSalenoteReportByIds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'LEXService/getAEATCertificateForSubject/{subjectId}/{certificateType}':
    post:
      tags:
        - LEXService
      summary: getAEATCertificateForSubject
      operationId: getAEATCertificateForSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectId:
                  type: integer
                token:
                  type: string
                certificateType:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  chk/getUserDataperiodtype:
    post:
      tags:
        - chk
      summary: getUserDataperiodtype
      operationId: getUserDataperiodtype
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDataperiodtype%3E'
  sale/getPendingSaleNotes:
    post:
      tags:
        - sale
      summary: getPendingSaleNotes
      operationId: getPendingSaleNotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSaleNotesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSalenote%3E'
  sale/generateSaleNotes:
    post:
      tags:
        - sale
      summary: generateSaleNotes
      operationId: generateSaleNotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CreateSaleNotesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSalenote%3E'
  'mcn/getGarageVehicleHistory/{garageVehicleId}':
    post:
      tags:
        - mcn
      summary: getGarageVehicleHistory
      operationId: getGarageVehicleHistory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garageVehicleId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GarageVehicleHistoryDTO'
  presence/approveVacation:
    post:
      tags:
        - presence
      summary: approveVacation
      operationId: approveVacation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectVacationIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'event/getEventSmartPlannedproduction/{executorid}/{eventid}':
    post:
      tags:
        - event
      summary: getEventSmartPlannedproduction
      operationId: getEventSmartPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                executorid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  LEXService/loginWix:
    post:
      tags:
        - LEXService
      summary: loginWix
      operationId: loginWix
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  LEXService/putDocument:
    post:
      tags:
        - LEXService
      summary: putDocument
      operationId: putDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadRequest:
                  $ref: '#/components/schemas/UploadRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  redsys/createContract:
    post:
      tags:
        - redsys
      summary: createContracts
      operationId: createContracts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ActivationChangeInfo'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'redsys/workers/{contractorid}':
    post:
      tags:
        - redsys
      summary: getWorkersFor
      operationId: getWorkersFor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contractorid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralworker%3E'
  chk/updateProduction:
    post:
      tags:
        - chk
      summary: updateProductions
      operationId: updateProductions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productionUpdateRequest:
                  $ref: '#/components/schemas/ProductionUpdateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocusservice/logout:
    post:
      tags:
        - phocusservice
      summary: logout
      operationId: logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  laboral/redDownloadConfirmation:
    post:
      tags:
        - laboral
      summary: redDownloadConfirmation
      operationId: redDownloadConfirmation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                detail:
                  $ref: '#/components/schemas/Laboralausencedetail'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocusservice/monitorableDataResume:
    post:
      tags:
        - phocusservice
      summary: monitorableDataResume
      operationId: monitorableDataResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/MonitorableResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorableResumeResponse'
  phocus-fld/getSectorWithCultivation:
    post:
      tags:
        - phocus-fld
      summary: getSectorWithCultivation
      operationId: getSectorWithCultivation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSectorWithCultivationDTO%3E'
  phocus-brd/saveDataperiodexecution:
    post:
      tags:
        - phocus-brd
      summary: getDataperiodType
      operationId: getDataperiodType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/BirdDataperiodExecutionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  matchAccountingEntries/retrieveEnterprises:
    post:
      tags:
        - matchAccountingEntries
      summary: retrieveEnterprises
      operationId: retrieveEnterprises
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CRetrieveEnterprisesResponse%3E'
  'fit/addCustomerToAppointment/{appointmentid}/{numOfCustomer}':
    post:
      tags:
        - fit
      summary: addCustomerToAppointment
      operationId: addCustomerToAppointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentid:
                  type: integer
                numOfCustomer:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  chk/getDataperiodMovement:
    post:
      tags:
        - chk
      summary: getDataperiodMovement
      operationId: getDataperiodMovement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DataperiodMovementRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataperiodMovementResponse'
  'production/getUnfinishedPallets/{palletizerid}/{from}/{to}':
    post:
      tags:
        - production
      summary: getUnfinishedPallets
      operationId: getUnfinishedPallets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                to:
                  type: string
                palletizerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  stock/dumpStockInventary:
    post:
      tags:
        - stock
      summary: dumpStockInventary
      operationId: dumpStockInventary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DumpStockInventoryRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInventorydetail%3E'
  'billing/getChargeDuedateBySaleinvoice/{saleinvoiceId}':
    post:
      tags:
        - billing
      summary: getChargeDuedateBySaleinvoice
      operationId: getChargeDuedateBySaleinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoiceId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sale/getPendingPlanned:
    post:
      tags:
        - sale
      summary: getPendingPlanned
      operationId: getPendingPlanned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingPlannedproductionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPendingPlannedproductionResponse%3E'
  email/stopZimbraEmailImporter:
    post:
      tags:
        - email
      summary: stopZimbraEmailImporter
      operationId: stopZimbraEmailImporter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  worknote/generateLoanPayments:
    post:
      tags:
        - worknote
      summary: generateLoanPayments
      operationId: generateLoanPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PaymentLoanRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/getProductionAssetDetail:
    post:
      tags:
        - production
      summary: getProductionAssetDetail
      operationId: getProductionAssetDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'presence/deletePhotoSubject/{subjectid}':
    post:
      tags:
        - presence
      summary: deletePhotoSubject
      operationId: deletePhotoSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'laboraldoc/generateWorkerLaboralLifeReportByExcel/{email}':
    post:
      tags:
        - laboraldoc
      summary: generateWorkerLaboralLifeReportByExcel
      operationId: generateWorkerLaboralLifeReportByExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'nextcloud/putDocumentBinary/{documentid}':
    post:
      tags:
        - nextcloud
      summary: putDocumentBinary
      operationId: putDocumentBinary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/InputStream'
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
  sale/downloadCMR:
    post:
      tags:
        - sale
      summary: getCMRReport
      operationId: getCMRReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sage/uploadFile:
    post:
      tags:
        - sage
      summary: uploadFile
      operationId: uploadFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'form/getFormSampling/{formsamplingid}':
    post:
      tags:
        - form
      summary: getFormSampling
      operationId: getFormSampling
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formSamplingId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormsamplingFull'
  chk/savePhoto:
    post:
      tags:
        - chk
      summary: savePhoto
      operationId: savePhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoSubject:
                  $ref: '#/components/schemas/PhotoSubject'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
  'event/registerEmailEvent/{executorid}/{eventid}/{type}':
    post:
      tags:
        - event
      summary: registerEmailEvent
      operationId: registerEmailEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                executorid:
                  type: integer
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'culture/getDeductionData/{year}/{company}':
    post:
      tags:
        - culture
      summary: getDeductionData
      operationId: getDeductionData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                company:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultureDataDTO'
  chk/saveDataperiodPlan:
    post:
      tags:
        - chk
      summary: saveDataperiodPlan
      operationId: saveDataperiodPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dpp:
                  $ref: '#/components/schemas/Dataperiodplan'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataperiodplan'
  'LEXService/getNotesForCasefile/{casefileid}':
    post:
      tags:
        - LEXService
      summary: getNotesForCasefile
      operationId: getNotesForCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                casefileid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CNote%3E'
  phocus-fld/saveTreatmentChanges:
    post:
      tags:
        - phocus-fld
      summary: saveTreatmentChanges
      operationId: saveTreatmentChanges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TreatmentChangesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  sage/getCertificateUpToDateWithPayment:
    post:
      tags:
        - sage
      summary: getCertificateUpToDateWithPayment
      operationId: getCertificateUpToDateWithPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  purchase/generatePurchaseNotes:
    post:
      tags:
        - purchase
      summary: generatePurchaseNotes
      operationId: generatePurchaseNotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CPurchaseNoteFromPurchasesRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchasenote%3E'
  'sage/checkWorkerInCompany/{companyId}/{idcardnumber}':
    post:
      tags:
        - sage
      summary: checkWorkerInCompany
      operationId: checkWorkerInCompany
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idcardnumber:
                  type: string
                companyId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  production/processContainerBarcode:
    post:
      tags:
        - production
      summary: processContainerBarcode
      operationId: processContainerBarcode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ContainerBarcodeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saleorderdetailcontainer'
  flexmonsterservice/fixExcelSheetFromBytes:
    post:
      tags:
        - flexmonsterservice
      summary: fixExcelSheetFromBytes
      operationId: fixExcelSheetFromBytes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FixExcelRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'presence/workerLastTask/{assetid}':
    post:
      tags:
        - presence
      summary: getWorkerLastTask
      operationId: getWorkerLastTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkerTaskTime%3E'
  'purchase/duplicateOrder/{purchaseorderid}':
    post:
      tags:
        - purchase
      summary: duplicateOrder
      operationId: duplicateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                purchaseorderid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchaseorder'
  email/storeSentEmailFromZimbraAndRegisterEvent:
    post:
      tags:
        - email
      summary: storeSentEmailFromZimbraAndRegisterEvent
      operationId: storeSentEmailFromZimbraAndRegisterEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailSentDTO:
                  $ref: '#/components/schemas/EmailSentDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'rest/{path:.*}':
    post:
      tags:
        - rest
      summary: create
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/HttpServletRequest'
                uriInfo:
                  $ref: '#/components/schemas/UriInfo'
                json:
                  type: string
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  purchase/pendingProductionFromRawMaterial:
    post:
      tags:
        - purchase
      summary: pendingProductionFromRawMaterial
      operationId: pendingProductionFromRawMaterial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productNeedRequest:
                  $ref: '#/components/schemas/PendingProductionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CForecastSummary%3E'
  event/removeExecutions:
    post:
      tags:
        - event
      summary: removeExecutions
      operationId: removeExecutions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executionIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  salary/timeRecordMonthlyResumeExcel:
    post:
      tags:
        - salary
      summary: getTimeRecordMonthlyResumeExcel
      operationId: getTimeRecordMonthlyResumeExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'production/getSerialshippingcontainerdetailsWithoutSaleorderDetails/{productId}':
    post:
      tags:
        - production
      summary: getSerialshippingcontainerdetailsWithoutSaleorderDetails
      operationId: getSerialshippingcontainerdetailsWithoutSaleorderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialshippingcontainerdetail%3E'
  email/saveEmailAttachments:
    post:
      tags:
        - email
      summary: saveFiscalDataEmailAttachments
      operationId: saveFiscalDataEmailAttachments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saveAttachmentDTO:
                  $ref: '#/components/schemas/SaveFiscalDataAttachmentDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  amortizations/amortizations:
    post:
      tags:
        - amortizations
      summary: getAmortizations
      operationId: getAmortizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AmortizationsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAmortizationdetail%3E'
  billing/getPendingBrokerInvoices:
    post:
      tags:
        - billing
      summary: getPendingBrokerInvoices
      operationId: getPendingBrokerInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSaleInvoicesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CBrokerorder%3E'
  presence/saveDataperiodPlan:
    post:
      tags:
        - presence
      summary: saveDataperiodPlan
      operationId: saveDataperiodPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dpp:
                  $ref: '#/components/schemas/Dataperiodplan'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataperiodplan'
  phocus-fld/getTreatmentResume:
    post:
      tags:
        - phocus-fld
      summary: getTreatmentResume
      operationId: getTreatmentResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TreatmentResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'mailingservice/sendMailing/{mailingid}':
    post:
      tags:
        - mailingservice
      summary: sendMailingUsingExcel
      operationId: sendMailingUsingExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelRecipients:
                  $ref: '#/components/schemas/InputStream'
                mailingid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  billing/generateSaleInvoiceFromDataperiodCustomer:
    post:
      tags:
        - billing
      summary: generateSaleInvoiceFromDataperiodCustomer
      operationId: generateSaleInvoiceFromDataperiodCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DataperiodcustomerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  manager/snapshot:
    post:
      tags:
        - manager
      summary: snapshot
      operationId: snapshot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  redsys/activateWorkers:
    post:
      tags:
        - redsys
      summary: activateWorkers
      operationId: activateWorkers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  agrosabas/getOrdersFieldsExcelReport:
    post:
      tags:
        - agrosabas
      summary: getOrdersFieldsExcelReport
      operationId: getOrdersFieldsExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'assignation/assign/{plannedproductionid}/{producibleid}':
    post:
      tags:
        - assignation
      summary: assign
      operationId: assign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plannedproductionid:
                  type: integer
                producibleid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  ghmv/getOlapCSV:
    post:
      tags:
        - ghmv
      summary: getOlapCSV
      operationId: getOlapCSV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  worknote/getPendingSettlement:
    post:
      tags:
        - worknote
      summary: getPendingSettlement
      operationId: getPendingSettlement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSettlementRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkedHours%3E'
  'garagesalenote/sendSalenoteToSign/{salenoteid}':
    post:
      tags:
        - garagesalenote
      summary: sendSalenoteToSign
      operationId: sendSalenoteToSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  traceability/getEntries:
    post:
      tags:
        - traceability
      summary: getEntries
      operationId: getEntries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GetEntriesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CResumedEntrydetail%3E'
  warehouse/importDataperiod:
    post:
      tags:
        - warehouse
      summary: importDataperiod
      operationId: importDataperiod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ImportDataperiodRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  flexmonsterservice/fixExcelSheet:
    post:
      tags:
        - flexmonsterservice
      summary: fixExcelSheet
      operationId: fixExcelSheet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelStream:
                  $ref: '#/components/schemas/InputStream'
                fileDetail:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  presence/imageSimilarity:
    post:
      tags:
        - presence
      summary: getImageSimilarityFactor
      operationId: getImageSimilarityFactor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ImageComparisonRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  moyca/duplicateHispatecDatabase:
    post:
      tags:
        - moyca
      summary: duplicateHispatecDatabase
      operationId: duplicateHispatecDatabase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map%3CString,%20Integer%3E'
  'nextcloud/updateDocumentTags/{documentId}':
    post:
      tags:
        - nextcloud
      summary: updateDocumentTags
      operationId: updateDocumentTags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentId:
                  type: integer
                token:
                  type: string
                tags:
                  $ref: '#/components/schemas/List%3CTag%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  sale/getSaleinvoiceDetailExcelReport:
    post:
      tags:
        - sale
      summary: getSaleinvoiceDetailExcelReport
      operationId: getSaleinvoiceDetailExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocus-fld/duplicateTreatment:
    post:
      tags:
        - phocus-fld
      summary: duplicateTreatment
      operationId: duplicateTreatment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TreatmentDuplicationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-fld/changeattributedataperiodvalue:
    post:
      tags:
        - phocus-fld
      summary: changeattributedataperiodvalue
      operationId: changeattributedataperiodvalue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                changeAttributeRequest:
                  $ref: '#/components/schemas/ChangeAttributeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'casefile/genericCasefile/{subjectid}':
    post:
      tags:
        - casefile
      summary: getGenericCasefileBySubject
      operationId: getGenericCasefileBySubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casefile'
  sale/getForecastSuggestion:
    post:
      tags:
        - sale
      summary: getForecastSuggestion
      operationId: getForecastSuggestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ForecastPlanificationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CForecastPlanificationResponse%3E'
  sale/getPendingSaleOrders:
    post:
      tags:
        - sale
      summary: getPendingSaleOrders
      operationId: getPendingSaleOrders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSaleOrderDetailsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorderResume%3E'
  chk/updateDataperiod:
    post:
      tags:
        - chk
      summary: updateDataperiod
      operationId: updateDataperiod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ObjectRenderRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRenderResponse'
  phocusmes/getDetailedOEEReport:
    post:
      tags:
        - phocusmes
      summary: getDetailedOEEReport
      operationId: getDetailedOEEReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'subjectChargeActuation/updateChargeactuationRemarks/{subjectchargeactuationId}/{remarks}':
    post:
      tags:
        - subjectChargeActuation
      summary: updateChargeactuationRemarks
      operationId: updateChargeactuationRemarks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectchargeactuationId:
                  type: integer
                remarks:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subjectchargeactuation'
  worknote/checkImporterExtended:
    post:
      tags:
        - worknote
      summary: checkImporterExtended
      operationId: checkImporterExtended
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CheckImporterRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'LEXService/createGeneralPlannedproductionForCasefile/{casefileId}':
    post:
      tags:
        - LEXService
      summary: createGeneralPlannedproductionForCasefile
      operationId: createGeneralPlannedproductionForCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                casefileId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  sage/markDeleteLaboralplanificationdetail:
    post:
      tags:
        - sage
      summary: markDeleteLaboralplanificationdetail
      operationId: markDeleteLaboralplanificationdetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                planificationDetailIdsToMarkDelete:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'fit/balance/{customerid}/{fromDate}':
    post:
      tags:
        - fit
      summary: getBalance
      operationId: getBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromDate:
                  type: string
                token:
                  type: string
                customer:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteBalanceResponse'
  'document/uploadFile/{dataperiodid}/{filename}/{document}':
    post:
      tags:
        - document
      summary: uploadFile
      operationId: uploadFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                file:
                  $ref: '#/components/schemas/InputStream'
                document:
                  type: string
                dataperiodId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'sale/expenseDetails/{saleorderId}':
    post:
      tags:
        - sale
      summary: getExpenseDetails
      operationId: getExpenseDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleorderId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResume'
  periodicinvoicement/generatePeriodicInvoices:
    post:
      tags:
        - periodicinvoicement
      summary: generatePeriodicInvoices
      operationId: generatePeriodicInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/List%3CPeriodicInvoiceData%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  billing/sendSaleinvoices:
    post:
      tags:
        - billing
      summary: sendSaleinvoices
      operationId: sendSaleinvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleInvoicesIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  billing/saleofferFormats:
    post:
      tags:
        - billing
      summary: getSaleofferFormats
      operationId: getSaleofferFormats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleofferid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInvoiceFormat%3E'
  event/newExecution:
    post:
      tags:
        - event
      summary: newExecution
      operationId: newExecution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                executionRequest:
                  $ref: '#/components/schemas/NewExecutionRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
  'planification/getFreeWorkstationAndTask/{timestamp}':
    post:
      tags:
        - planification
      summary: getFreeWorkstationAndTask
      operationId: getFreeWorkstationAndTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                timestamp:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentPresenceWorkstationFree'
  planification/copyNeedsFrom:
    post:
      tags:
        - planification
      summary: copyNeedsFrom
      operationId: copyNeedsFrom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CopyNeedsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPlanificationdetail%3E'
  planification/doAutomaticInsertion:
    post:
      tags:
        - planification
      summary: doAutomaticInsertion
      operationId: doAutomaticInsertion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TimetickFixerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  accounting/getAmountAndBalances:
    post:
      tags:
        - accounting
      summary: getAmountAndBalances
      operationId: getAmountAndBalances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AccountResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAccountResume%3E'
  'event/getExecutionsForExecutor/{executorid}/{onlyPending}':
    post:
      tags:
        - event
      summary: getExecutionsForExecutor
      operationId: getExecutionsForExecutor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executorid:
                  type: integer
                onlyPending:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CExecutionItem%3E'
  planification/doAutoCorrection:
    post:
      tags:
        - planification
      summary: doAutoCorrection
      operationId: doAutoCorrection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TimetickFixerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-brd/generateExecutionLabel:
    post:
      tags:
        - phocus-brd
      summary: generateExecutionLabel
      operationId: generateExecutionLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'phocusmes/getFailedImputations/{since}/{until}/{checked}':
    post:
      tags:
        - phocusmes
      summary: getFailedImputations
      operationId: getFailedImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                until:
                  type: string
                withoutTask:
                  type: boolean
                token:
                  type: string
                since:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CImputation%3E'
  phocus-fld/createDataperiod:
    post:
      tags:
        - phocus-fld
      summary: createDataperiod
      operationId: createDataperiod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DataperiodRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataperiod'
  purchase/sendEmailPurchases:
    post:
      tags:
        - purchase
      summary: sendEmailPurchases
      operationId: sendEmailPurchases
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CPurchaseorder%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseorder%3E'
  'LEXService/deleteDocument/{documentid}':
    post:
      tags:
        - LEXService
      summary: deleteDocument
      operationId: deleteDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'garagedataperiod/getGaragedataperiodToSign/{garagedataperiodid}':
    post:
      tags:
        - garagedataperiod
      summary: getGaragedataperiodToSign
      operationId: getGaragedataperiodToSign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagedataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentToSignDTO'
  'messaging/ping/{gcmToken}':
    post:
      tags:
        - messaging
      summary: ping
      operationId: ping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gcmToken:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  billing/savePurchaseinvoice:
    post:
      tags:
        - billing
      summary: savePurchaseinvoice
      operationId: savePurchaseinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                purchaseinvoiceid:
                  $ref: '#/components/schemas/Purchaseinvoice'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchaseinvoice'
  reportingService/report:
    post:
      tags:
        - reportingService
      summary: getJasperReport
      operationId: getJasperReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ByteArrayInputStream'
  container/joinPallets:
    post:
      tags:
        - container
      summary: joinPallets
      operationId: joinPallets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serialshippingcontainerList:
                  $ref: '#/components/schemas/List%3CSerialshippingcontainer%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  verdimed/nightlyPlus:
    post:
      tags:
        - verdimed
      summary: getNightlyPlus
      operationId: getNightlyPlus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocus-crm/leads:
    post:
      tags:
        - phocus-crm
      summary: getLeads
      operationId: getLeads
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLead%3E'
  'production/getProduction/{productionId}':
    post:
      tags:
        - production
      summary: getPendingProduction
      operationId: getPendingProduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productionId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingProductionItem'
  purchase/getTransportPendingSalenotes:
    post:
      tags:
        - purchase
      summary: getTransportPendingSalenotes
      operationId: getTransportPendingSalenotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SalenoteTransportPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSalenote%3E'
  billing/generateBrokerInvoice:
    post:
      tags:
        - billing
      summary: generateBrokerInvoice
      operationId: generateBrokerInvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateSaleInvoicesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleinvoice%3E'
  fit/appointmentAvailableForCustomer:
    post:
      tags:
        - fit
      summary: appointmentAvailableForCustomer
      operationId: appointmentAvailableForCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  presence/getPhotoFromSubject:
    post:
      tags:
        - presence
      summary: getSubjectWithPhoto
      operationId: getSubjectWithPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PhotoFromSubjectRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoFromSubjectResponse'
  purchase/getPendingSaleOrderDetails:
    post:
      tags:
        - purchase
      summary: getPendingSaleOrderDetails
      operationId: getPendingSaleOrderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSaleOrderDetailsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorderdetailpurchaseplan%3E'
  billing/getPendingSaleInvoices:
    post:
      tags:
        - billing
      summary: getPendingSaleInvoices
      operationId: getPendingSaleInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSaleInvoicesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSalenoteResponse%3E'
  'container/getUnfinishedPallets/{palletizerid}/{from}/{to}':
    post:
      tags:
        - container
      summary: getUnfinishedPallets
      operationId: getUnfinishedPallets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                to:
                  type: string
                palletizerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPalletResponse%3E'
  'document/renameDocument/{documentid}/{newName}':
    post:
      tags:
        - document
      summary: renameDocument
      operationId: renameDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  phocusservice/saveUser:
    post:
      tags:
        - phocusservice
      summary: saveUser
      operationId: saveUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newUser:
                  $ref: '#/components/schemas/PhocusUser'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhocusUser'
  report/getPayrollAtachment:
    post:
      tags:
        - report
      summary: getPayrollAtachment
      operationId: getPayrollAtachment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  production/getCostByUnit:
    post:
      tags:
        - production
      summary: getCostByUnit
      operationId: getCostByUnit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  laboral/sageCheckDetail:
    post:
      tags:
        - laboral
      summary: sageCheck
      operationId: sageCheck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralausencedetail:
                  $ref: '#/components/schemas/Laboralausencedetail'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Laboralausencedetail'
  scannerdocument/getDocumentsfields:
    post:
      tags:
        - scannerdocument
      summary: getDocumentsfields
      operationId: getDocumentsfields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocumentfield%3E'
  production/generateContainer:
    post:
      tags:
        - production
      summary: generateContainer
      operationId: generateContainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewContainerRequestExtraField'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'laboral/findLaboralworker/{laboralcontractorid}/{idcardnumber}':
    post:
      tags:
        - laboral
      summary: findLaboralworker
      operationId: findLaboralworker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idcardnumber:
                  type: string
                laboralcontractorid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralworker%3E'
  production/getProvisioning:
    post:
      tags:
        - production
      summary: getProvisioning
      operationId: getProvisioning
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProvisioningRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductionProvision%3E'
  'LEXService/createGenericPlannedproduction/{responsibleId}/{customerId}':
    post:
      tags:
        - LEXService
      summary: createGenericPlannedproduction
      operationId: createGenericPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: integer
                responsibleId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  stock/getTraceabilityNode:
    post:
      tags:
        - stock
      summary: getTraceabilityNode
      operationId: getTraceabilityNode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CExecution%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CBatchNode%3E'
  sale/generateSaleinvoiceCredit:
    post:
      tags:
        - sale
      summary: generateSaleinvoiceCredit
      operationId: generateSaleinvoiceCredit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaleinvoiceCreditRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-crm/planneds:
    post:
      tags:
        - phocus-crm
      summary: getPlanneds
      operationId: getPlanneds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPlanned%3E'
  warehouse/createConfection:
    post:
      tags:
        - warehouse
      summary: createConfection
      operationId: createConfection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CreateconfectionRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  'billing/saveDocumentTotals/{type}':
    post:
      tags:
        - billing
      summary: saveDocumentTotals
      operationId: saveDocumentTotals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentTotals:
                  $ref: '#/components/schemas/List%3CDocumentTotalDTO%3E'
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  report/getSalaryInfo:
    post:
      tags:
        - report
      summary: getSalaryInfo
      operationId: getSalaryInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'garagedataperiod/getGaragedataperiodImages/{garagedataperiodid}':
    post:
      tags:
        - garagedataperiod
      summary: getGaragedataperiodImages
      operationId: getGaragedataperiodImages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagedataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CGarageDataperiodNoteImageDTO%3E'
  email/saveDraftMail:
    post:
      tags:
        - email
      summary: saveDraftMail
      operationId: saveDraftMail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/Email'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
  worknote/createLoans:
    post:
      tags:
        - worknote
      summary: createLoans
      operationId: createLoans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loanList:
                  $ref: '#/components/schemas/List%3CLoan%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'batchgenerator/possibleValues/{productypeid}/{attributeid}':
    post:
      tags:
        - batchgenerator
      summary: possibleValues
      operationId: possibleValues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attributeid:
                  type: integer
                request:
                  $ref: '#/components/schemas/BatchRequest'
                token:
                  type: string
                productypeid:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CObject%3E'
  sale/getSaleinvoicedetailWithTotal:
    post:
      tags:
        - sale
      summary: getSaleinvoicedetailWithTotal
      operationId: getSaleinvoicedetailWithTotal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                criteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleinvoicedetailWithTotal%3E'
  'fit/cancelAlternative/{alternative}':
    post:
      tags:
        - fit
      summary: cancelAlternativeService
      operationId: cancelAlternativeService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alternativeId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'fileservice/resource/{path:.*}':
    post:
      tags:
        - fileservice
      summary: getResourceFile
      operationId: getResourceFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  mail/sendMail:
    post:
      tags:
        - mail
      summary: sendMail
      operationId: sendMail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sendMailRequest:
                  $ref: '#/components/schemas/SendMailRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  worknote/getLoansPending:
    post:
      tags:
        - worknote
      summary: getLoansPending
      operationId: getLoansPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLoanResume%3E'
  sii/getSIISaleInvoicesModified:
    post:
      tags:
        - sii
      summary: getSIISaleInvoiceModified
      operationId: getSIISaleInvoiceModified
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SIIPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleinvoice%3E'
  presence/generateTimeticks:
    post:
      tags:
        - presence
      summary: generateTimeticks
      operationId: generateTimeticks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FromFileTimetickGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  sale/checkSaleinvoice:
    post:
      tags:
        - sale
      summary: checkSaleinvoice
      operationId: checkSaleinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoice:
                  $ref: '#/components/schemas/Saleinvoice'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'billing/duplicateSaleInvoice/{saleInvoiceId}':
    post:
      tags:
        - billing
      summary: duplicateSaleInvoice
      operationId: duplicateSaleInvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DuplicateInvoiceRequest'
                saleInvoiceId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saleinvoice'
  timetick/deleteTimeticks:
    post:
      tags:
        - timetick
      summary: deleteTimeticks
      operationId: deleteTimeticks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                tickIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
  'LEXService/getSubjectFromSystemUser/{systemUser}':
    post:
      tags:
        - LEXService
      summary: getSubjectFromSystemUser
      operationId: getSubjectFromSystemUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                systemUser:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
  importer/sync:
    post:
      tags:
        - importer
      summary: sync
      operationId: sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/imputationsResume:
    post:
      tags:
        - salary
      summary: imputationsResume
      operationId: imputationsResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CImputationResume%3E'
  sale/getSaleorderBatch:
    post:
      tags:
        - sale
      summary: getSaleorderBatch
      operationId: getSaleorderBatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleorder:
                  $ref: '#/components/schemas/Saleorder'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/saveSectorGeopoints:
    post:
      tags:
        - phocus-fld
      summary: saveSectorGeopoints
      operationId: saveSectorGeopoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geopoints:
                  $ref: '#/components/schemas/List%3CSectorgeopoint%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  purchase/generatePurchases:
    post:
      tags:
        - purchase
      summary: generatePurchases
      operationId: generatePurchases
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CPurchaseOrderRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseorder%3E'
  worknote/updateWorkerPayments:
    post:
      tags:
        - worknote
      summary: updateWorkerPayments
      operationId: updateWorkerPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PaymentWorkerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  nextcloud/moveDocuments:
    post:
      tags:
        - nextcloud
      summary: moveDocuments
      operationId: moveDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                moveDocumentsRequest:
                  $ref: '#/components/schemas/MoveDocumentsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  salary/exportImputations:
    post:
      tags:
        - salary
      summary: exportImputations
      operationId: exportImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  role/deleteRole:
    post:
      tags:
        - role
      summary: deleteRole
      operationId: deleteRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  $ref: '#/components/schemas/Role'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'models/importEstatesBanks/{year}/{estates}/{bankAccount}':
    post:
      tags:
        - models
      summary: importEstatesBanks
      operationId: importEstatesBanks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bankAccount:
                  type: boolean
                estates:
                  type: boolean
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  purchase/getPurchasenoteDetails:
    post:
      tags:
        - purchase
      summary: getPurchaseorderDetails
      operationId: getPurchaseorderDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PurchasedetailRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseResponse'
  nextcloud/updateDocumentsVisibility:
    post:
      tags:
        - nextcloud
      summary: updateDocumentsVisibility
      operationId: updateDocumentsVisibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ChangeVisibilityDocumentsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/printSSCC:
    post:
      tags:
        - production
      summary: printSSCC
      operationId: printSSCC
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serialshippingcontainerdetailid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  productreference/getProductWithReferences:
    post:
      tags:
        - productreference
      summary: getProductWithReferences
      operationId: getProductWithReferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductWithReferencesDTO%3E'
  'nextcloud/getInvoiceDocuments/{type}/{invoiceId}/{limit}':
    post:
      tags:
        - nextcloud
      summary: getInvoiceDocuments
      operationId: getInvoiceDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                invoiceId:
                  type: integer
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFileResponse%3E'
  sii/comunicateSIIPurchaseInvoicesPending:
    post:
      tags:
        - sii
      summary: comunicateSIIPurchaseInvoicesPending
      operationId: comunicateSIIPurchaseInvoicesPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ComunicatePurchaseInvoicesSIIPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CString%3E'
  presence/workerAvailability:
    post:
      tags:
        - presence
      summary: getWorkerAvailability
      operationId: getWorkerAvailability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AvailabilityRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAvailabilityByCategory%3E'
  scannerdocument/getPendingDocument:
    post:
      tags:
        - scannerdocument
      summary: getPendingDocument
      operationId: getPendingDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPendingDocumentResponse%3E'
  settings/enableRpaSync:
    post:
      tags:
        - settings
      summary: enableRpaSync
      operationId: enableRpaSync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sale/getSaleinvoiceCredit:
    post:
      tags:
        - sale
      summary: getSaleinvoiceCredit
      operationId: getSaleinvoiceCredit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoice:
                  $ref: '#/components/schemas/Saleinvoice'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'chat/notification/{accountId}/{idmessaje}':
    post:
      tags:
        - chat
      summary: notificaction
      operationId: notificaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: integer
                idmessaje:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'accounting/closeYear/{companyId}/{year}':
    post:
      tags:
        - accounting
      summary: closeYear
      operationId: closeYear
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                companyid:
                  type: integer
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAccountingentry%3E'
  'production/updatePallet/{palletizerid}/{palletid}/{sscc}/{start}/{end}':
    post:
      tags:
        - production
      summary: updatePallet
      operationId: updatePallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                palletid:
                  type: integer
                sscc:
                  type: string
                start:
                  type: string
                end:
                  type: string
                palletizerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  LEXService/newNote:
    post:
      tags:
        - LEXService
      summary: newNote
      operationId: newNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                noteRequest:
                  $ref: '#/components/schemas/NoteRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
  'LEXService/sendActiveReportResultOnExcel/{activeReportId}/{email}':
    post:
      tags:
        - LEXService
      summary: getSendEmailWithReportTo
      operationId: getSendEmailWithReportTo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activeReportId:
                  type: integer
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  container/splitPallet:
    post:
      tags:
        - container
      summary: splitPallet
      operationId: splitPallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SplitPalletRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  treasury/getTreasuryData:
    post:
      tags:
        - treasury
      summary: getTreasuryData
      operationId: getTreasuryData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTreasuryData%3E'
  'billing/updateIbanInSaleinvoice/{saleinvoiceId}/{iban}':
    post:
      tags:
        - billing
      summary: updateIbanInSaleinvoice
      operationId: updateIbanInSaleinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoiceId:
                  type: integer
                iban:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  production/clearStock:
    post:
      tags:
        - production
      summary: clearStock
      operationId: clearStock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  $ref: '#/components/schemas/StockQuery'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'LEXService/putDocumentBinary/{documentid}':
    post:
      tags:
        - LEXService
      summary: putDocumentBinary
      operationId: putDocumentBinary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/InputStream'
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'planification/currentPresence/{workspaceid}/{timestamp}':
    post:
      tags:
        - planification
      summary: getPresenceAtTime
      operationId: getPresenceAtTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                workspaceid:
                  type: integer
                timestamp:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentPresenceResponse'
  'stock/getInventoryInfoFromCode/{code}':
    post:
      tags:
        - stock
      summary: getInventoryInfoFromCode
      operationId: getInventoryInfoFromCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockDataResponse'
  billing/getVatResume:
    post:
      tags:
        - billing
      summary: getVatResume
      operationId: getVatResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportVatResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  fit/sendConfirmationMessage:
    post:
      tags:
        - fit
      summary: sendConfirmationMessage
      operationId: sendConfirmationMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  product/getProductWithReferences:
    post:
      tags:
        - product
      summary: getProductWithReferences
      operationId: getProductWithReferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductWithReferencesDTO%3E'
  verdimedreport/sepeExcel:
    post:
      tags:
        - verdimedreport
      summary: getSepeExcel
      operationId: getSepeExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'casefile/accountcasefilesWithNotification/{accountid}/{onlyWithNotification}':
    post:
      tags:
        - casefile
      summary: getAccountCaseFilesWithNotificacion
      operationId: getAccountCaseFilesWithNotificacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountid:
                  type: integer
                onlyWithNotification:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CResumedCasefile%3E'
  'worknote/generateLoanPaymentFile/{loanpayment}':
    post:
      tags:
        - worknote
      summary: generateLoanPaymentFile
      operationId: generateLoanPaymentFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loanPaymentId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/workedDay:
    post:
      tags:
        - salary
      summary: getWorkedDay
      operationId: getWorkedDay
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkedDay'
  accounting/getBalance:
    post:
      tags:
        - accounting
      summary: getBalance
      operationId: getBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResult'
  matchAccountingEntries/match:
    post:
      tags:
        - matchAccountingEntries
      summary: match
      operationId: match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CMatchAccountingEntriesRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'worknote/generatePaymentConfirmingFile/{settlementpayment}':
    post:
      tags:
        - worknote
      summary: generatePaymentConfirmingFile
      operationId: generatePaymentConfirmingFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementPaymentId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'digitalcertificate/uploadFile/{customerid}/{password}/{filename}':
    post:
      tags:
        - digitalcertificate
      summary: uploadFile
      operationId: uploadFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                password:
                  type: string
                file:
                  $ref: '#/components/schemas/InputStream'
                customerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'rest/search/{path:.*}':
    post:
      tags:
        - rest
      summary: search
      operationId: search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uriInfo:
                  $ref: '#/components/schemas/UriInfo'
                persistenceCriteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CT%3E'
  worknote/generateSettlements:
    post:
      tags:
        - worknote
      summary: generateSettlements
      operationId: generateSettlements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SettlementsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'email/autocomplete/{subjectid}/{name}':
    post:
      tags:
        - email
      summary: autocomplete
      operationId: autocomplete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CString%3E'
  batchgenerator/getFields:
    post:
      tags:
        - batchgenerator
      summary: getBatchFields
      operationId: getBatchFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/BatchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CBatchField%3E'
  models/customer:
    post:
      tags:
        - models
      summary: getCustomerFromToken
      operationId: getCustomerFromToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisercustomer'
  settings/fixTicks:
    post:
      tags:
        - settings
      summary: fixTicks
      operationId: fixTicks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  accounting/getPDFBalanceDetailed:
    post:
      tags:
        - accounting
      summary: getPDFBalanceDetailed
      operationId: getPDFBalanceDetailed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'messaging/{solutionId}/markSent':
    post:
      tags:
        - messaging
      summary: markSent
      operationId: markSent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                solutionid:
                  type: integer
                messagerecipientIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  presence/getUsersSessions:
    post:
      tags:
        - presence
      summary: getUsersSessions
      operationId: getUsersSessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/SessionFilter'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CUserSession%3E'
  billing/getModel347DTO:
    post:
      tags:
        - billing
      summary: getModel347DTO
      operationId: getModel347DTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CModel347%3E'
  role/getMenuitems:
    post:
      tags:
        - role
      summary: getMenuitems
      operationId: getMenuitems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-fld/getFertigationResume:
    post:
      tags:
        - phocus-fld
      summary: getFertigationResume
      operationId: getFertigationResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/TreatmentResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  laboraldoc/getReportList:
    post:
      tags:
        - laboraldoc
      summary: getReportList
      operationId: getReportList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralreport%3E'
  ssobligationscertificate/generate:
    post:
      tags:
        - ssobligationscertificate
      summary: sync
      operationId: sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  assignation/assignationIncidences:
    post:
      tags:
        - assignation
      summary: getIncidences
      operationId: getIncidences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignationIncidences'
  'fit/refuseAppointmentCustomer/{appointmentcustomerid}':
    post:
      tags:
        - fit
      summary: refuseAppointmentCustomer
      operationId: refuseAppointmentCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentcustomerid:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sale/getSaleorderIncidencesResume:
    post:
      tags:
        - sale
      summary: getSaleorderIncidencesResume
      operationId: getSaleorderIncidencesResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                criteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleOrderIncidenceResume%3E'
  'event/getSuggestedSubjects/{executorid}/{emailaddresses}':
    post:
      tags:
        - event
      summary: getSuggestedSubjects
      operationId: getSuggestedSubjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executorid:
                  type: integer
                emailaddresses:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSubject%3E'
  sale/deleteSaleorderdetailcontainers:
    post:
      tags:
        - sale
      summary: deleteSaleorderdetailcontainers
      operationId: deleteSaleorderdetailcontainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DeleteSaleorderdetailcontainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-crm/potentialCustomers:
    post:
      tags:
        - phocus-crm
      summary: getPotentialCustomers
      operationId: getPotentialCustomers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPotentialcustomer%3E'
  subjectChargeActuation/clickToCallChargeActuation:
    post:
      tags:
        - subjectChargeActuation
      summary: clickToCallChargeActuation
      operationId: clickToCallChargeActuation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectChargeActuationCall:
                  $ref: '#/components/schemas/SubjectChargeActuationCall'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subjectchargeactuation'
  'presence/getPhotoSubjectResume/{assetid}':
    post:
      tags:
        - presence
      summary: getPhotoSubjectResume
      operationId: getPhotoSubjectResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPhotoSubjectResumeResponse%3E'
  phocus-fld/workspaces:
    post:
      tags:
        - phocus-fld
      summary: getWorkspaces
      operationId: getWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'rest/persistRememberingKeys/{path:.*}':
    post:
      tags:
        - rest
      summary: persistRememberingKeys
      operationId: persistRememberingKeys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                json:
                  type: string
                token:
                  type: string
                segments:
                  $ref: '#/components/schemas/List%3CPathSegment%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteInstancePersister'
  'production/getDataperiodsRevision/{revisionPending}':
    post:
      tags:
        - production
      summary: getDataperiodsRevision
      operationId: getDataperiodsRevision
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                revisionPending:
                  type: boolean
                persistenceCriteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDataperiodRevision%3E'
  phocus-crm/opportunitiesDTO:
    post:
      tags:
        - phocus-crm
      summary: getOpportunitiesDTO
      operationId: getOpportunitiesDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3COpportunityDTO%3E'
  reportingService/excelReport:
    post:
      tags:
        - reportingService
      summary: getExcelReport
      operationId: getExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ByteArrayInputStream'
  planification/assignTimeticks:
    post:
      tags:
        - planification
      summary: suggestPeopleAssignation
      operationId: suggestPeopleAssignation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AssignTimetickRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTimetick%3E'
  sii/getSIISaleInvoicesPending:
    post:
      tags:
        - sii
      summary: getSIISaleInvoicePending
      operationId: getSIISaleInvoicePending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SIIPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleinvoice%3E'
  sale/getOrderBySaleinvoice:
    post:
      tags:
        - sale
      summary: getOrderBySaleinvoice
      operationId: getOrderBySaleinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoice:
                  $ref: '#/components/schemas/Saleinvoice'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  warehouse/finishConfection:
    post:
      tags:
        - warehouse
      summary: finishConfection
      operationId: finishConfection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pp:
                  $ref: '#/components/schemas/Plannedproduction'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  importer/stop:
    post:
      tags:
        - importer
      summary: stop
      operationId: stop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/getStockForBarcodeReader:
    post:
      tags:
        - production
      summary: deleteOrUpdatePlannedproduction
      operationId: deleteOrUpdatePlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/BarcodeReaderRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/monthlyResume:
    post:
      tags:
        - salary
      summary: monthlyResume
      operationId: monthlyResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CImputationsMonthResume%3E'
  phocus-fld/getCultivationList:
    post:
      tags:
        - phocus-fld
      summary: getCultivationList
      operationId: getCultivationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CultivationListRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCultivationListDTO%3E'
  container/printSSCC:
    post:
      tags:
        - container
      summary: printSSCC
      operationId: printSSCC
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serialshippingcontainerdetailid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/plotEnclosurePolygons:
    post:
      tags:
        - phocus-fld
      summary: plotEnclosurePolygons
      operationId: plotEnclosurePolygons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plot:
                  $ref: '#/components/schemas/Plot'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPolygon%3E'
  ghmv/convertAdditionalFieldsToAttributes:
    post:
      tags:
        - ghmv
      summary: rebuildAdditionalFields
      operationId: rebuildAdditionalFields
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  event/registerPhocusCall:
    post:
      tags:
        - event
      summary: registerPhocusCall
      operationId: registerPhocusCall
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phocusCalls:
                  $ref: '#/components/schemas/List%3CPhocusCall%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sii/getSIIPurchaseInvoicesPending:
    post:
      tags:
        - sii
      summary: getSIIPurchaseInvoicesPending
      operationId: getSIIPurchaseInvoicesPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SIIPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseinvoice%3E'
  nextcloud/putNoteDocument:
    post:
      tags:
        - nextcloud
      summary: putNoteDocument
      operationId: putNoteDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadRequest:
                  $ref: '#/components/schemas/UploadRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  form/putDocument:
    post:
      tags:
        - form
      summary: putDocument
      operationId: putDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/UploadCustomerDocumentRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/saveSectorInfoPosition:
    post:
      tags:
        - phocus-fld
      summary: saveSectorInfoPosition
      operationId: saveSectorInfoPosition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sector:
                  $ref: '#/components/schemas/Sector'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'nextcloud/getWorkerDocuments/{subjectId}/{limit}':
    post:
      tags:
        - nextcloud
      summary: getWorkerDocuments
      operationId: getWorkerDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                subjectId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CFileResponse%3E'
  phocus-fld/deleteCultivationGeopoints:
    post:
      tags:
        - phocus-fld
      summary: deleteCultivationGeopoints
      operationId: deleteCultivationGeopoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cultivation:
                  $ref: '#/components/schemas/Cultivation'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'phocus-fld/getApplicationreasonForCultivationAndProduct/{productId}':
    post:
      tags:
        - phocus-fld
      summary: getApplicationreasonForCultivationAndProduct
      operationId: getApplicationreasonForCultivationAndProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                token:
                  type: string
                cultivationIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  settings/enablePrinting:
    post:
      tags:
        - settings
      summary: enablePrinting
      operationId: enablePrinting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  presence/presenceReport:
    post:
      tags:
        - presence
      summary: presenceReport
      operationId: presenceReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  phocus-fld/generateFertigations:
    post:
      tags:
        - phocus-fld
      summary: generateFertigations
      operationId: generateFertigations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateFertigationsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  laboraldoc/emailSharePlanifications:
    post:
      tags:
        - laboraldoc
      summary: emailSharePlanifications
      operationId: emailSharePlanifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CShareEmailPlanificationsRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  models/importmodel349:
    post:
      tags:
        - models
      summary: importModel349
      operationId: importModel349
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  verdimed/hoursChecker:
    post:
      tags:
        - verdimed
      summary: hoursChecker
      operationId: hoursChecker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  manager/stopAll:
    post:
      tags:
        - manager
      summary: stopAll
      operationId: stopAll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  warehouse/refreshProduction:
    post:
      tags:
        - warehouse
      summary: refreshProduction
      operationId: refreshProduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/Production'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Production'
  salary/payrollResume:
    post:
      tags:
        - salary
      summary: getPayrollResume
      operationId: getPayrollResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'LEXService/workerfromsystemuser/{systemuser}':
    post:
      tags:
        - LEXService
      summary: getWorkerBySystemuser
      operationId: getWorkerBySystemuser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                systemuser:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  phocus-crm/opportunities:
    post:
      tags:
        - phocus-crm
      summary: getOpportunities
      operationId: getOpportunities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3COpportunity%3E'
  laboral/redCheckDetail:
    post:
      tags:
        - laboral
      summary: redCheck
      operationId: redCheck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralausencedetail:
                  $ref: '#/components/schemas/Laboralausencedetail'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Laboralausencedetail'
  billing/getModel111DTO:
    post:
      tags:
        - billing
      summary: getModel111DTO
      operationId: getModel111DTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CModel111%3E'
  billing/generatePurchaseInvoice:
    post:
      tags:
        - billing
      summary: generatePurchaseInvoice
      operationId: generatePurchaseInvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GeneratePurchaseInvoicesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseinvoice%3E'
  'productreference/getProductsWithReferencesByReference/{reference}':
    post:
      tags:
        - productreference
      summary: getProductsWithReferencesByReference
      operationId: getProductsWithReferencesByReference
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductWithReferencesDTO%3E'
  billing/getModel347AEAT:
    post:
      tags:
        - billing
      summary: getModel347AEAT
      operationId: getModel347AEAT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  agrosabas/getLoadsExcelReport:
    post:
      tags:
        - agrosabas
      summary: getLoadsExcelReport
      operationId: getLoadsExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  salary/saveDiscountHour:
    post:
      tags:
        - salary
      summary: saveDiscountHour
      operationId: saveDiscountHour
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ImputationdiscountDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  report/incidencesByZoneReport:
    post:
      tags:
        - report
      summary: getIncidencesByZoneReport
      operationId: getIncidencesByZoneReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  billing/generateInvoice:
    post:
      tags:
        - billing
      summary: generateInvoice
      operationId: generateInvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateInvoiceRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saleinvoice'
  phocus-fld/createOrUpdateFLDSaleorderdetail:
    post:
      tags:
        - phocus-fld
      summary: createOrUpdateFLDSaleorderdetail
      operationId: createOrUpdateFLDSaleorderdetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleorderdetailDTO:
                  $ref: '#/components/schemas/FLDSaleorderdetailDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fldsaleorderdetail'
  'LEXService/contractors/{systemuser}':
    post:
      tags:
        - LEXService
      summary: getContractors
      operationId: getContractors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                systemuser:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralcontractor%3E'
  'nextcloud/renameDocument/{documentid}/{newName}':
    post:
      tags:
        - nextcloud
      summary: renameDocument
      operationId: renameDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                documentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'role/getMenuitem/{menuitemid}':
    post:
      tags:
        - role
      summary: getMenuitem
      operationId: getMenuitem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menuitemid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'reportingService/reportParameters/{reportId:.*}':
    post:
      tags:
        - reportingService
      summary: getReportParameters
      operationId: getReportParameters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportPathOrId:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CReportParameter%3E'
  billing/salenoteReport:
    post:
      tags:
        - billing
      summary: getSalenoteReport
      operationId: getSalenoteReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'flexmonsterservice/olapReportSlice/{sliceid}':
    post:
      tags:
        - flexmonsterservice
      summary: olapReportSlice
      operationId: olapReportSlice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sliceid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  worknote/returnPayment:
    post:
      tags:
        - worknote
      summary: returnPayment
      operationId: returnPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReturnPaymentRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'models/modelDeclarations/{customerId}':
    post:
      tags:
        - models
      summary: getModelDeclaration
      operationId: getModelDeclaration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CModeldeclaration%3E'
  'phocusservice/deleteRole/{accountid}/{roleid}':
    post:
      tags:
        - phocusservice
      summary: deleteRole
      operationId: deleteRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountid:
                  type: integer
                roleid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  nextcloud/putDataperiodDocuments:
    post:
      tags:
        - nextcloud
      summary: putDataperiodDocuments
      operationId: putDataperiodDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadRequest:
                  $ref: '#/components/schemas/List%3CUploadRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocument%3E'
  production/changeWorker:
    post:
      tags:
        - production
      summary: changeWorker
      operationId: changeWorker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ChangeWorkerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  amortizations/generateAmortizationEntries:
    post:
      tags:
        - amortizations
      summary: generateAmortizationEntries
      operationId: generateAmortizationEntries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amortizationDetailIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accountingentry'
  worknote/checkImporter:
    post:
      tags:
        - worknote
      summary: checkImporter
      operationId: checkImporter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/CheckImporterRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  fit/updateAppointments:
    post:
      tags:
        - fit
      summary: updateFromTemplate
      operationId: updateFromTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AppointmentUpdateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAppointment%3E'
  'phocus-fld/getCutivationByPlot/{plotid}':
    post:
      tags:
        - phocus-fld
      summary: getCultivationByPlot
      operationId: getCultivationByPlot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plotid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCultivation%3E'
  'event/registerEmailEventForExecution/{executorid}/{eventid}/{type}/{executionid}':
    post:
      tags:
        - event
      summary: registerEmailEventForExecution
      operationId: registerEmailEventForExecution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                executionid:
                  type: integer
                executorid:
                  type: integer
                type:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  imputation/export:
    post:
      tags:
        - imputation
      summary: getWorknoteFiles
      operationId: getWorknoteFiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  fit/createAppointmentsFromTemplate:
    post:
      tags:
        - fit
      summary: createAppointmentsFromTemplate
      operationId: createAppointmentsFromTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentTemplate:
                  $ref: '#/components/schemas/Appointmenttemplate'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAppointment%3E'
  phocus-fld/sgaExcel:
    post:
      tags:
        - phocus-fld
      summary: sgaExcel
      operationId: sgaExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  LEXService/putDocuments:
    post:
      tags:
        - LEXService
      summary: putDocuments
      operationId: putDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadRequests:
                  $ref: '#/components/schemas/List%3CUploadRequest%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  sale/importCustomersFromExcel:
    post:
      tags:
        - sale
      summary: importCustomersFromExcel
      operationId: importCustomersFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sale/storeForecastChanges:
    post:
      tags:
        - sale
      summary: storeForecastChanges
      operationId: storeForecastChanges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/List%3CForecast%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'mailingservice/send/{mailingid}':
    post:
      tags:
        - mailingservice
      summary: send
      operationId: send
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mailingid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mailingexecution'
  phocus-brd/disinfectionpaperReport:
    post:
      tags:
        - phocus-brd
      summary: disinfectionpaperReport
      operationId: disinfectionpaperReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  production/savePlannedProductionMachine:
    post:
      tags:
        - production
      summary: savePlannedProductionMachine
      operationId: savePlannedProductionMachine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plannedproductionmachines:
                  $ref: '#/components/schemas/List%3CPlannedproductionmachine%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  presence/subjectvacation:
    post:
      tags:
        - presence
      summary: subjectvacation
      operationId: subjectvacation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSubjectvacation%3E'
  sale/saleInvoiceDetailsDivide:
    post:
      tags:
        - sale
      summary: saleOrderDetailsDivide
      operationId: saleOrderDetailsDivide
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaleNoteDetailsDivideRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salenotedetail'
  billing/getModel349DTO:
    post:
      tags:
        - billing
      summary: getModel349DTO
      operationId: getModel349DTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CModel349%3E'
  traceability/distributeEntryWeight:
    post:
      tags:
        - traceability
      summary: distributeEntryWeight
      operationId: distributeEntryWeight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DistributeEntryRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'phocus-fld/getApplicationreasonForTreatmentAndProduct/{treatmentId}/{productId}':
    post:
      tags:
        - phocus-fld
      summary: getApplicationreasonForTreatmentAndProduct
      operationId: getApplicationreasonForTreatmentAndProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                treatmentId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  dataperiod/getAttributeDataperiod:
    post:
      tags:
        - dataperiod
      summary: getAttributeDataperiod
      operationId: getAttributeDataperiod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AttributeDataperiodRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAttributedataperiodvalue%3E'
  'models/confirmmodel/{modeldeclarationid}':
    post:
      tags:
        - models
      summary: confirmModel
      operationId: confirmModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelDeclarationId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modeldeclaration'
  sii/getSIIPurchaseInvoicesModified:
    post:
      tags:
        - sii
      summary: getSIIPurchaseInvoicesModified
      operationId: getSIIPurchaseInvoicesModified
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SIIPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseinvoice%3E'
  sale/saleNoteDetailsDivide:
    post:
      tags:
        - sale
      summary: saleNoteDetailsDivide
      operationId: saleNoteDetailsDivide
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SaleNoteDetailsDivideRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salenotedetail'
  sage/sendModelsMailing:
    post:
      tags:
        - sage
      summary: sendModelsMailing
      operationId: sendModelsMailing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  LEXService/createcasefile:
    post:
      tags:
        - LEXService
      summary: createCasefile
      operationId: createCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                casefilerequest:
                  $ref: '#/components/schemas/Casefilerequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casefile'
  garagedataperiod/saveNoteImage:
    post:
      tags:
        - garagedataperiod
      summary: saveNoteImage
      operationId: saveNoteImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                noteImageDTO:
                  $ref: '#/components/schemas/GarageDataperiodNoteImageDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  siltra/laboralreport/generate:
    post:
      tags:
        - siltra/laboralreport
      summary: sync
      operationId: sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  'periodicinvoicement/getPeriodicInvoices/{date}':
    post:
      tags:
        - periodicinvoicement
      summary: getPeriodicInvoices
      operationId: getPeriodicInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleinvoice%3E'
  sale/getSaleNoteBySaleinvoice:
    post:
      tags:
        - sale
      summary: getSaleNoteBySaleinvoice
      operationId: getSaleNoteBySaleinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoice:
                  $ref: '#/components/schemas/Saleinvoice'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salenote'
  garagedataperiod/getGaragedataperiodsPending:
    post:
      tags:
        - garagedataperiod
      summary: getGaragedataperiodsPending
      operationId: getGaragedataperiodsPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDocumentToSignDTO%3E'
  LEXService/saveLabelFromWix:
    post:
      tags:
        - LEXService
      summary: saveLabelFromWix
      operationId: saveLabelFromWix
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts:
                  $ref: '#/components/schemas/List%3CContactWix%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CContactWix%3E'
  nextcloud/putInvoiceDocument:
    post:
      tags:
        - nextcloud
      summary: putInvoiceDocument
      operationId: putInvoiceDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadRequest:
                  $ref: '#/components/schemas/UploadRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  'sale/forecastForCustomer/{date}/{customerid}':
    post:
      tags:
        - sale
      summary: getForecastDetailFor
      operationId: getForecastDetailFor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                customerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CForecastSummary%3E'
  phocusmes/getCallingWithoutTicks:
    post:
      tags:
        - phocusmes
      summary: getCallingWithoutTicks
      operationId: getCallingWithoutTicks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GetCallingTicksRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCallingSlot%3E'
  nextcloud/putWorkerDocument:
    post:
      tags:
        - nextcloud
      summary: putWorkerDocument
      operationId: putWorkerDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadRequest:
                  $ref: '#/components/schemas/UploadRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  'phocusservice/registerGCMToken/{token}':
    post:
      tags:
        - phocusservice
      summary: registerGCMToken
      operationId: registerGCMToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gcmToken:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'phocus-brd/groupPendingContainers/{dataperiodId}':
    post:
      tags:
        - phocus-brd
      summary: groupPendingContainers
      operationId: groupPendingContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataperiodId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  phocus-fld/FLDResume:
    post:
      tags:
        - phocus-fld
      summary: getFLDResume
      operationId: getFLDResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FLDResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FLDResumeResponse'
  'models/deleteIncomeStatementBankAccount/{incomestatementbankaccountid}':
    post:
      tags:
        - models
      summary: deleteIncomeStatementBankAccount
      operationId: deleteIncomeStatementBankAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incomestatementbankaccountid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  sale/markInvoicesEdiSent:
    post:
      tags:
        - sale
      summary: markInvoicesEdiSent
      operationId: markInvoicesEdiSent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoiceList:
                  $ref: '#/components/schemas/List%3CSaleinvoice%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/getProductivity:
    post:
      tags:
        - production
      summary: getProductivity
      operationId: getProductivity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'event/getSuggestedDataperiods/{executorid}/{casefileid}':
    post:
      tags:
        - event
      summary: getSuggestedDataperiods
      operationId: getSuggestedDataperiods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executorid:
                  type: integer
                casefileid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDataperiod%3E'
  settings/disableRpaSync:
    post:
      tags:
        - settings
      summary: disableRpaSync
      operationId: disableRpaSync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/importProductFromExcel:
    post:
      tags:
        - production
      summary: importProductFromExcel
      operationId: importProductFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'ghmv/getweightbascule/{serialshippingcontainerid}':
    post:
      tags:
        - ghmv
      summary: getWeightBascule
      operationId: getWeightBascule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serialshippingcontainerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map%3CString,%20Double%3E'
  'event/registerFileEvent/{username}/{path}/{type}':
    post:
      tags:
        - event
      summary: registerFileEvent
      operationId: registerFileEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                type:
                  type: string
                token:
                  type: string
                username:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  chat/searchDialog:
    post:
      tags:
        - chat
      summary: getDialogs
      operationId: getDialogs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SearchMessagesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CDialog%3E'
  sii/comunicateSIISaleInvoicesPending:
    post:
      tags:
        - sii
      summary: comunicateSIISaleInvoicesPending
      operationId: comunicateSIISaleInvoicesPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ComunicateSaleInvoicesSIIPendingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CString%3E'
  salary/generateSettlement:
    post:
      tags:
        - salary
      summary: generateSettlement
      operationId: generateSettlement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateSettlementFromRecordsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settlement'
  'production/getAndSaveProductivity/{month}/{year}':
    post:
      tags:
        - production
      summary: getAndSaveProductivity
      operationId: getAndSaveProductivity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                month:
                  type: integer
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkerPlus%3E'
  'laboraldoc/getLaboralworkers/{laboralcontractorid}':
    post:
      tags:
        - laboraldoc
      summary: getLaboralworkers
      operationId: getLaboralworkers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralcontractorid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralworker%3E'
  garagedataperiod/generateSalenoteFromDataperiod:
    post:
      tags:
        - garagedataperiod
      summary: getGarageSaleNoteGenerationDTO
      operationId: getGarageSaleNoteGenerationDTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garageDataperiodIds:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  stock/stockchangeFormats:
    post:
      tags:
        - stock
      summary: stockchangeFormats
      operationId: stockchangeFormats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/Stockchange'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CStockchangeFormat%3E'
  olap/monitorableInformation:
    post:
      tags:
        - olap
      summary: getMonitorableInformation
      operationId: getMonitorableInformation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CMonitorableIntervalResponse%3E'
  report/getCostByTaskGroup:
    post:
      tags:
        - report
      summary: getCostByTaskGroup
      operationId: getCostByTaskGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  presence/getTimeticksByCustomer:
    post:
      tags:
        - presence
      summary: importTimeticksFromExcel
      operationId: importTimeticksFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FromTimetickByCustomerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetickByCustomerResponse'
  olap/unitCosts:
    post:
      tags:
        - olap
      summary: getUnitCosts
      operationId: getUnitCosts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CUnitCostResume%3E'
  'phocus-crm/getOpportunity/{opportunityId}':
    post:
      tags:
        - phocus-crm
      summary: getOpportunity
      operationId: getOpportunity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                opportunityId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
  'phocus-fld/getTreatmentproductForCultivationproduct/{cultivationproduct}':
    post:
      tags:
        - phocus-fld
      summary: getTreatmentproductForCultivationproduct
      operationId: getTreatmentproductForCultivationproduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cultivationproduct:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CTreatmentuse%3E'
  phocusservice/getSystemUsers:
    post:
      tags:
        - phocusservice
      summary: getSystemUsers
      operationId: getSystemUsers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uriInfo:
                  $ref: '#/components/schemas/UriInfo'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAccount%3E'
  salary/getLoansPending:
    post:
      tags:
        - salary
      summary: getLoansPending
      operationId: getLoansPending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLoanResume%3E'
  phocus-fld/generateTreatment:
    post:
      tags:
        - phocus-fld
      summary: generateTreatment
      operationId: generateTreatment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/GenerateTreatmentRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'production/getWorkSpacesByCustomer/{customer}':
    post:
      tags:
        - production
      summary: getWorkSpacesByCustomer
      operationId: getWorkSpacesByCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CWorkspace%3E'
  'email/getAttachment/{attachmentid}':
    post:
      tags:
        - email
      summary: getDocument
      operationId: getDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attachmentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'ghmv/importSaleinvoices/{from}/{to}':
    post:
      tags:
        - ghmv
      summary: importSaleinvoices
      operationId: importSaleinvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toString:
                  type: string
                fromString:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  purchase/searchPurchaseinvoiceResume:
    post:
      tags:
        - purchase
      summary: getPendingPlanned
      operationId: getPendingPlanned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PurchaseinvoiceResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPurchaseinvoiceResumeResponse%3E'
  'production/createBox/{lineexitid}/{start}':
    post:
      tags:
        - production
      summary: createBox
      operationId: createBox
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineexitid:
                  type: integer
                start:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/checkExecutions:
    post:
      tags:
        - production
      summary: checkExecutions
      operationId: checkExecutions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductionCheckerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductionCheck%3E'
  report/totalWorkerCosts:
    post:
      tags:
        - report
      summary: getTotalWorkerCosts
      operationId: getTotalWorkerCosts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'event/updateExecutionRemarks/{executionid}/{remarks}':
    post:
      tags:
        - event
      summary: updateExecutionRemarks
      operationId: updateExecutionRemarks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executionid:
                  type: integer
                remarks:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionItem'
  elite/customer:
    post:
      tags:
        - elite
      summary: getCustomers
      operationId: getCustomers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CCustomer%3E'
  sale/getContainerLoaded:
    post:
      tags:
        - sale
      summary: getContainerLoaded
      operationId: getContainerLoaded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSaleOrderLoadedRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPendingSaleOrderLoadedResume%3E'
  'mailingservice/importMailing/{mailingid}':
    post:
      tags:
        - mailingservice
      summary: importMailing
      operationId: importMailing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excel:
                  $ref: '#/components/schemas/InputStream'
                mailingid:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  stock/getMovementsFromRequest:
    post:
      tags:
        - stock
      summary: getMovementsFromRequest
      operationId: getMovementsFromRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  $ref: '#/components/schemas/MovementQuery'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection%3CTraceabilityItem%3E'
  'event/getSuggestedPlannedproductions/{executorid}/{dataperiodid}':
    post:
      tags:
        - event
      summary: getSuggestedPlannedproductions
      operationId: getSuggestedPlannedproductions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executorid:
                  type: integer
                dataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPlannedproduction%3E'
  'worknote/saveJourneys/{settlemetgroup}':
    post:
      tags:
        - worknote
      summary: saveJourneys
      operationId: saveJourneys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementGroupId:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/setTreatmentUsesDays:
    post:
      tags:
        - phocus-fld
      summary: setTreatmentUsesDays
      operationId: setTreatmentUsesDays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/storeContainer:
    post:
      tags:
        - production
      summary: storeContainer
      operationId: storeContainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newStoreContainerRequest:
                  $ref: '#/components/schemas/NewStoreContainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'workerCalendar/readTemplateFruitsVegetables/{contractorId}':
    post:
      tags:
        - workerCalendar
      summary: readTemplateFruitsVegetables
      operationId: readTemplateFruitsVegetables
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                contractorId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  avecox/createPalletLabel:
    post:
      tags:
        - avecox
      summary: processLabelRequest
      operationId: processLabelRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/LabelsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'email/getEmails/{subjectid}/{start}/{end}/{emailfolderid}':
    post:
      tags:
        - email
      summary: getEmails
      operationId: getEmails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailfolderid:
                  type: integer
                start:
                  type: integer
                end:
                  type: integer
                subjectid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsResponse'
  phocus-brd/getWarehouseFrozenReport:
    post:
      tags:
        - phocus-brd
      summary: getWarehouseFrozenReport
      operationId: getWarehouseFrozenReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'LEXService/getInactiveCasefile/{days}/{onlyVip}':
    post:
      tags:
        - LEXService
      summary: getInactiveCasefile
      operationId: getInactiveCasefile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyVip:
                  type: boolean
                days:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set%3CCasefile%3E'
  phocus-fld/duplicateFertigation:
    post:
      tags:
        - phocus-fld
      summary: duplicateFertigation
      operationId: duplicateFertigation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FertigationDuplicationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  'worknote/deleteSettlementGroup/{settlemetgroup}':
    post:
      tags:
        - worknote
      summary: deleteSettlementGroup
      operationId: deleteSettlementGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementGroupId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  billing/getdueDatePending:
    post:
      tags:
        - billing
      summary: getdueDatePending
      operationId: getdueDatePending
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingDuedateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CObject%3E'
  'laboraldoc/getLaboralReport/{laboralreportdocumentid}':
    post:
      tags:
        - laboraldoc
      summary: getReport
      operationId: getReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralreportdocumentid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/generateImputations:
    post:
      tags:
        - salary
      summary: generateImputations
      operationId: generateImputations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewImputationsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'productdata/printLabel/{productId}/{quantity}/{printer}/':
    post:
      tags:
        - productdata
      summary: printLabel
      operationId: printLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                productId:
                  type: integer
                printer:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  report/basicWorkerCosts:
    post:
      tags:
        - report
      summary: getBasicWorkerCosts
      operationId: getBasicWorkerCosts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'form/deleteFormSampling/{id}':
    post:
      tags:
        - form
      summary: deleteFormSampling
      operationId: deleteFormSampling
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formSamplingId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'models/deleteIncomeStatementEstate/{incomestatementestateid}':
    post:
      tags:
        - models
      summary: deleteIncomeStatementEstate
      operationId: deleteIncomeStatementEstate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incomestatementestateid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  garagesalenote/updateGaragesalenote:
    post:
      tags:
        - garagesalenote
      summary: updateGaragesalenote
      operationId: updateGaragesalenote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagesalenote:
                  $ref: '#/components/schemas/Garagesalenote'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Garagesalenote'
  'phocusservice/timeout/{seconds}':
    post:
      tags:
        - phocusservice
      summary: timeout
      operationId: timeout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seconds:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'production/updateBox/{boxid}/{palletizerid}/{end}':
    post:
      tags:
        - production
      summary: updateBox
      operationId: updateBox
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                end:
                  type: string
                palletizerid:
                  type: integer
                token:
                  type: string
                boxid:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/advisoryExcelReport:
    post:
      tags:
        - salary
      summary: advisoryExcelReport
      operationId: advisoryExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'ghmv/importAccrual/{month}/{year}':
    post:
      tags:
        - ghmv
      summary: importAccrual
      operationId: importAccrual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                month:
                  type: integer
                year:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'container/createBox/{lineexitid}/{start}':
    post:
      tags:
        - container
      summary: createBox
      operationId: createBox
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineexitid:
                  type: integer
                start:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
  'LEXService/plannedproductions/{systemuser}/{type}':
    post:
      tags:
        - LEXService
      summary: getPlannedproductions
      operationId: getPlannedproductions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                systemuser:
                  type: string
                type:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayList%3CPlannedproduction%3E'
  garagedataperiod/signGaragedataperiod:
    post:
      tags:
        - garagedataperiod
      summary: signGaragedataperiod
      operationId: signGaragedataperiod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentToSignDTO:
                  $ref: '#/components/schemas/DocumentToSignDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  production/splitPallet:
    post:
      tags:
        - production
      summary: splitPallet
      operationId: splitPallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SplitPalletRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  fit/generateAppointments:
    post:
      tags:
        - fit
      summary: generateAppointments
      operationId: generateAppointments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CAppointment%3E'
  salary/generateLoanPaymentAccounting:
    post:
      tags:
        - salary
      summary: generateLoanPaymentAccounting
      operationId: generateLoanPaymentAccounting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/LoanPaymentAccountingRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accountingentry'
  'fit/lastTrainings/{onlyPositiveBalance}':
    post:
      tags:
        - fit
      summary: getLastTrainings
      operationId: getLastTrainings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyPositiveBalance:
                  type: boolean
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastSessionResponse'
  fit/updatedAppointments:
    post:
      tags:
        - fit
      summary: updatedAppointments
      operationId: updatedAppointments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AppointmentChangesRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentChangesResponse'
  mcn/garageDataperiodHoursOLAP:
    post:
      tags:
        - mcn
      summary: garageDataperiodHoursOLAP
      operationId: garageDataperiodHoursOLAP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/McnOlapRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CGarageDataperiodHoursItem%3E'
  accounting/accountingIncidences:
    post:
      tags:
        - accounting
      summary: accountingIncidences
      operationId: accountingIncidences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/IncidencesSearchRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  container/getPendingSaleorderDetail:
    post:
      tags:
        - container
      summary: getPendingSaleorderDetail
      operationId: getPendingSaleorderDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSerialShippingContainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorderdetail%3E'
  'sale/printCMRplatenumber/{salenoteid}':
    post:
      tags:
        - sale
      summary: printCMRplatenumber
      operationId: printCMRplatenumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProduct%3E'
  rest/updateNeeds:
    post:
      tags:
        - rest
      summary: updateNeeds
      operationId: updateNeeds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/UpdateNeedsRequest'
                requestInfo:
                  $ref: '#/components/schemas/HttpServletRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNeedsResponse'
  'LEXService/getInactiveCustomer/{days}/{onlyVip}':
    post:
      tags:
        - LEXService
      summary: getInactiveCustomer
      operationId: getInactiveCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyVip:
                  type: boolean
                days:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set%3CSubject%3E'
  billing/getModel349AEAT:
    post:
      tags:
        - billing
      summary: getModel349AEAT
      operationId: getModel349AEAT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  container/savePlannedProductionMachine:
    post:
      tags:
        - container
      summary: savePlannedProductionMachine
      operationId: savePlannedProductionMachine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plannedproductionmachines:
                  $ref: '#/components/schemas/List%3CPlannedproductionmachine%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  LEXService/getCompanyHolidays:
    post:
      tags:
        - LEXService
      summary: getCompanyHolidays
      operationId: getCompanyHolidays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSubjectvacation%3E'
  billing/saleofferReport:
    post:
      tags:
        - billing
      summary: getSaleofferReport
      operationId: getSaleofferReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  purchase/purchaseNeeds:
    post:
      tags:
        - purchase
      summary: purchaseNeeds
      operationId: purchaseNeeds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productNeedRequest:
                  $ref: '#/components/schemas/ProductNeedRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CProductNeed%3E'
  phocusservice/register:
    post:
      tags:
        - phocusservice
      summary: register
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  billing/getModel349Excel:
    post:
      tags:
        - billing
      summary: getModel349Excel
      operationId: getModel349Excel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'email/moveEmail/{eventid}/{emailfolderid}':
    post:
      tags:
        - email
      summary: moveEmail
      operationId: moveEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                emailfolderid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
  'garagedataperiod/timetick/{garagedataperiodid}':
    post:
      tags:
        - garagedataperiod
      summary: timetick
      operationId: timetick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                garagedataperiodid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  email/saveCasefileEmailAttachments:
    post:
      tags:
        - email
      summary: saveCasefileEmailAttachments
      operationId: saveCasefileEmailAttachments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saveCasefileAttachmentDTO:
                  $ref: '#/components/schemas/SaveCasefileAttachmentDTO'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  billing/getBankAccountAdvance:
    post:
      tags:
        - billing
      summary: getBankAccountAdvance
      operationId: getBankAccountAdvance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                criteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CBankaccount%3E'
  phocus-brd/getWarehouseMovementReport:
    post:
      tags:
        - phocus-brd
      summary: getWarehouseMovementReport
      operationId: getWarehouseMovementReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  laboraldoc/getLaboralworkersBySystemUser:
    post:
      tags:
        - laboraldoc
      summary: getLaboralworkersBySystemUser
      operationId: getLaboralworkersBySystemUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CLaboralworker%3E'
  phocus-fld/saveDataperiodcultivation:
    post:
      tags:
        - phocus-fld
      summary: saveDataperiodcultivation
      operationId: saveDataperiodcultivation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/DataperiodCultivation'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataperiodCultivation'
  'fit/confirmAppointmentCustomer/{appointmentcustomerid}':
    post:
      tags:
        - fit
      summary: confirmAppointmentCustomer
      operationId: confirmAppointmentCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentcustomerid:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'LEXService/getCasefilesWithPlannedproductionOrPendingTask/{executorid}/{maxDuedateDays}':
    post:
      tags:
        - LEXService
      summary: getCasefilesWithPlannedproductionOrPendingTask
      operationId: getCasefilesWithPlannedproductionOrPendingTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                executorid:
                  type: integer
                maxDuedateDays:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set%3CTaskResumeCasefile%3E'
  importer/resetLogs:
    post:
      tags:
        - importer
      summary: resetLogs
      operationId: resetLogs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'messaging/{solutionId}/message':
    post:
      tags:
        - messaging
      summary: sendMessage
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                solutionid:
                  type: integer
                message:
                  $ref: '#/components/schemas/Message'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  billing/getSaleInvoices:
    post:
      tags:
        - billing
      summary: getSaleInvoices
      operationId: getSaleInvoices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                criteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleInvoiceExtra%3E'
  laboral/sageCheck:
    post:
      tags:
        - laboral
      summary: sageCheck
      operationId: sageCheck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboralausences:
                  $ref: '#/components/schemas/List%3CLaboralausence%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3COperationResult%3CLaboralausence%3E%3E'
  'traceability/printEntryDetailLabel/{entrydetailId}':
    post:
      tags:
        - traceability
      summary: printEntrylabel
      operationId: printEntrylabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entrydetailId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'email/deleteEmail/{eventid}':
    post:
      tags:
        - email
      summary: deleteEmail
      operationId: deleteEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
  billing/getRetentionResume:
    post:
      tags:
        - billing
      summary: getRetentionResume
      operationId: getRetentionResume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportRetentionResumeRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  container/generateContainer:
    post:
      tags:
        - container
      summary: generateContainer
      operationId: generateContainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewContainerRequestExtraField'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'sale/searchCustomerProducts/{customerid}':
    post:
      tags:
        - sale
      summary: searchCustomerProducts
      operationId: searchCustomerProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                persistenceCriteria:
                  $ref: '#/components/schemas/PersistenceCriteria'
                customerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  crm/subjectAdditionalFieldsExcel:
    post:
      tags:
        - crm
      summary: getSubjectAdditionalFieldsOnExcel
      operationId: getSubjectAdditionalFieldsOnExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SubjectAdditionalFieldRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'messaging/deleteWorkertochat/{subjectId}/{workerId}':
    post:
      tags:
        - messaging
      summary: deleteWorkertochat
      operationId: deleteWorkertochat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workerId:
                  type: integer
                subjectId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  models/saveInSageIncomeStatementEstate:
    post:
      tags:
        - models
      summary: saveInSageIncomeStatementEstate
      operationId: saveInSageIncomeStatementEstate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incomestatementestate:
                  $ref: '#/components/schemas/Incomestatementestate'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  purchase/claimsReport:
    post:
      tags:
        - purchase
      summary: getPresence
      operationId: getPresence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  container/associateContainers:
    post:
      tags:
        - container
      summary: associateContainers
      operationId: associateContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AssociateContainersRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  stock/addBarcodeToStockchange:
    post:
      tags:
        - stock
      summary: addBarcodeToStockchange
      operationId: addBarcodeToStockchange
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  sage/laboralausences/syncAll:
    post:
      tags:
        - sage/laboralausences
      summary: syncAll
      operationId: syncAll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ITRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  'presence/provisioning/{mac}':
    post:
      tags:
        - presence
      summary: getTerminalData
      operationId: getTerminalData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mac:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/cultivationPolygons:
    post:
      tags:
        - phocus-fld
      summary: getcultivationPolygons
      operationId: getcultivationPolygons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cultivation:
                  $ref: '#/components/schemas/Cultivation'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CPolygon%3E'
  phocus-fld/generateCultivationFromProduction:
    post:
      tags:
        - phocus-fld
      summary: generateCultivationFromProduction
      operationId: generateCultivationFromProduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ProductionCultivationsLinkedRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  sage/importAllCustomers:
    post:
      tags:
        - sage
      summary: importAllCustomers
      operationId: importAllCustomers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'LEXService/getGenericPlannedproduction/{customerId}':
    post:
      tags:
        - LEXService
      summary: getGenericPlannedproduction
      operationId: getGenericPlannedproduction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plannedproduction'
  salary/workerPayments:
    post:
      tags:
        - salary
      summary: workerPayments
      operationId: workerPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'fit/settlementReport/{fromDate}/{toDate}/{email}':
    post:
      tags:
        - fit
      summary: sendSettlementReport
      operationId: sendSettlementReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromDate:
                  type: string
                toDate:
                  type: string
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  'models/generatePretokenAndSendMail/{advisercustomerid}':
    post:
      tags:
        - models
      summary: generatePretokenAndSendMail
      operationId: generatePretokenAndSendMail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                advisercustomerid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  role/saveRole:
    post:
      tags:
        - role
      summary: saveRole
      operationId: saveRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  $ref: '#/components/schemas/Role'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
  nextcloud/syncWorkerDocuments:
    post:
      tags:
        - nextcloud
      summary: syncWorkerDocuments
      operationId: syncWorkerDocuments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/FLDResumeExcelReport:
    post:
      tags:
        - phocus-fld
      summary: getFLDResumeExcelReport
      operationId: getFLDResumeExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/FLDResumerExcelReportRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  scannerdocument/extractDocument:
    post:
      tags:
        - scannerdocument
      summary: extractDocument
      operationId: extractDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/PendingDocumentResponse'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  sale/saleNoteData:
    post:
      tags:
        - sale
      summary: saleNoteData
      operationId: saleNoteData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/SalenoteDataRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  production/ExecutionCostResumeExcelReport:
    post:
      tags:
        - production
      summary: getExecutionCostResumeExcelReport
      operationId: getExecutionCostResumeExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  sale/importSaleorderFromExcel:
    post:
      tags:
        - sale
      summary: importSaleorderFromExcel
      operationId: importSaleorderFromExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excelFile:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorder%3E'
  'sale/unlinkSalenoteInSaleinvoice/{saleinvoiceid}/{salenoteid}':
    post:
      tags:
        - sale
      summary: unlinkSalenoteInSaleinvoice
      operationId: unlinkSalenoteInSaleinvoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saleinvoiceid:
                  type: integer
                salenoteid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
  'phocusmes/doTimeTick/{terminalId}/{cardCode}':
    post:
      tags:
        - phocusmes
      summary: getTime
      operationId: getTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cardCode:
                  type: string
                terminal:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetickInfoResponse'
  introducecontract/readTemplate:
    post:
      tags:
        - introducecontract
      summary: readTemplate
      operationId: readTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  $ref: '#/components/schemas/InputStream'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  authentication/login:
    post:
      tags:
        - authentication
      summary: login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  salary/imputationMonthlyResumeExcel:
    post:
      tags:
        - salary
      summary: getimputationMonthlyResumeExcel
      operationId: getimputationMonthlyResumeExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'mailingservice/upload/{mailingid}/{filename}':
    post:
      tags:
        - mailingservice
      summary: saveDocument
      operationId: saveDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                stream:
                  $ref: '#/components/schemas/InputStream'
                mailingid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mailingdocument'
  fit/deleteAppointments:
    post:
      tags:
        - fit
      summary: deleteFromTemplate
      operationId: deleteFromTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AppointmentUpdateRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CInteger%3E'
  LEXService/getTaxModelDocument:
    post:
      tags:
        - LEXService
      summary: getTaxModelDocument
      operationId: getTaxModelDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                fileResponse:
                  $ref: '#/components/schemas/FileResponse'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  kpi/barcodeTcpLogFile:
    post:
      tags:
        - kpi
      summary: barcodeTcpLogFile
      operationId: barcodeTcpLogFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  'sale/finalDestination/{saleorderdetailid}':
    post:
      tags:
        - sale
      summary: finalDestination
      operationId: finalDestination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                detailid:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSaleorderfinaldestination%3E'
  stock/createStockMovement:
    post:
      tags:
        - stock
      summary: createStockMovement
      operationId: createStockMovement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/NewStockMovementRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stockmovement[]'
  'fit/cancelAppointmentcustomer/{appointmentcustomerId}':
    post:
      tags:
        - fit
      summary: cancelAppointmentcustomer
      operationId: cancelAppointmentcustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointmentcustomerId:
                  type: integer
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  container/getPendingSerialShippingContainer:
    post:
      tags:
        - container
      summary: getPendingSerialShippingContainer
      operationId: getPendingSerialShippingContainer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/PendingSerialShippingContainerRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List%3CSerialshippingcontainerExtra%3E'
  worknote/deleteSettlements:
    post:
      tags:
        - worknote
      summary: deleteSettlements
      operationId: deleteSettlements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementList:
                  $ref: '#/components/schemas/List%3CInteger%3E'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  phocus-fld/excelreportconsumptioncost:
    post:
      tags:
        - phocus-fld
      summary: excelReportConsumptionCost
      operationId: excelReportConsumptionCost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  timetick/updateWorkerCalendar:
    post:
      tags:
        - timetick
      summary: updateWorkerCalendar
      operationId: updateWorkerCalendar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/UpdateCalendarsRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
  models/send:
    post:
      tags:
        - models
      summary: send
      operationId: send
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                declaration:
                  $ref: '#/components/schemas/Modeldeclaration'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  batchgenerator/groupEntriesByDayAndBatch:
    post:
      tags:
        - batchgenerator
      summary: groupEntriesByDayAndBatch
      operationId: groupEntriesByDayAndBatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  production/productexcelreport:
    post:
      tags:
        - production
      summary: productExcelReport
      operationId: productExcelReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ReportGenerationRequest'
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/byte[]'
  ghmv/syncConsumption:
    post:
      tags:
        - ghmv
      summary: syncConsumption
      operationId: syncConsumption
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    Appointmenttemplate:
      type: object
      properties:
        appointmenttemplateid:
          type: integer
        serialVersionUID:
          type: string
        todate:
          type: string
        hour:
          type: string
        sessionprice:
          type: number
        weekdays:
          type: string
        trainingplanid:
          $ref: '#/components/schemas/Trainingplan'
        remarks:
          type: string
        appointmenttemplate:
          type: string
        fromdate:
          type: string
        trainerid:
          $ref: '#/components/schemas/Trainer'
    List<PurchaseOrderDetailChangeRequest>:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseOrderDetailChangeRequest'
    PurchaseOrderDetailChangeRequest:
      type: object
      properties: null
    Appointment:
      type: object
      properties: null
    List<PhocusSolution>:
      type: array
      items:
        $ref: '#/components/schemas/PhocusSolution'
    PhocusSolution:
      type: object
      properties: null
    Recipe:
      type: object
      properties: null
    List<SaleOrderIncidenceResume>:
      type: array
      items:
        $ref: '#/components/schemas/SaleOrderIncidenceResume'
    SaleOrderIncidenceResume:
      type: object
      properties:
        transportagency:
          $ref: '#/components/schemas/Transportagency'
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: number
        address:
          $ref: '#/components/schemas/Subjectaddress'
        additionalreference:
          type: string
        estimateddeliverydate:
          type: string
        salenote:
          $ref: '#/components/schemas/Salenote'
        estimatedshippingdate:
          type: string
        traceability:
          $ref: '#/components/schemas/List%3CString%3E'
        plateNumber:
          type: string
        saleorderdetailid:
          type: integer
        saleorderincidence:
          $ref: '#/components/schemas/Saleorderincidence'
        saleorderid:
          type: integer
        reference:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
    List<FLDResumeRow>:
      type: array
      items:
        $ref: '#/components/schemas/FLDResumeRow'
    FLDResumeRow:
      type: object
      properties: null
    List<Timetick>:
      type: array
      items:
        $ref: '#/components/schemas/Timetick'
    Timetick:
      type: object
      properties:
        timetick:
          type: string
        nextDay:
          type: boolean
        out:
          type: boolean
    TreatmentDuplicationRequest:
      type: object
      properties:
        date:
          type: string
        treatment:
          $ref: '#/components/schemas/Treatment'
    PendingDataperiodsRequest:
      type: object
      properties:
        fromDate:
          type: string
        verificationpending:
          type: boolean
        toDate:
          type: string
        responsible:
          type: string
    String:
      type: string
    Check349Info:
      type: object
      properties: null
    'Map<Integer,Collection<Formquestionformula>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Collection%3CFormquestionformula%3E'
    Collection<Formquestionformula>:
      type: array
      items:
        $ref: '#/components/schemas/Formquestionformula'
    Formquestionformula:
      type: object
      properties: null
    MonitorabledataResume:
      type: object
      properties: null
    TimetickInfoResponse:
      type: object
      properties:
        documentToPrint:
          type: string
        photoUrl:
          type: string
        additionalInformation:
          type: string
        exit:
          type: boolean
        workspace:
          $ref: '#/components/schemas/Workspace'
        task:
          $ref: '#/components/schemas/Task'
        subject:
          $ref: '#/components/schemas/Subject'
        line:
          $ref: '#/components/schemas/Line'
        success:
          type: boolean
        messages:
          $ref: '#/components/schemas/List%3CMessage%3E'
        workstation:
          $ref: '#/components/schemas/Workstation'
        message:
          type: string
    Sectorgeopoint:
      type: object
      properties: null
    SalesDataRequest:
      type: object
      properties:
        loadTo:
          type: string
        downloadFrom:
          type: string
        downloadTo:
          type: string
        from:
          type: string
        to:
          type: string
        loadFrom:
          type: string
    DataperiodResume:
      type: object
      properties: null
    FLDVariationResumeRequest:
      type: object
      properties:
        productid:
          $ref: '#/components/schemas/Product'
        campaignid:
          $ref: '#/components/schemas/Campaign'
        until:
          type: string
        since:
          type: string
    Status:
      type: object
      properties: null
    List<Format>:
      type: array
      items:
        $ref: '#/components/schemas/Format'
    Format:
      type: object
      properties: null
    List<PurchaseInvoiceExtra>:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseInvoiceExtra'
    PurchaseInvoiceExtra:
      type: object
      properties: null
    'Map<Integer,Collection<Stockcontainer>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Collection%3CStockcontainer%3E'
    Collection<Stockcontainer>:
      type: array
      items:
        $ref: '#/components/schemas/Stockcontainer'
    Stockcontainer:
      type: object
      properties: null
    List<WorkedHours>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedHours'
    WorkedHours:
      type: object
      properties: null
    ActivationChangeInfo:
      type: object
      properties:
        date:
          type: string
        causatemporalidad:
          type: string
        weeklyhours:
          type: number
        idcardnumber:
          type: string
        additionalRecipients:
          $ref: '#/components/schemas/List%3CString%3E'
        laboralcontractorid:
          type: integer
        horario:
          type: string
        laboralcontractorSSNumber:
          type: string
        categoria:
          type: string
        salario:
          type: string
        laboragreementid:
          type: integer
        laboralcontractpricegroupid:
          type: integer
        laboralcontracttypeid:
          type: integer
        puesto:
          type: string
        socialsecuritynumber:
          type: string
        surname1:
          type: string
        surname2:
          type: string
        name:
          type: string
        observaciones:
          type: string
        collective:
          type: string
    Cultivationdensity:
      type: object
      properties: null
    List<T>:
      type: array
      items:
        $ref: '#/components/schemas/T'
    T:
      type: object
      properties: null
    List<Customer>:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    Customer:
      type: object
      properties: null
    PendingSaleOrderLoadedRequest:
      type: object
      properties:
        saleorderid:
          type: integer
    LabelsRequest:
      type: object
      properties:
        boxes:
          type: number
        palets:
          type: string
        productid:
          $ref: '#/components/schemas/Product'
        mail:
          type: string
        weight:
          type: number
        batchid:
          type: string
        expirationdate:
          type: string
        warehouse:
          type: string
        containercode:
          type: string
        platform:
          type: string
        hour:
          type: string
        ordernumber:
          type: string
        complete:
          type: boolean
    CultivationDataDTO:
      type: object
      properties: null
    List<DataperiodMovementItemResponse>:
      type: array
      items:
        $ref: '#/components/schemas/DataperiodMovementItemResponse'
    DataperiodMovementItemResponse:
      type: object
      properties: null
    List<DetailedConsumption>:
      type: array
      items:
        $ref: '#/components/schemas/DetailedConsumption'
    DetailedConsumption:
      type: object
      properties: null
    IrrigationSectorWithCultivationDTO:
      type: object
      properties: null
    List<SaleOlapDTO>:
      type: array
      items:
        $ref: '#/components/schemas/SaleOlapDTO'
    SaleOlapDTO:
      type: object
      properties: null
    List<SubjectChargeActuationMailing>:
      type: array
      items:
        $ref: '#/components/schemas/SubjectChargeActuationMailing'
    SubjectChargeActuationMailing:
      type: object
      properties: null
    AgrosabasSaleinvoicedetailWithSalenoteDTO:
      type: object
      properties: null
    Laboralassistancetype:
      type: object
      properties: null
    List<GarageSaleNoteGenerationDTO>:
      type: array
      items:
        $ref: '#/components/schemas/GarageSaleNoteGenerationDTO'
    GarageSaleNoteGenerationDTO:
      type: object
      properties: null
    List<Saleorderdetailpurchaseplan>:
      type: array
      items:
        $ref: '#/components/schemas/Saleorderdetailpurchaseplan'
    Saleorderdetailpurchaseplan:
      type: object
      properties: null
    SaledetailRequest:
      type: object
      properties:
        saleorderid:
          type: integer
        compositionDetails:
          type: boolean
    SettlementSeizureResume:
      type: object
      properties: null
    Machine:
      type: object
      properties: null
    Laboralausencestatus:
      type: object
      properties: null
    VatResumeAccountingDTO:
      type: object
      properties: null
    ProductionProvision:
      type: object
      properties: null
    Formmeasure:
      type: object
      properties: null
    SimpleTimetickRequest:
      type: object
      properties:
        idcardnumber:
          type: string
        latitude:
          type: number
        terminal:
          type: string
        timestamp:
          type: string
        longitude:
          type: number
    SerialshippingcontainerExtra:
      type: object
      properties: null
    Salenotedetail:
      type: object
      properties:
        productid:
          $ref: '#/components/schemas/Product'
        saleinvoicedetailid:
          $ref: '#/components/schemas/Saleinvoicedetail'
        confirmedquantity:
          type: number
        discount:
          type: number
        salequantity:
          type: number
        reference:
          type: string
        salenotedetailid:
          type: integer
        salenoteid:
          $ref: '#/components/schemas/Salenote'
        warehouseid:
          $ref: '#/components/schemas/Warehouse'
        price:
          type: number
        stockmovementid:
          $ref: '#/components/schemas/Stockmovement'
        unitsbycontainer:
          type: integer
        product:
          type: string
        quantity:
          type: number
        vatid:
          $ref: '#/components/schemas/Vat'
        batchid:
          $ref: '#/components/schemas/Batch'
        sample:
          type: boolean
        detailorder:
          type: integer
        grossweight:
          type: number
        stocklocationid:
          $ref: '#/components/schemas/Stocklocation'
        netweight:
          type: number
        invoicementunitid:
          $ref: '#/components/schemas/Movementunit'
        containerunits:
          type: number
        remarks:
          type: string
        status:
          type: string
    List<Appointmentcustomer>:
      type: array
      items:
        $ref: '#/components/schemas/Appointmentcustomer'
    Appointmentcustomer:
      type: object
      properties: null
    List<Product>:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    Product:
      type: object
      properties:
        shortdescription:
          type: string
        producttypeid:
          $ref: '#/components/schemas/Producttype'
        product:
          type: string
        cost:
          type: number
        productid:
          type: integer
        vatid:
          $ref: '#/components/schemas/Vat'
        purchaseaccountid:
          $ref: '#/components/schemas/Account'
        active:
          type: boolean
        weight:
          type: number
        nonstockable:
          type: boolean
        salemovementunitid:
          $ref: '#/components/schemas/Movementunit'
        executionmovementunitid:
          $ref: '#/components/schemas/Movementunit'
        serialVersionUID:
          type: string
        externalcode:
          type: string
        returnable:
          type: boolean
        inactive:
          type: boolean
        purchasereturnaccountid:
          $ref: '#/components/schemas/Account'
        price:
          type: number
        costcenterconceptid:
          $ref: '#/components/schemas/Costcenterconcept'
        saleaccountid:
          $ref: '#/components/schemas/Account'
        stockablemovementunitid:
          $ref: '#/components/schemas/Movementunit'
        salereturnaccountid:
          $ref: '#/components/schemas/Account'
        purchasemovementunitid:
          $ref: '#/components/schemas/Movementunit'
    Producttask:
      type: object
      properties: null
    ReturnPaymentRequest:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
    List<Object>:
      type: array
      items:
        $ref: '#/components/schemas/Object'
    Object:
      type: object
      properties: null
    NewExecutionRequest:
      type: object
      properties:
        duration:
          type: number
        eventid:
          type: integer
        plannedproductionid:
          type: integer
        executor:
          $ref: '#/components/schemas/Subject'
        delegatesubjectid:
          type: integer
        registeredat:
          type: string
        sector:
          type: string
        remarks:
          type: string
    Casefiletype:
      type: object
      properties: null
    AccountSearchRequest:
      type: object
      properties:
        contractors:
          $ref: '#/components/schemas/List%3CContractor%3E'
    'Map<Integer,Object>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Object'
    SaveProvisioningModel:
      type: object
      properties: null
    CopyNeedsRequest:
      type: object
      properties:
        copyDate:
          type: string
        operation:
          type: string
        toPlanification:
          type: integer
    EmailSentDTO:
      type: object
      properties:
        duration:
          type: number
        attachments:
          $ref: '#/components/schemas/List%3CEmailAttachmentDTO%3E'
        sender:
          type: string
        subject:
          type: string
        recipients:
          type: string
        converstaionId:
          type: integer
        html:
          type: string
        from:
          type: string
        to:
          $ref: '#/components/schemas/List%3CString%3E'
        subjectId:
          type: integer
    List<Producttype>:
      type: array
      items:
        $ref: '#/components/schemas/Producttype'
    Producttype:
      type: object
      properties: null
    DataperiodRequest:
      type: object
      properties:
        date:
          type: string
        area:
          type: number
        plotid:
          $ref: '#/components/schemas/Plot'
        responsibleid:
          $ref: '#/components/schemas/Worker'
        cultivationid:
          $ref: '#/components/schemas/Cultivation'
        taskid:
          $ref: '#/components/schemas/Task'
        recipeid:
          $ref: '#/components/schemas/Recipe'
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    SaleorderResume:
      type: object
      properties: null
    List<StockDataDetail>:
      type: array
      items:
        $ref: '#/components/schemas/StockDataDetail'
    StockDataDetail:
      type: object
      properties: null
    TaskCost:
      type: object
      properties: null
    Set<Subject>:
      type: array
      items:
        $ref: '#/components/schemas/Subject'
    Subject:
      type: object
      properties:
        subject:
          type: string
        stateid:
          $ref: '#/components/schemas/State'
        languageid:
          $ref: '#/components/schemas/Language'
        idfront:
          type: string
        type:
          type: string
        idvaliduntil:
          type: string
        serialVersionUID:
          type: string
        street:
          type: string
        postalcode:
          type: string
        systemuser:
          type: string
        email:
          type: string
        idback:
          type: string
        idcardnumber:
          type: string
        town:
          type: string
        subjectexternalcode:
          type: string
        active:
          type: boolean
        photo:
          type: string
        urgentremarks:
          type: string
        subjectid:
          type: integer
        systempassword:
          type: string
        phone:
          type: string
        iban:
          type: string
        subjecttypeid:
          $ref: '#/components/schemas/Subjecttype'
        cardnumber:
          type: string
        subjecttype:
          type: string
        remarks:
          type: string
    Fiscaldata:
      type: object
      properties: null
    GeneratePurchaseInvoicesRequest:
      type: object
      properties:
        date:
          type: string
        reference:
          type: string
        notes:
          $ref: '#/components/schemas/List%3CPurchasenote%3E'
        serie:
          type: string
        accountingdate:
          type: string
        paymentmethod:
          $ref: '#/components/schemas/Paymentmethod'
        group:
          type: boolean
    BarcodeDataperiodResponse:
      type: object
      properties:
        quantity:
          type: number
        productid:
          $ref: '#/components/schemas/Product'
        operationtype:
          type: string
        batchid:
          $ref: '#/components/schemas/Batch'
    Stockadjustment:
      type: object
      properties:
        date:
          type: string
        stockadjustment:
          type: string
        quantity:
          type: number
        productid:
          $ref: '#/components/schemas/Product'
        warehouseid:
          $ref: '#/components/schemas/Warehouse'
        stocklocationid:
          $ref: '#/components/schemas/Stocklocation'
        responsibleid:
          $ref: '#/components/schemas/Subject'
        stockadjustmentid:
          type: integer
        batchid:
          $ref: '#/components/schemas/Batch'
        stockmovementid:
          $ref: '#/components/schemas/Stockmovement'
    List<Charge>:
      type: array
      items:
        $ref: '#/components/schemas/Charge'
    Charge:
      type: object
      properties: null
    Laboralausencesource:
      type: object
      properties: null
    ProductNeed:
      type: object
      properties: null
    List<Section>:
      type: array
      items:
        $ref: '#/components/schemas/Section'
    Section:
      type: object
      properties: null
    GenerateImputationsRequest:
      type: object
      properties:
        dataperiods:
          $ref: '#/components/schemas/List%3CDataperiod%3E'
    List<Casefile>:
      type: array
      items:
        $ref: '#/components/schemas/Casefile'
    Casefile:
      type: object
      properties:
        reference:
          type: string
        archived:
          type: string
        serialVersionUID:
          type: string
        statusid:
          $ref: '#/components/schemas/Status'
        created:
          type: string
        description:
          type: string
        responsibleid:
          $ref: '#/components/schemas/Subject'
        casefiletypeid:
          $ref: '#/components/schemas/Casefiletype'
        casefileid:
          type: integer
        workspaceid:
          $ref: '#/components/schemas/Workspace'
        priorityid:
          $ref: '#/components/schemas/Priority'
    DeleteSaleorderdetailcontainerRequest:
      type: object
      properties:
        saleorderdetailcontainer:
          $ref: '#/components/schemas/List%3CSaleorderdetailcontainer%3E'
    SaveProvisioningRequest:
      type: object
      properties:
        provisioningModelList:
          $ref: '#/components/schemas/List%3CSaveProvisioningModel%3E'
        charger:
          $ref: '#/components/schemas/Subject'
        driver:
          $ref: '#/components/schemas/Subject'
    Email:
      type: object
      properties:
        sender:
          type: string
        subject:
          type: string
        processedat:
          type: string
        body:
          type: string
        receivedat:
          type: string
    List<Assignable>:
      type: array
      items:
        $ref: '#/components/schemas/Assignable'
    Assignable:
      type: object
      properties: null
    List<Contractor>:
      type: array
      items:
        $ref: '#/components/schemas/Contractor'
    Contractor:
      type: object
      properties: null
    WorkedDayTimetick:
      type: object
      properties: null
    HttpServletRequest:
      type: object
      properties: null
    SubjectAdditionalFieldRequest:
      type: object
      properties:
        additionalFields:
          $ref: '#/components/schemas/List%3CAdditionalfield%3E'
        subjectTypes:
          $ref: '#/components/schemas/List%3CString%3E'
    Vehicle:
      type: object
      properties: null
    List<Sectorgeopoint>:
      type: array
      items:
        $ref: '#/components/schemas/Sectorgeopoint'
    Costcenter:
      type: object
      properties: null
    SettlementGroupRequest:
      type: object
      properties:
        recipients:
          $ref: '#/components/schemas/List%3CString%3E'
        settlemetGroupId:
          type: string
    DataperiodResultResponse:
      type: object
      properties:
        orderResult:
          $ref: '#/components/schemas/OrderResult'
        dataperiodTotalsResult:
          $ref: '#/components/schemas/List%3CTotalResult%3E'
        dataperiodexecutionResult:
          $ref: '#/components/schemas/List%3CDataperiodexecutionResult%3E'
    Dialog:
      type: object
      properties: null
    List<PeriodicInvoiceData>:
      type: array
      items:
        $ref: '#/components/schemas/PeriodicInvoiceData'
    PeriodicInvoiceData:
      type: object
      properties: null
    List<Providerproduct>:
      type: array
      items:
        $ref: '#/components/schemas/Providerproduct'
    Providerproduct:
      type: object
      properties: null
    List<Shift>:
      type: array
      items:
        $ref: '#/components/schemas/Shift'
    Shift:
      type: object
      properties: null
    SendMailRequest:
      type: object
      properties:
        cc:
          $ref: '#/components/schemas/List%3CString%3E'
        bodyMimeType:
          type: string
        attachments:
          $ref: '#/components/schemas/List%3CMailAttachment%3E'
        subject:
          type: string
        from:
          type: string
        to:
          $ref: '#/components/schemas/List%3CString%3E'
        body:
          type: string
        cco:
          $ref: '#/components/schemas/List%3CString%3E'
    Short:
      type: string
    SaveWorkspacesRequest:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
        deleteOthers:
          type: boolean
        subjects:
          $ref: '#/components/schemas/List%3CSubject%3E'
    ExecutionItem:
      type: object
      properties:
        duration:
          type: number
        executionid:
          type: integer
        emailItem:
          $ref: '#/components/schemas/EmailItem'
        plannedproductionid:
          $ref: '#/components/schemas/Plannedproduction'
        productionid:
          $ref: '#/components/schemas/Production'
        document:
          $ref: '#/components/schemas/Document'
        registeredat:
          type: string
        delegatesubject:
          $ref: '#/components/schemas/Subject'
        event:
          $ref: '#/components/schemas/Event'
        remarks:
          type: string
        customer:
          $ref: '#/components/schemas/Subject'
    BRDSacrificeResumeDetail:
      type: object
      properties: null
    BirdExecution:
      type: object
      properties: null
    Fertigationrecommendation:
      type: object
      properties: null
    List<AppointmentCustomerResponse>:
      type: array
      items:
        $ref: '#/components/schemas/AppointmentCustomerResponse'
    AppointmentCustomerResponse:
      type: object
      properties: null
    List<PalletResponse>:
      type: array
      items:
        $ref: '#/components/schemas/PalletResponse'
    PalletResponse:
      type: object
      properties:
        sscc:
          type: string
        start:
          type: string
        end:
          type: string
        id:
          type: integer
    Incomestatementbankaccount:
      type: object
      properties:
        usedvalue:
          type: string
        secondtaxpayer:
          type: string
        year:
          type: integer
        countrycode:
          type: string
        otherfamilymemberspercentage:
          type: number
        incomestatementbankaccountid:
          type: integer
        fourthtaxpayer:
          type: string
        dir:
          type: string
        confirmed:
          type: boolean
        participationpercentage:
          type: number
        imputationpercentage:
          type: number
        incomestatementid:
          $ref: '#/components/schemas/Incomestatement'
        nifentity:
          type: string
        act:
          type: boolean
        maintaxpayer:
          type: string
        numreg:
          type: integer
        thirdtaxpayer:
          type: string
        reviewed:
          type: boolean
        lastdigits:
          type: string
        value:
          type: number
        entity:
          type: string
        key:
          type: string
        isin:
          type: string
        numbervalues:
          type: number
    Brand:
      type: object
      properties: null
    RegisterPresenceCardRequest:
      type: object
      properties:
        presencecardcode:
          $ref: '#/components/schemas/Presencecardcode'
        subject:
          $ref: '#/components/schemas/Subject'
        photo:
          type: string
    State:
      type: object
      properties: null
    Subjectvacation:
      type: object
      properties: null
    List<Integer>:
      type: array
      items:
        type: integer
    Integer:
      type: integer
    MakeNewCessionRequest:
      type: object
      properties:
        date:
          type: string
        cessionResumeList:
          $ref: '#/components/schemas/List%3CCessionResume%3E'
    Applicationreason:
      type: object
      properties: null
    TraceabilityRequest:
      type: object
      properties:
        batch:
          type: string
    Collection<OrderRelationship>:
      type: array
      items:
        $ref: '#/components/schemas/OrderRelationship'
    OrderRelationship:
      type: object
      properties: null
    SearchRequest:
      type: object
      properties:
        laboralcontractor:
          type: string
        laboralworker:
          type: string
        until:
          type: string
        laboralreport:
          $ref: '#/components/schemas/Laboralreport'
        since:
          type: string
    List<Tag>:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      properties: null
    Collection<ContainerMovement>:
      type: array
      items:
        $ref: '#/components/schemas/ContainerMovement'
    ContainerMovement:
      type: object
      properties: null
    ReportHoursExcededRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    Form:
      type: object
      properties:
        formid:
          type: integer
        form:
          type: string
        formtemplateid:
          $ref: '#/components/schemas/Formtemplate'
    MatchAccountingEntriesRequest:
      type: object
      properties: null
    FLDResumeRequest:
      type: object
      properties:
        week:
          type: integer
        productid:
          $ref: '#/components/schemas/Product'
        variety:
          $ref: '#/components/schemas/Varietyproduct'
        year:
          type: integer
        cultivationid:
          $ref: '#/components/schemas/Cultivation'
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    ContainerMovementsRequest:
      type: object
      properties:
        producttypeid:
          $ref: '#/components/schemas/Producttype'
        productid:
          $ref: '#/components/schemas/Product'
        warehouseid:
          $ref: '#/components/schemas/Warehouse'
        providerid:
          $ref: '#/components/schemas/Provider'
        subjectaddressid:
          $ref: '#/components/schemas/Subjectaddress'
        containersystem:
          $ref: '#/components/schemas/Attributevalue'
        customerid:
          $ref: '#/components/schemas/Customer'
        from:
          type: string
        to:
          type: string
    PurchasedetailRequest:
      type: object
      properties:
        saleorderid:
          type: integer
        compositionDetails:
          type: boolean
    List<Movement>:
      type: array
      items:
        $ref: '#/components/schemas/Movement'
    Movement:
      type: object
      properties: null
    List<ForecastPlanificationResponse>:
      type: array
      items:
        $ref: '#/components/schemas/ForecastPlanificationResponse'
    ForecastPlanificationResponse:
      type: object
      properties: null
    UploadRequest:
      type: object
      properties:
        purchaseinvoice:
          $ref: '#/components/schemas/Purchaseinvoice'
        purchasenote:
          $ref: '#/components/schemas/Purchasenote'
        filename:
          type: string
        fullpath:
          type: string
        salenote:
          $ref: '#/components/schemas/Salenote'
        fileByteArray:
          $ref: '#/components/schemas/byte[]'
        visibleForCustomer:
          type: boolean
        saleinvoice:
          $ref: '#/components/schemas/Saleinvoice'
        dataperiod:
          $ref: '#/components/schemas/Dataperiod'
        subjectid:
          $ref: '#/components/schemas/Subject'
    List<WorkerPresenceInformation>:
      type: array
      items:
        $ref: '#/components/schemas/WorkerPresenceInformation'
    WorkerPresenceInformation:
      type: object
      properties: null
    Opportunity:
      type: object
      properties:
        leadid:
          $ref: '#/components/schemas/Lead'
    PurchaseOrderRequest:
      type: object
      properties: null
    DataperiodMovementResponse:
      type: object
      properties:
        dataperiodId:
          type: integer
        type:
          $ref: '#/components/schemas/DataperiodMovementType'
        items:
          $ref: '#/components/schemas/List%3CDataperiodMovementItemResponse%3E'
    NonFinishedEntry:
      type: object
      properties: null
    'Map<Integer,Integer>':
      type: object
      additionalProperties:
        type: integer
    List<NonProducedSale>:
      type: array
      items:
        $ref: '#/components/schemas/NonProducedSale'
    NonProducedSale:
      type: object
      properties: null
    CultureTemplateType:
      type: object
      properties: null
    List<Plannedproduction>:
      type: array
      items:
        $ref: '#/components/schemas/Plannedproduction'
    Plannedproduction:
      type: object
      properties:
        date:
          type: string
        plannedproductionid:
          type: integer
        productid:
          $ref: '#/components/schemas/Product'
        lineid:
          $ref: '#/components/schemas/Line'
        saleorderdetailid:
          $ref: '#/components/schemas/Saleorderdetail'
        privacylevel:
          type: integer
        finishedat:
          type: string
        externalcode:
          type: string
        estimatedexecutiontime:
          type: number
        statusid:
          $ref: '#/components/schemas/Status'
        movementunitid:
          $ref: '#/components/schemas/Movementunit'
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
        plannedexecutorid:
          $ref: '#/components/schemas/Subject'
        taskid:
          $ref: '#/components/schemas/Task'
        provisional:
          type: boolean
        unitsbycontainer:
          type: integer
        quantity:
          type: number
        goal:
          type: number
        startedat:
          type: string
        done:
          type: integer
        priorityid:
          $ref: '#/components/schemas/Priority'
        plannedorder:
          type: integer
        duedate:
          type: string
        responsibleid:
          $ref: '#/components/schemas/Subject'
        plannedproduction:
          type: string
        containerunits:
          type: number
        comunicatedat:
          type: string
        remarks:
          type: string
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    Sector:
      type: object
      properties:
        area:
          type: number
        sectorid:
          type: integer
        campaignid:
          $ref: '#/components/schemas/Campaign'
        infolatitude:
          type: string
        rotation:
          type: integer
        infolongitude:
          type: string
        sector:
          type: string
        hydrantid:
          $ref: '#/components/schemas/Hydrant'
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    DocumentNoteDTO:
      type: object
      properties: null
    Notificable:
      type: object
      properties: null
    List<FLDAlerts>:
      type: array
      items:
        $ref: '#/components/schemas/FLDAlerts'
    FLDAlerts:
      type: object
      properties: null
    ContactWix:
      type: object
      properties: null
    PayDueDateRequest:
      type: object
      properties:
        chargeList:
          $ref: '#/components/schemas/List%3CCharge%3E'
        newPaymentList:
          $ref: '#/components/schemas/List%3CPayment%3E'
        newChargeList:
          $ref: '#/components/schemas/List%3CCharge%3E'
        group:
          type: boolean
        paymentList:
          $ref: '#/components/schemas/List%3CPayment%3E'
    CustomersBalancesRequest:
      type: object
      properties:
        date:
          type: string
        customers:
          $ref: '#/components/schemas/List%3CCustomer%3E'
    Collection<Purchaseinvoice>:
      type: array
      items:
        $ref: '#/components/schemas/Purchaseinvoice'
    Purchaseinvoice:
      type: object
      properties:
        date:
          type: string
        siisubmissionid:
          $ref: '#/components/schemas/Siisubmission'
        discount:
          type: number
        accountingdate:
          type: string
        purchaseinvoiceid:
          type: integer
        reference:
          type: string
        number:
          type: integer
        companyid:
          $ref: '#/components/schemas/Contractor'
        externalcode:
          type: string
        providerid:
          $ref: '#/components/schemas/Subject'
        lastmodified:
          type: string
        internalremarks:
          type: string
        serie:
          type: string
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        accountingentryid:
          $ref: '#/components/schemas/Accountingentry'
        casefileid:
          $ref: '#/components/schemas/Casefile'
        remarks:
          type: string
    List<BalanceClaim>:
      type: array
      items:
        $ref: '#/components/schemas/BalanceClaim'
    BalanceClaim:
      type: object
      properties: null
    SSNumberRequest:
      type: object
      properties:
        idcardnumber:
          type: string
        surname1:
          type: string
        surname2:
          type: string
    ETTDataperiodWorkedDay:
      type: object
      properties: null
    List<BalanceDetail>:
      type: array
      items:
        $ref: '#/components/schemas/BalanceDetail'
    BalanceDetail:
      type: object
      properties: null
    List<Dataperiod>:
      type: array
      items:
        $ref: '#/components/schemas/Dataperiod'
    Dataperiod:
      type: object
      properties:
        branchid:
          $ref: '#/components/schemas/Branch'
        systemusername:
          type: string
        serialVersionUID:
          type: string
        firstsyncingtry:
          type: string
        externalcode:
          type: string
        statusid:
          $ref: '#/components/schemas/Status'
        createdby:
          $ref: '#/components/schemas/Subject'
        teamid:
          $ref: '#/components/schemas/Team'
        dataperiodid:
          type: integer
        passed:
          type: boolean
        dataperiodtypeid:
          $ref: '#/components/schemas/Dataperiodtype'
        casefileid:
          $ref: '#/components/schemas/Casefile'
        timestamp:
          type: string
        completionreasonid:
          $ref: '#/components/schemas/Completionreason'
        synced:
          type: string
        laststatuschange:
          type: string
        terminalid:
          $ref: '#/components/schemas/Terminal'
        dataperiod:
          type: string
        verificationpending:
          type: boolean
        satisfactiondegreeid:
          $ref: '#/components/schemas/Satisfactiondegree'
        responsibleid:
          $ref: '#/components/schemas/Subject'
        until:
          type: string
        vehicleid:
          $ref: '#/components/schemas/Vehicle'
        revised:
          type: boolean
        remarks:
          type: string
        since:
          type: string
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    PhocusUser:
      type: object
      properties:
        branchId:
          type: integer
        roles:
          $ref: '#/components/schemas/Collection%3CPhocusAccountrole%3E'
        photo:
          type: string
        userName:
          type: string
        telegramid:
          type: string
        gcmtoken:
          type: string
        accountid:
          type: integer
        serialVersionUID:
          type: string
        password:
          type: string
        companyId:
          type: integer
        name:
          type: string
        phocusSolutions:
          $ref: '#/components/schemas/List%3CPhocusSolution%3E'
        email:
          type: string
    SaleinvoiceCredit:
      type: object
      properties: null
    SalenoteDataRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
        attribute:
          $ref: '#/components/schemas/Attribute'
    UriInfo:
      type: object
      properties: null
    CultivationTreatments:
      type: object
      properties: null
    LaboralausenceExtended:
      type: object
      properties: null
    OlapReport:
      type: object
      properties: null
    CheckWorkerRequest:
      type: object
      properties:
        date:
          type: string
        idcardnumber:
          type: string
        companyId:
          type: string
    Saleorder:
      type: object
      properties:
        date:
          type: string
        creationdate:
          type: string
        additionalreference:
          type: string
        estimatedshippingdate:
          type: string
        discount:
          type: number
        finisheddate:
          type: string
        saleorderid:
          type: integer
        reference:
          type: string
        number:
          type: integer
        transportagencyid:
          $ref: '#/components/schemas/Transportagency'
        externalcode:
          type: string
        anulationdate:
          type: string
        pickerid:
          $ref: '#/components/schemas/Worker'
        casefileid:
          $ref: '#/components/schemas/Casefile'
        contractorid:
          $ref: '#/components/schemas/Contractor'
        estimatedshippingcost:
          type: number
        transportinstructions:
          type: string
        estimateddeliverydate:
          type: string
        sendtoaddressid:
          $ref: '#/components/schemas/Subjectaddress'
        confirmationdate:
          type: string
        platenumber:
          type: string
        sellerid:
          $ref: '#/components/schemas/Worker'
        routeid:
          $ref: '#/components/schemas/Route'
        incoterm:
          type: string
        internalremarks:
          type: string
        serie:
          type: string
        customerid:
          $ref: '#/components/schemas/Subject'
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        consideredshipped:
          type: string
        remarks:
          type: string
    'Map<ComparisonOperator,PersistenceCriteria>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PersistenceCriteria'
    PersistenceCriteria:
      type: object
      properties:
        criteriaItems:
          $ref: '#/components/schemas/List%3CCriteriaItem%3E'
        criteriaJoiners:
          $ref: '#/components/schemas/List%3CComparisonOperator%3E'
        nestedCriteria:
          $ref: '#/components/schemas/Map%3CComparisonOperator,PersistenceCriteria%3E'
        limit:
          type: integer
        stronglyTyped:
          type: boolean
        collectionsToInclude:
          $ref: '#/components/schemas/List%3CString%3E'
        refreshCache:
          type: boolean
        fieldsToExclude:
          $ref: '#/components/schemas/List%3CString%3E'
        order:
          $ref: '#/components/schemas/Map%3CString,String%3E'
    List<Potentialcustomer>:
      type: array
      items:
        $ref: '#/components/schemas/Potentialcustomer'
    Potentialcustomer:
      type: object
      properties: null
    Transportagency:
      type: object
      properties: null
    Cultivationproduct:
      type: object
      properties: null
    Collection<Purchaseorder>:
      type: array
      items:
        $ref: '#/components/schemas/Purchaseorder'
    Purchaseorder:
      type: object
      properties:
        date:
          type: string
        estimatedarrivingdate:
          type: string
        creationdate:
          type: string
        discount:
          type: number
        purchaseorderid:
          type: integer
        reference:
          type: string
        number:
          type: integer
        transportagencyid:
          $ref: '#/components/schemas/Transportagency'
        externalcode:
          type: string
        anulationdate:
          type: string
        parentpurchaseorderid:
          $ref: '#/components/schemas/Purchaseorder'
        consideredreceived:
          type: string
        casefileid:
          $ref: '#/components/schemas/Casefile'
        email:
          type: string
        contractorid:
          $ref: '#/components/schemas/Contractor'
        estimatedshippingcost:
          type: number
        transportcost:
          type: number
        sent:
          type: string
        confirmationdate:
          type: string
        platenumber:
          type: string
        providerid:
          $ref: '#/components/schemas/Subject'
        internalremarks:
          type: string
        serie:
          type: string
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        remarks:
          type: string
    List<ImputationInterval>:
      type: array
      items:
        $ref: '#/components/schemas/ImputationInterval'
    ImputationInterval:
      type: object
      properties: null
    List<Fertigationrecommendation>:
      type: array
      items:
        $ref: '#/components/schemas/Fertigationrecommendation'
    List<AccountResume>:
      type: array
      items:
        $ref: '#/components/schemas/AccountResume'
    AccountResume:
      type: object
      properties: null
    List<StockMovementType>:
      type: array
      items:
        $ref: '#/components/schemas/StockMovementType'
    StockMovementType:
      type: object
      properties: null
    Asset:
      type: object
      properties: null
    ForecastResponse:
      type: object
      properties:
        forecastWeekSummaryList:
          $ref: '#/components/schemas/List%3CForecastWeekSummary%3E'
        forecastSummaryList:
          $ref: '#/components/schemas/List%3CForecastSummary%3E'
        forecastWeekProgramList:
          $ref: '#/components/schemas/List%3CForecastWeekProgram%3E'
    List<PurchaseOrderRequest>:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseOrderRequest'
    List<CallingSlot>:
      type: array
      items:
        $ref: '#/components/schemas/CallingSlot'
    CallingSlot:
      type: object
      properties: null
    byte:
      type: string
    Plot:
      type: object
      properties:
        plotnumber:
          type: string
        plot:
          type: string
        towncode:
          type: string
        contractorid:
          $ref: '#/components/schemas/Contractor'
        campaignid:
          $ref: '#/components/schemas/Campaign'
        plotid:
          type: integer
        statecode:
          type: string
        polygoncode:
          type: string
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    Purchaseorderdetail:
      type: object
      properties: null
    PaymentLoanRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        loanResumeList:
          $ref: '#/components/schemas/List%3CLoanResume%3E'
        bankaccount:
          $ref: '#/components/schemas/Bankaccount'
    BatchNode:
      type: object
      properties: null
    GenerateInvoiceRequest:
      type: object
      properties:
        date:
          type: string
        number:
          type: integer
        serie:
          type: string
    List<Laboralreportplanification>:
      type: array
      items:
        $ref: '#/components/schemas/Laboralreportplanification'
    Laboralreportplanification:
      type: object
      properties: null
    List<Line>:
      type: array
      items:
        $ref: '#/components/schemas/Line'
    Line:
      type: object
      properties: null
    Laboralausencedetailtype:
      type: object
      properties: null
    Loan:
      type: object
      properties: null
    DuplicateInvoiceRequest:
      type: object
      properties:
        duplcateDetails:
          type: boolean
        date:
          type: string
        serie:
          type: string
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
    LoanResume:
      type: object
      properties: null
    'Dataperiodrequest[]':
      type: array
      items:
        $ref: '#/components/schemas/Dataperiodrequest'
    Dataperiodrequest:
      type: object
      properties: null
    ReportRetentionResumeRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    PhocusAccountrole:
      type: object
      properties: null
    List<Payment>:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
    Payment:
      type: object
      properties: null
    BankReconciliationAccountingDTO:
      type: object
      properties:
        bankreconciliations:
          $ref: '#/components/schemas/List%3CBankreconciliationMatch%3E'
        accountingentrydetails:
          $ref: '#/components/schemas/List%3CAccountingEntryDetailMatch%3E'
    CreateSettlementRequest:
      type: object
      properties:
        includePaymentsUntil:
          type: string
        trainer:
          $ref: '#/components/schemas/Trainer'
    CrudFormDefinition:
      type: object
      properties: null
    SaveFiscalDataAttachmentDTO:
      type: object
      properties:
        path:
          type: string
        idcardnumber:
          type: string
        emailAddress:
          type: string
        customerId:
          type: integer
        emailId:
          type: integer
        customerPath:
          type: string
    FertigationChangesRequest:
      type: object
      properties:
        materialList:
          $ref: '#/components/schemas/List%3CMaterial%3E'
        fertigations:
          $ref: '#/components/schemas/List%3CFertigation%3E'
    AppointmentUpdateRequest:
      type: object
      properties:
        appointment:
          $ref: '#/components/schemas/Appointment'
        until:
          type: string
        since:
          type: string
    AccountingEntryDetailMatch:
      type: object
      properties: null
    SaveQuaterlyTaxAttachmentDTO:
      type: object
      properties:
        path:
          type: string
        idcardnumber:
          type: string
        emailAddress:
          type: string
        period:
          type: integer
        year:
          type: integer
        customerId:
          type: integer
        emailId:
          type: integer
        model:
          type: string
        customerPath:
          type: string
    WorkedDay:
      type: object
      properties:
        dataperiods:
          $ref: '#/components/schemas/List%3CWorkedDayDataperiod%3E'
        timetickActions:
          $ref: '#/components/schemas/WorkedDayActions'
        productionAssets:
          $ref: '#/components/schemas/List%3CWorkedDayProductionasset%3E'
        exportimputation:
          type: boolean
        generateimputation:
          type: boolean
        imputationActions:
          $ref: '#/components/schemas/WorkedDayActions'
        contracts:
          $ref: '#/components/schemas/List%3CWorkedDayContract%3E'
        presencecolumn:
          type: boolean
        imputations:
          $ref: '#/components/schemas/List%3CWorkedDayImputation%3E'
        times:
          $ref: '#/components/schemas/List%3CWorkedDayTime%3E'
        extenseDataperiod:
          type: boolean
        timeticks:
          $ref: '#/components/schemas/List%3CWorkedDayTimetick%3E'
        productions:
          $ref: '#/components/schemas/List%3CWorkedDayProduction%3E'
        dataperiodActions:
          $ref: '#/components/schemas/WorkedDayActions'
        editablediscount:
          type: boolean
    StockDataResponse:
      type: object
      properties:
        containers:
          $ref: '#/components/schemas/Map%3CInteger,Collection%3CStockcontainer%3E%3E'
        stockData:
          $ref: '#/components/schemas/List%3CStockData%3E'
        attributeBatchValues:
          $ref: '#/components/schemas/Map%3CInteger,List%3CAttributebatchvalue%3E%3E'
    SectorMapRequest:
      type: object
      properties:
        campaignid:
          $ref: '#/components/schemas/Campaign'
        contractorid:
          $ref: '#/components/schemas/Contractor'
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    AttributeDataperiodRequest:
      type: object
      properties:
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
    Emailfolder:
      type: object
      properties:
        externalcode:
          type: string
        emailfolderid:
          type: integer
        emailfolder:
          type: string
        parentfolderid:
          $ref: '#/components/schemas/Emailfolder'
    ZimbraLoginResult:
      type: object
      properties:
        phocusToken:
          type: string
        zimbraAuthToken:
          type: string
    List<ProductionDetail>:
      type: array
      items:
        $ref: '#/components/schemas/ProductionDetail'
    ProductionDetail:
      type: object
      properties: null
    GaragevehicleCustomerDTO:
      type: object
      properties: null
    StockchangeFormat:
      type: object
      properties: null
    SaleNoteDetailsDivideRequest:
      type: object
      properties:
        salenoteDetailId:
          type: integer
        salenoteDetailDivideList:
          $ref: '#/components/schemas/List%3CSaleNoteDetailDivide%3E'
    ReportRequest:
      type: object
      properties:
        criteria:
          $ref: '#/components/schemas/PersistenceCriteria'
        format:
          type: string
    CreateEntryRequest:
      type: object
      properties:
        date:
          type: string
        mobilePrinter:
          type: boolean
        unitsbycontainer:
          type: number
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: number
        printLabel:
          type: boolean
        movementunit:
          $ref: '#/components/schemas/Movementunit'
        warehouse:
          $ref: '#/components/schemas/Warehouse'
        batchid:
          $ref: '#/components/schemas/Batch'
        containerunits:
          type: integer
        batchRequest:
          $ref: '#/components/schemas/BatchRequest'
        entryid:
          type: integer
    List<Message>:
      type: array
      items:
        $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/Account'
        groupid:
          $ref: '#/components/schemas/Group'
        messageid:
          type: integer
        originalid:
          type: integer
        message:
          type: string
        timestamp:
          type: string
    TotalResult:
      type: object
      properties: null
    Palettype:
      type: object
      properties: null
    GenerateFertigationRequest:
      type: object
      properties:
        fertigationcultivationdetailList:
          $ref: '#/components/schemas/List%3CFertigationcultivationdetail%3E'
        fertigation:
          $ref: '#/components/schemas/Fertigation'
    Activeworkerreportdetail:
      type: object
      properties:
        activeworkerreportid:
          $ref: '#/components/schemas/Activeworkerreport'
        socialsecuritycode:
          type: string
        idcardnumber:
          type: string
        activeworkerreportdetailid:
          type: integer
        name:
          type: string
        checked:
          type: string
        checkedbyuser:
          type: string
        disabled:
          type: string
        laboralworkerid:
          $ref: '#/components/schemas/Laboralworker'
    List<Treatment>:
      type: array
      items:
        $ref: '#/components/schemas/Treatment'
    Treatment:
      type: object
      properties: null
    Set<PendingTaskDTO>:
      type: array
      items:
        $ref: '#/components/schemas/PendingTaskDTO'
    PendingTaskDTO:
      type: object
      properties: null
    EmailItem:
      type: object
      properties:
        cc:
          type: string
        eventid:
          type: integer
        attachments:
          type: string
        plannedproductionid:
          $ref: '#/components/schemas/Plannedproduction'
        subject:
          type: string
        emailfolderid:
          $ref: '#/components/schemas/Emailfolder'
        body:
          type: string
        parentemailid:
          type: integer
        receivedat:
          type: string
        cco:
          type: string
        unreaded:
          type: boolean
        externalcode:
          type: string
        sender:
          $ref: '#/components/schemas/Emailaddress'
        processedat:
          type: string
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
        eventtype:
          type: string
        systemuser:
          $ref: '#/components/schemas/Systemuser'
        to:
          type: string
    Task:
      type: object
      properties: null
    List<RequiredTaskRythm>:
      type: array
      items:
        $ref: '#/components/schemas/RequiredTaskRythm'
    RequiredTaskRythm:
      type: object
      properties: null
    CertificateInfoRequest:
      type: object
      properties:
        certificatePath:
          type: string
        getCertificatePassword:
          type: string
    List<Plot>:
      type: array
      items:
        $ref: '#/components/schemas/Plot'
    List<WorkedDayProduction>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedDayProduction'
    WorkedDayProduction:
      type: object
      properties: null
    List<Bankreconciliationaccountingentrydetail>:
      type: array
      items:
        $ref: '#/components/schemas/Bankreconciliationaccountingentrydetail'
    Bankreconciliationaccountingentrydetail:
      type: object
      properties: null
    List<Dataperiodadditionalfieldvalue>:
      type: array
      items:
        $ref: '#/components/schemas/Dataperiodadditionalfieldvalue'
    Dataperiodadditionalfieldvalue:
      type: object
      properties: null
    List<ProfitItem>:
      type: array
      items:
        $ref: '#/components/schemas/ProfitItem'
    ProfitItem:
      type: object
      properties: null
    AgrosabasAssignable:
      type: object
      properties: null
    CreateconfectionRequest:
      type: object
      properties:
        date:
          type: string
        quantity:
          type: integer
        code:
          type: string
        lineid:
          $ref: '#/components/schemas/Line'
        taskid:
          $ref: '#/components/schemas/Task'
    List<BRDSacrificeResumeDetail>:
      type: array
      items:
        $ref: '#/components/schemas/BRDSacrificeResumeDetail'
    Plus:
      type: object
      properties: null
    void:
      type: string
    List<ProductionResume>:
      type: array
      items:
        $ref: '#/components/schemas/ProductionResume'
    ProductionResume:
      type: object
      properties: null
    DistributeEntryRequest:
      type: object
      properties:
        weight:
          type: number
        entryid:
          $ref: '#/components/schemas/Entry'
    NewImputationsRequest:
      type: object
      properties:
        imputations:
          $ref: '#/components/schemas/List%3CDataperiodimputation%3E'
        pluses:
          $ref: '#/components/schemas/List%3CPlus%3E'
    PurchaseOrderDetailRequest:
      type: object
      properties:
        date:
          type: string
        productTypeId:
          type: integer
    List<ForecastSummary>:
      type: array
      items:
        $ref: '#/components/schemas/ForecastSummary'
    ForecastSummary:
      type: object
      properties:
        needs:
          type: number
        holidayRemarks:
          type: string
        percentagesByTaskId:
          $ref: '#/components/schemas/Map%3CInteger,Double[]%3E'
        pendingPreconfirmed:
          type: number
        percentages:
          $ref: '#/components/schemas/Double[]'
        taskList:
          $ref: '#/components/schemas/List%3CTask%3E'
        assignedDates:
          type: string
        forecast:
          $ref: '#/components/schemas/Forecast'
        executed:
          type: number
        holiday:
          type: boolean
        pendingQuantity:
          type: number
        consumptionList:
          $ref: '#/components/schemas/Collection%3CConsumptionSummary%3E'
        assigned:
          type: number
        alreadyOrdered:
          type: number
    PendingSaleOrderDetailsRequest:
      type: object
      properties:
        fromDate:
          type: string
        product:
          type: string
        provider:
          type: string
        toDate:
          type: string
        toEstimatedShippingDate:
          type: string
        fromEstimatedShippingDate:
          type: string
        producttype:
          type: string
        customer:
          type: string
    WorkedDayProductionasset:
      type: object
      properties: null
    AddDataperiodMovementRequest:
      type: object
      properties:
        quantity:
          type: number
        productid:
          $ref: '#/components/schemas/Product'
        dataperiodMovementType:
          $ref: '#/components/schemas/DataperiodMovementType'
        batch:
          type: string
        dataperiodId:
          type: integer
    SectorWithCultivationDTO:
      type: object
      properties: null
    PhotoFromSubjectRequest:
      type: object
      properties:
        idSubjects:
          $ref: '#/components/schemas/List%3CInteger%3E'
    List<SaleInvoicesToMailingResponse>:
      type: array
      items:
        $ref: '#/components/schemas/SaleInvoicesToMailingResponse'
    SaleInvoicesToMailingResponse:
      type: object
      properties: null
    Transaction:
      type: object
      properties:
        date:
          type: string
        externalcode:
          type: string
        transactionid:
          type: integer
        transaction:
          type: string
    ReportOtherExpensesRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    Slice:
      type: object
      properties: null
    Forecast:
      type: object
      properties:
        offer:
          type: boolean
        forecastid:
          type: integer
        quantity:
          type: number
        productid:
          $ref: '#/components/schemas/Product'
        preconfirmed:
          type: number
        customerid:
          $ref: '#/components/schemas/Customer'
        estimatedshippingdate:
          type: string
        closed:
          type: string
        remarks:
          type: string
    List<ImputationResume>:
      type: array
      items:
        $ref: '#/components/schemas/ImputationResume'
    ImputationResume:
      type: object
      properties: null
    ReportConfiguration:
      type: object
      properties:
        formats:
          $ref: '#/components/schemas/List%3CFormat%3E'
        slice:
          $ref: '#/components/schemas/Slice'
        reportconfigurationid:
          type: integer
        options:
          $ref: '#/components/schemas/Options'
        olapreportid:
          $ref: '#/components/schemas/OlapReport'
        reportconfigurationname:
          type: string
        creationDate:
          type: string
        version:
          type: string
    UpdateNeedsResponse:
      type: object
      properties:
        classes:
          $ref: '#/components/schemas/Map%3CString,Map%3CObject,Timestamp%3E%3E'
        instancesToDelete:
          $ref: '#/components/schemas/Map%3CString,List%3CInteger%3E%3E'
    ProductSalesPurchasesHistoryDTO:
      type: object
      properties:
        product:
          type: string
        externalcode:
          type: string
        productid:
          type: integer
        references:
          type: string
        purchases:
          $ref: '#/components/schemas/ArrayList%3CSalePurchaseDetailDTO%3E'
        price:
          type: number
        sales:
          $ref: '#/components/schemas/ArrayList%3CSalePurchaseDetailDTO%3E'
        stocks:
          $ref: '#/components/schemas/ArrayList%3CStockDataDTO%3E'
    File:
      type: object
      properties: null
    Subjecttype:
      type: object
      properties: null
    'Map<String,Map<Integer,Object>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Map%3CInteger,Object%3E'
    Plannedproductionmachine:
      type: object
      properties: null
    ProductionUpdateRequest:
      type: object
      properties:
        idcardnumber:
          type: string
        hours:
          type: number
        quantity:
          type: number
        cost:
          type: number
        dataperiodid:
          type: integer
    OEEData:
      type: object
      properties:
        date:
          type: string
        product:
          $ref: '#/components/schemas/Product'
        production:
          $ref: '#/components/schemas/Production'
        line:
          $ref: '#/components/schemas/Line'
        format:
          type: string
        nonplannedstoptime:
          type: number
        additionalFieldsValues:
          $ref: '#/components/schemas/List%3CProductionadditionalfieldvalue%3E'
        availability:
          type: number
        totalunits:
          type: number
        dataperiod:
          $ref: '#/components/schemas/Dataperiod'
        validunits:
          type: number
        oee:
          type: number
        speed:
          type: number
        quality:
          type: number
        defectiveunits:
          type: number
        performance:
          type: number
        totaltime:
          type: number
        shouldbemade:
          type: number
        plannedstoptime:
          type: number
        workingtime:
          type: number
        customer:
          $ref: '#/components/schemas/Customer'
    Accountingentry:
      type: object
      properties:
        date:
          type: string
        disconnected:
          type: boolean
        externalcode:
          type: string
        contractorid:
          $ref: '#/components/schemas/Contractor'
        entrynumber:
          type: integer
        description:
          type: string
        accountingentryid:
          type: integer
        accountingentrytypeid:
          $ref: '#/components/schemas/Accountingentrytype'
    Varietyproduct:
      type: object
      properties: null
    List<Planificationdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Planificationdetail'
    Planificationdetail:
      type: object
      properties: null
    List<SaleNoteDetailDivide>:
      type: array
      items:
        $ref: '#/components/schemas/SaleNoteDetailDivide'
    SaleNoteDetailDivide:
      type: object
      properties: null
    StockDetail:
      type: object
      properties: null
    List<Laboralworker>:
      type: array
      items:
        $ref: '#/components/schemas/Laboralworker'
    Laboralworker:
      type: object
      properties: null
    SessionFilter:
      type: object
      properties:
        accountid:
          type: string
        ip:
          type: string
        until:
          type: string
        since:
          type: string
    Fertigation:
      type: object
      properties: null
    SerialshippingcontainerResume:
      type: object
      properties: null
    DataperiodMovementType:
      type: object
      properties: null
    Collection<PhocusAccountrole>:
      type: array
      items:
        $ref: '#/components/schemas/PhocusAccountrole'
    Bagtype:
      type: object
      properties: null
    ShareEmailPlanificationsRequest:
      type: object
      properties: null
    Collection<Purchasenote>:
      type: array
      items:
        $ref: '#/components/schemas/Purchasenote'
    Purchasenote:
      type: object
      properties: null
    Batchadditionalfieldvalue:
      type: object
      properties: null
    Trainingplan:
      type: object
      properties: null
    EmailAttachmentDTO:
      type: object
      properties: null
    ImputationsMonthResume:
      type: object
      properties: null
    List<WorkerTaskTime>:
      type: array
      items:
        $ref: '#/components/schemas/WorkerTaskTime'
    WorkerTaskTime:
      type: object
      properties: null
    AgrosabasAssignableDTO:
      type: object
      properties:
        assignables:
          $ref: '#/components/schemas/List%3CAgrosabasAssignable%3E'
        serialshippingcontainerdetails:
          $ref: '#/components/schemas/List%3CSerialshippingcontainerdetail%3E'
    DataperiodMovementRequest:
      type: object
      properties:
        dataperiodId:
          type: integer
        type:
          $ref: '#/components/schemas/DataperiodMovementType'
    List<UnitCostResume>:
      type: array
      items:
        $ref: '#/components/schemas/UnitCostResume'
    UnitCostResume:
      type: object
      properties: null
    List<ForecastWeekProgram>:
      type: array
      items:
        $ref: '#/components/schemas/ForecastWeekProgram'
    ForecastWeekProgram:
      type: object
      properties: null
    Fertigationcultivationdetail:
      type: object
      properties: null
    List<ProductionCheck>:
      type: array
      items:
        $ref: '#/components/schemas/ProductionCheck'
    ProductionCheck:
      type: object
      properties: null
    PurchasenoteExtra:
      type: object
      properties: null
    AmortizationsRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        from:
          type: string
        to:
          type: string
        depreciableassettype:
          $ref: '#/components/schemas/Depreciableassettype'
        ignorecontabilized:
          type: boolean
    Document:
      type: object
      properties: null
    List<Document>:
      type: array
      items:
        $ref: '#/components/schemas/Document'
    FLDVariationResumeRow:
      type: object
      properties: null
    Messagerecipient:
      type: object
      properties:
        messagerecipientid:
          type: integer
        readed:
          type: string
        notificationReceived:
          type: string
        recipientid:
          $ref: '#/components/schemas/Account'
        messageid:
          $ref: '#/components/schemas/Message'
        delivered:
          type: string
        sent:
          type: string
        timestamp:
          type: string
    List<Plus>:
      type: array
      items:
        $ref: '#/components/schemas/Plus'
    List<WorkedDayContract>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedDayContract'
    WorkedDayContract:
      type: object
      properties: null
    List<Worker>:
      type: array
      items:
        $ref: '#/components/schemas/Worker'
    Worker:
      type: object
      properties:
        idcardnumber:
          type: string
        address:
          type: string
        birthdate:
          type: string
        professionagroup:
          type: string
        afiliationnumber:
          type: string
        begun:
          type: string
        dailysalary:
          type: number
        speciality:
          type: string
        province:
          type: string
        surname:
          type: string
        nacionality:
          type: string
        name:
          type: string
        category:
          type: string
        representative:
          type: boolean
    Tasklevel:
      type: object
      properties: null
    List<Check349Info>:
      type: array
      items:
        $ref: '#/components/schemas/Check349Info'
    ProductNeedRequest:
      type: object
      properties:
        producttypeid:
          $ref: '#/components/schemas/Producttype'
        week:
          type: integer
        year:
          type: integer
    List<CriteriaItem>:
      type: array
      items:
        $ref: '#/components/schemas/CriteriaItem'
    CriteriaItem:
      type: object
      properties: null
    Stockchange:
      type: object
      properties:
        date:
          type: string
        platenumber:
          type: string
        stockchange:
          type: string
        stockchangeid:
          type: integer
        destinationwarehouseid:
          $ref: '#/components/schemas/Warehouse'
        originwarehouseid:
          $ref: '#/components/schemas/Warehouse'
        remarks:
          type: string
    Dataperiodexecution:
      type: object
      properties: null
    WorkspaceForecast:
      type: object
      properties: null
    PurchaseinvoiceResumeRequest:
      type: object
      properties:
        date:
          type: string
        reference:
          type: string
        providerid:
          $ref: '#/components/schemas/Provider'
        contractorid:
          $ref: '#/components/schemas/Contractor'
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
    PendingPlannedproductionRequest:
      type: object
      properties:
        date:
          type: string
        producttypeid:
          $ref: '#/components/schemas/Producttype'
        taskid:
          $ref: '#/components/schemas/Task'
    CustomerBalance:
      type: object
      properties: null
    Mailingexecution:
      type: object
      properties:
        mailingexecutionid:
          type: integer
        executiondate:
          type: string
        mailingid:
          $ref: '#/components/schemas/Mailing'
    List<OEEData>:
      type: array
      items:
        $ref: '#/components/schemas/OEEData'
    McnReportRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
    List<Incomestatementestate>:
      type: array
      items:
        $ref: '#/components/schemas/Incomestatementestate'
    Incomestatementestate:
      type: object
      properties:
        cadastralvalue:
          type: number
        year:
          type: integer
        use:
          type: string
        type:
          type: string
        ownershippercentage:
          type: number
        act:
          type: boolean
        numreg:
          type: integer
        legal:
          type: number
        accruesthirdparties:
          type: number
        numdays:
          type: integer
        secondtaxpayer:
          type: string
        town:
          type: string
        aeatchecked:
          type: boolean
        landcadastralvalue:
          type: number
        community:
          type: number
        imputationpercentage:
          type: number
        contractdate:
          type: string
        acquisitionvalue:
          type: number
        netincomelastyear:
          type: number
        acquisitiontype:
          type: string
        alienationdate:
          type: string
        constructioncadastralvalue:
          type: number
        formalizationcontract:
          type: number
        lesseeidcardnumber:
          type: string
        retentionvalue:
          type: number
        cadastralreference:
          type: string
        conservationrepair:
          type: number
        confirmed:
          type: boolean
        incomestatementid:
          $ref: '#/components/schemas/Incomestatement'
        imputation2:
          type: string
        mainestatecadastralreference:
          type: string
        acquisitiondate:
          type: string
        interest:
          type: number
        furnitureamortization:
          type: number
        situation:
          type: string
        imputation1:
          type: string
        servicesupplies:
          type: number
        realestateclass:
          type: string
        otherexpenses:
          type: number
        premiums:
          type: number
        incomestatementestateid:
          type: integer
        fullincome:
          type: number
        accessoriesamortization:
          type: number
        cadastralrevision:
          type: boolean
        tributes:
          type: number
        ownership:
          type: string
        maintaxpayer:
          type: string
        netincome:
          type: number
        realestateamortization:
          type: number
        remarks:
          type: string
    List<IrrigationSectorWithCultivationDTO>:
      type: array
      items:
        $ref: '#/components/schemas/IrrigationSectorWithCultivationDTO'
    GarageVehicleSaleDetailDTO:
      type: object
      properties: null
    List<Attributedataperiodvalue>:
      type: array
      items:
        $ref: '#/components/schemas/Attributedataperiodvalue'
    Attributedataperiodvalue:
      type: object
      properties: null
    List<Container>:
      type: array
      items:
        $ref: '#/components/schemas/Container'
    Container:
      type: object
      properties: null
    Mailingdocument:
      type: object
      properties:
        path:
          type: string
        mailingdocumentid:
          type: integer
        mailingid:
          $ref: '#/components/schemas/Mailing'
    Group:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/Account'
        groupid:
          type: integer
        timestamp:
          type: string
        group:
          type: string
    List<EmailAttachmentDTO>:
      type: array
      items:
        $ref: '#/components/schemas/EmailAttachmentDTO'
    PersistenceController:
      type: object
      properties: null
    List<Imputation>:
      type: array
      items:
        $ref: '#/components/schemas/Imputation'
    Imputation:
      type: object
      properties: null
    Attribute:
      type: object
      properties: null
    Emailaddress:
      type: object
      properties: null
    List<Account>:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    Account:
      type: object
      properties: null
    Timestamp:
      type: string
    SearchMessagesRequest:
      type: object
      properties:
        fromDate:
          type: string
        accountid:
          type: integer
        recipientid:
          type: integer
        fromId:
          type: integer
        casefileid:
          type: integer
    List<ConsumptionAndHoursCostResponse>:
      type: array
      items:
        $ref: '#/components/schemas/ConsumptionAndHoursCostResponse'
    ConsumptionAndHoursCostResponse:
      type: object
      properties: null
    SettlementGeneratorRecord:
      type: object
      properties: null
    Depreciableassettype:
      type: object
      properties: null
    List<GaragevehicleCustomerDTO>:
      type: array
      items:
        $ref: '#/components/schemas/GaragevehicleCustomerDTO'
    ExecutionExtraFieldRequest:
      type: object
      properties: null
    List<TreeFolderResponse>:
      type: array
      items:
        $ref: '#/components/schemas/TreeFolderResponse'
    TreeFolderResponse:
      type: object
      properties: null
    List<DataperiodexecutionResult>:
      type: array
      items:
        $ref: '#/components/schemas/DataperiodexecutionResult'
    DataperiodexecutionResult:
      type: object
      properties: null
    CessionResume:
      type: object
      properties: null
    List<FertigationrecommendationgroupResume>:
      type: array
      items:
        $ref: '#/components/schemas/FertigationrecommendationgroupResume'
    FertigationrecommendationgroupResume:
      type: object
      properties: null
    WorkerProductionCostResponse:
      type: object
      properties: null
    Statement:
      type: object
      properties: null
    List<Compositiondetail>:
      type: array
      items:
        $ref: '#/components/schemas/Compositiondetail'
    Compositiondetail:
      type: object
      properties: null
    PendingDuedate:
      type: object
      properties: null
    UpdateNeedsRequest:
      type: object
      properties:
        allUpdatesSince:
          type: string
        classesToCheck:
          $ref: '#/components/schemas/List%3CClassToCheck%3E'
    List<PendingSaleOrderLoadedResume>:
      type: array
      items:
        $ref: '#/components/schemas/PendingSaleOrderLoadedResume'
    PendingSaleOrderLoadedResume:
      type: object
      properties: null
    EditPlannedproductionRequest:
      type: object
      properties:
        plannedproductionid:
          type: integer
        task:
          $ref: '#/components/schemas/Task'
        line:
          $ref: '#/components/schemas/Line'
        customer:
          $ref: '#/components/schemas/Subject'
    Dataperiodimputation:
      type: object
      properties: null
    WorkstationAssignmentResponse:
      type: object
      properties:
        workstationAssignments:
          $ref: '#/components/schemas/List%3CWorkstationAssignment%3E'
        freeWorkstation:
          $ref: '#/components/schemas/List%3CWorkstation%3E'
    List<MonitorableTarget>:
      type: array
      items:
        $ref: '#/components/schemas/MonitorableTarget'
    MonitorableTarget:
      type: object
      properties: null
    'Map<String,List<StockDetail>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CStockDetail%3E'
    List<StockDetail>:
      type: array
      items:
        $ref: '#/components/schemas/StockDetail'
    FLDResumeResponse:
      type: object
      properties:
        alerts:
          $ref: '#/components/schemas/List%3CFLDAlerts%3E'
        records:
          $ref: '#/components/schemas/List%3CFLDResumeRow%3E'
    List<BatchField>:
      type: array
      items:
        $ref: '#/components/schemas/BatchField'
    BatchField:
      type: object
      properties: null
    TotalPalletsRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    ProductionExecutionResumeResponse:
      type: object
      properties:
        executions:
          $ref: '#/components/schemas/List%3CExecution%3E'
        productions:
          $ref: '#/components/schemas/List%3CProduction%3E'
    CultivationListRequest:
      type: object
      properties:
        irrigationsectorid:
          $ref: '#/components/schemas/Irrigationsector'
        sectorid:
          $ref: '#/components/schemas/Sector'
        productid:
          $ref: '#/components/schemas/Product'
        until:
          type: string
        varietyproductid:
          $ref: '#/components/schemas/Varietyproduct'
        workspaceid:
          $ref: '#/components/schemas/Workspace'
        since:
          type: string
    Laboralausencedetail:
      type: object
      properties:
        date:
          type: string
        contributionbase:
          type: number
        contributiondays:
          type: integer
        description:
          type: string
        source:
          $ref: '#/components/schemas/Laboralausencesource'
        type:
          $ref: '#/components/schemas/Laboralausencedetailtype'
        laboralausencedetailid:
          type: integer
        contractcode:
          type: integer
        externalcode:
          type: string
        laboralausenceid:
          $ref: '#/components/schemas/Laboralausence'
        documentid:
          $ref: '#/components/schemas/Document'
        timestamp:
          type: string
        closecode:
          type: string
        laboralausencedetail:
          type: string
        relapse:
          type: boolean
        doctor:
          type: string
        estimatedduration:
          type: integer
        originaltimestamp:
          type: string
        atep:
          type: string
        cias:
          type: string
        nextmedicalcheck:
          type: string
        processduration:
          $ref: '#/components/schemas/Laboralprocessduration'
        nulled:
          type: boolean
        remarks:
          type: string
        status:
          $ref: '#/components/schemas/Laboralausencestatus'
    List<Dataperiodexecution>:
      type: array
      items:
        $ref: '#/components/schemas/Dataperiodexecution'
    DataperiodSimpleResume:
      type: object
      properties: null
    WorkstationAssignmentRequest:
      type: object
      properties:
        line:
          $ref: '#/components/schemas/Line'
        workers:
          $ref: '#/components/schemas/List%3CSubject%3E'
    DuplicateCultivationRequest:
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        until:
          type: string
        duplicateDetails:
          type: boolean
        sector:
          type: string
        cultivation:
          type: string
        since:
          type: string
    List<CustomerBalance>:
      type: array
      items:
        $ref: '#/components/schemas/CustomerBalance'
    TreasuryData:
      type: object
      properties: null
    List<Role>:
      type: array
      items:
        $ref: '#/components/schemas/Role'
    Role:
      type: object
      properties:
        serialVersionUID:
          type: string
        cansetupdevices:
          type: boolean
        role:
          type: string
        hascompanyaccess:
          type: boolean
        roleid:
          type: integer
        description:
          type: string
    ImputationdiscountDTO:
      type: object
      properties:
        imputationid:
          type: integer
        nonpayedhours:
          type: number
    CodereadedResponse:
      type: object
      properties:
        executionid:
          $ref: '#/components/schemas/Execution'
        message:
          type: string
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        phocusUser:
          $ref: '#/components/schemas/PhocusUser'
        message:
          type: string
        token:
          type: string
    Cultivation:
      type: object
      properties:
        sectorid:
          $ref: '#/components/schemas/Sector'
        plantingdatesince:
          type: string
        productid:
          $ref: '#/components/schemas/Product'
        seedlot:
          type: string
        campaignid:
          $ref: '#/components/schemas/Campaign'
        plantingdateuntil:
          type: string
        theoreticalperformance:
          type: number
        externalcode:
          type: string
        plantedpieces:
          type: integer
        productionid:
          $ref: '#/components/schemas/Production'
        estimatedsurface:
          type: number
        producerid:
          $ref: '#/components/schemas/Producer'
        theoreticalcycle:
          type: number
        sector:
          type: string
        flow:
          type: number
        varietyproductid:
          $ref: '#/components/schemas/Varietyproduct'
        area:
          type: number
        droppers:
          type: integer
        drillingdate:
          type: string
        cultivationtypeid:
          $ref: '#/components/schemas/Cultivationtype'
        cultivationid:
          type: integer
        cultivation:
          type: string
        collectedpieces:
          type: integer
        cultivationdensityid:
          $ref: '#/components/schemas/Cultivationdensity'
        harvestdate:
          type: string
        estimatedharvestdate:
          type: string
        until:
          type: string
        remarks:
          type: string
        workspaceid:
          $ref: '#/components/schemas/Workspace'
        since:
          type: string
    Movementunit:
      type: object
      properties: null
    PendingSettlementRequest:
      type: object
      properties:
        from:
          type: string
        customers:
          type: string
        to:
          type: string
    List<GarageDataperiodNoteImageDTO>:
      type: array
      items:
        $ref: '#/components/schemas/GarageDataperiodNoteImageDTO'
    GarageDataperiodNoteImageDTO:
      type: object
      properties:
        garagedataperiodnoteid:
          type: integer
        note:
          type: string
        base64:
          type: string
        garagedataperiodnoteimageid:
          type: integer
    List<Cultivation>:
      type: array
      items:
        $ref: '#/components/schemas/Cultivation'
    List<Appointment>:
      type: array
      items:
        $ref: '#/components/schemas/Appointment'
    Long:
      type: string
    WorknotesIncidenceReportRequest:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/Task'
        rawMaterialTypes:
          $ref: '#/components/schemas/List%3CInteger%3E'
        fromTime:
          type: string
        toTime:
          type: string
    List<Subject>:
      type: array
      items:
        $ref: '#/components/schemas/Subject'
    List<SalenoteResponse>:
      type: array
      items:
        $ref: '#/components/schemas/SalenoteResponse'
    SalenoteResponse:
      type: object
      properties: null
    CrudFormDefinition<Object>:
      type: object
    'Map<String,ObjectRender>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ObjectRender'
    ObjectRender:
      type: object
      properties: null
    ForecastPlanificationRequest:
      type: object
      properties:
        producttypeid:
          $ref: '#/components/schemas/Producttype'
        todate:
          type: string
        fromdate:
          type: string
    List<LeadDTO>:
      type: array
      items:
        $ref: '#/components/schemas/LeadDTO'
    LeadDTO:
      type: object
      properties: null
    Warehouse:
      type: object
      properties: null
    CultivationListDTO:
      type: object
      properties: null
    GenerateSaleInvoicesRequest:
      type: object
      properties:
        date:
          type: string
        reference:
          type: string
        notes:
          $ref: '#/components/schemas/List%3CSalenote%3E'
        serie:
          type: string
        orders:
          $ref: '#/components/schemas/List%3CBrokerorder%3E'
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        group:
          type: boolean
    Laboralcontractor:
      type: object
      properties: null
    AttributeValuesSubjectDTO:
      type: object
      properties:
        attributeId:
          type: integer
        values:
          $ref: '#/components/schemas/List%3CString%3E'
        subjectId:
          type: integer
    Attributesaleorderdetail:
      type: object
      properties: null
    List<NonTotalCostcenterAssignedEntry>:
      type: array
      items:
        $ref: '#/components/schemas/NonTotalCostcenterAssignedEntry'
    NonTotalCostcenterAssignedEntry:
      type: object
      properties: null
    List<Note>:
      type: array
      items:
        $ref: '#/components/schemas/Note'
    Note:
      type: object
      properties:
        date:
          type: string
        noteid:
          type: integer
        documentid:
          $ref: '#/components/schemas/Document'
        privacylevel:
          type: integer
        casefileid:
          $ref: '#/components/schemas/Casefile'
        remarks:
          type: string
    UploadCustomerDocumentRequest:
      type: object
      properties:
        copies:
          type: integer
        bytes:
          $ref: '#/components/schemas/byte[]'
        printer:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
        subjectaddress:
          $ref: '#/components/schemas/Subjectaddress'
    List<PhotoSubject>:
      type: array
      items:
        $ref: '#/components/schemas/PhotoSubject'
    PhotoSubject:
      type: object
      properties:
        idcardnumber:
          type: string
        photo:
          type: string
        subjectid:
          type: integer
    List<IncomeStatementInformation>:
      type: array
      items:
        $ref: '#/components/schemas/IncomeStatementInformation'
    IncomeStatementInformation:
      type: object
      properties:
        income:
          type: string
        confirmedheritage:
          type: boolean
        year:
          type: integer
        mainSubjectPhone:
          type: string
        partnerSubjectCode:
          type: integer
        partnerSubjectId:
          type: string
        mainSubjectEmail:
          type: string
        incomestatementid:
          type: integer
        partnerSubjectIdExpiration:
          type: string
        incomestatementbankaccountList:
          $ref: '#/components/schemas/List%3CIncomestatementbankaccount%3E'
        presentedstatement:
          type: boolean
        realizedheritage:
          type: boolean
        retired:
          type: boolean
        estatesPendingChanges:
          type: boolean
        partnerSubjectPhone:
          type: string
        cost:
          type: number
        mainSubjectName:
          type: string
        partnerSubjectEmail:
          type: string
        heritage:
          type: string
        partner505Amount:
          type: number
        estatesBankAccountConfirmed:
          type: boolean
        realizedstatement:
          type: boolean
        confirmedstatement:
          type: boolean
        partnerSubjectName:
          type: string
        incomestatementestateList:
          $ref: '#/components/schemas/List%3CIncomestatementestate%3E'
        presentedheritage:
          type: boolean
        mainSubjectCode:
          type: integer
        partnerSubjectReference:
          type: string
        mainSubjectReference:
          type: string
        sageStatementId:
          type: string
        realizeddate:
          type: string
        mainSubjectSageCode:
          type: integer
        main505Amount:
          type: number
        mainSubjectIdExpiration:
          type: string
        remarks:
          type: string
        mainSubjectId:
          type: string
    Stocklocation:
      type: object
      properties: null
    GenerateProductionRequest:
      type: object
      properties:
        assignables:
          $ref: '#/components/schemas/List%3CAssignable%3E'
        serialshippingcontainerdetails:
          $ref: '#/components/schemas/List%3CSerialshippingcontainerdetail%3E'
    CompleteBalanceResponse:
      type: object
      properties:
        pastBalance:
          type: number
        movements:
          $ref: '#/components/schemas/List%3CMovement%3E'
        since:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
    RemoteInstancePersister:
      type: object
      properties:
        instances:
          $ref: '#/components/schemas/Map%3CString,Map%3CInteger,Object%3E%3E'
        pci:
          $ref: '#/components/schemas/PersistenceController'
        keysMap:
          $ref: '#/components/schemas/RemoteInstancePersisterResponse'
        ici:
          $ref: '#/components/schemas/IntrospectionController'
        transaction:
          type: integer
    InputStream:
      type: object
      properties: null
    'Map<Integer,Appointment>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Appointment'
    Garagesalenote:
      type: object
      properties:
        createdat:
          type: string
        garagevehicleid:
          $ref: '#/components/schemas/Garagevehicle'
        signature:
          type: string
        collectdocumentation:
          type: boolean
    Provider:
      type: object
      properties: null
    Workstation:
      type: object
      properties: null
    WorkedDayActions:
      type: object
      properties: null
    PendingSerialShippingContainerRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    DocumentTotalizer:
      type: object
      properties:
        resume:
          $ref: '#/components/schemas/DocumentDetailTotalizer'
        detailTotalizerList:
          $ref: '#/components/schemas/List%3CDocumentDetailTotalizer%3E'
    Menuitem:
      type: object
      properties: null
    List<Dataperiodcustomer>:
      type: array
      items:
        $ref: '#/components/schemas/Dataperiodcustomer'
    Dataperiodcustomer:
      type: object
      properties: null
    GenerateReportRequest:
      type: object
      properties:
        laboralreportdocumentIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        email:
          type: string
    OrderResult:
      type: object
      properties: null
    short:
      type: string
    Subjectadditionalfieldvalue:
      type: object
      properties: null
    PendingDuedateRequest:
      type: object
      properties:
        fromDate:
          type: string
        paymentDueDate:
          type: boolean
        subjectIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        charge:
          type: boolean
        toDueDate:
          type: string
        paymentmethodIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        fromDueDate:
          type: string
        contractorId:
          type: integer
        toDate:
          type: string
        payment:
          type: boolean
        chargeDueDate:
          type: boolean
    List<ComposedAccount>:
      type: array
      items:
        $ref: '#/components/schemas/ComposedAccount'
    ComposedAccount:
      type: object
      properties: null
    ArrayList<SalePurchaseDetailDTO>:
      type: array
      items:
        $ref: '#/components/schemas/SalePurchaseDetailDTO'
    SalePurchaseDetailDTO:
      type: object
      properties: null
    Cultivationtype:
      type: object
      properties: null
    List<SettlementSeizureResume>:
      type: array
      items:
        $ref: '#/components/schemas/SettlementSeizureResume'
    SaleResponse:
      type: object
      properties:
        purchaseorders:
          $ref: '#/components/schemas/Collection%3CPurchaseorder%3E'
        orderrelationships:
          $ref: '#/components/schemas/Collection%3COrderRelationship%3E'
        salenotes:
          $ref: '#/components/schemas/Collection%3CSalenote%3E'
        detailclassname:
          type: string
        purchasenotes:
          $ref: '#/components/schemas/Collection%3CPurchasenote%3E'
        details:
          $ref: '#/components/schemas/Collection%3CSaledetailResume%3E'
        attributes:
          $ref: '#/components/schemas/Collection%3CAttributesaleorderdetail%3E'
        purchaseinvoices:
          $ref: '#/components/schemas/Collection%3CPurchaseinvoice%3E'
    AuditableRequest:
      type: object
      properties:
        fromDate:
          type: string
        onlyPending:
          type: boolean
        toDate:
          type: string
    ITRequest:
      type: object
      properties:
        contractor:
          type: string
        toSince:
          type: string
        covid:
          type: boolean
        fromProcessDate:
          type: string
        relapse:
          type: integer
        warnings:
          type: integer
        assistancetype:
          $ref: '#/components/schemas/Laboralassistancetype'
        specialitsituaitiontype:
          $ref: '#/components/schemas/Laboralspecialitsituaitiontype'
        delta:
          type: integer
        fromUntil:
          type: string
        source:
          $ref: '#/components/schemas/Laboralausencesource'
        type:
          $ref: '#/components/schemas/Laboralcontingencetype'
        toTimestamp:
          type: string
        fromSince:
          type: string
        fromTimestamp:
          type: string
        laboralausenceid:
          type: integer
        toProcessDate:
          type: string
        contingencetype:
          $ref: '#/components/schemas/Laboralcontingencetype'
        worker:
          type: string
        processduration:
          $ref: '#/components/schemas/Laboralprocessduration'
        toUntil:
          type: string
        status:
          type: integer
    List<Bankaccount>:
      type: array
      items:
        $ref: '#/components/schemas/Bankaccount'
    Bankaccount:
      type: object
      properties: null
    SaleInvoiceExtra:
      type: object
      properties: null
    List<SaleData>:
      type: array
      items:
        $ref: '#/components/schemas/SaleData'
    SaleData:
      type: object
      properties: null
    Set<TaskResumeCasefile>:
      type: array
      items:
        $ref: '#/components/schemas/TaskResumeCasefile'
    TaskResumeCasefile:
      type: object
      properties: null
    List<PurchaseNoteFromPurchasesRequest>:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseNoteFromPurchasesRequest'
    PurchaseNoteFromPurchasesRequest:
      type: object
      properties: null
    ImageComparisonRequest:
      type: object
      properties:
        firstImage:
          type: string
        secondImage:
          type: string
    MonitorableResumeRequest:
      type: object
      properties:
        date:
          type: string
        minutes:
          type: integer
        monitorables:
          $ref: '#/components/schemas/List%3CMonitorable%3E'
    List<Inventorydetail>:
      type: array
      items:
        $ref: '#/components/schemas/Inventorydetail'
    Inventorydetail:
      type: object
      properties: null
    List<Model115>:
      type: array
      items:
        $ref: '#/components/schemas/Model115'
    Model115:
      type: object
      properties: null
    List<SerialshippingcontainerResume>:
      type: array
      items:
        $ref: '#/components/schemas/SerialshippingcontainerResume'
    SplitPalletRequest:
      type: object
      properties:
        newSerialshippingcontainerList:
          $ref: '#/components/schemas/List%3CSerialshippingcontainer%3E'
        oldSerialshippingcontainer:
          $ref: '#/components/schemas/Serialshippingcontainer'
    PaymentSettlementSeizureRequest:
      type: object
      properties:
        settlementSeizureIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        bankaccount:
          $ref: '#/components/schemas/Bankaccount'
    CertificateInfo:
      type: object
      properties:
        needActivate:
          type: boolean
        organizationName:
          type: string
        subject:
          type: string
        givenName:
          type: string
        sdfDateFormat:
          $ref: '#/components/schemas/SimpleDateFormat'
        mailboxes:
          $ref: '#/components/schemas/ArrayList%3CString%3E'
        DN:
          $ref: '#/components/schemas/Principal'
        expirationdate:
          type: string
        error:
          type: string
        certificatePath:
          type: string
        mailboxesComunications:
          $ref: '#/components/schemas/ArrayList%3CString%3E'
        password:
          type: string
        organizationIdentifier:
          type: string
        surname:
          type: string
        name:
          type: string
        emitteddate:
          type: string
    Boolean:
      type: boolean
    ArrayList<Convenio>:
      type: array
      items:
        $ref: '#/components/schemas/Convenio'
    Convenio:
      type: object
      properties: null
    DocumentDetailTotalizer:
      type: object
      properties: null
    Purchaseinvoicedetail:
      type: object
      properties: null
    List<PathSegment>:
      type: array
      items:
        $ref: '#/components/schemas/PathSegment'
    PathSegment:
      type: object
      properties: null
    List<AttributeValuesSubjectDTO>:
      type: array
      items:
        $ref: '#/components/schemas/AttributeValuesSubjectDTO'
    Dataperiodplan:
      type: object
      properties:
        externalcode:
          type: string
        dataperiodplanid:
          type: integer
        assetid:
          $ref: '#/components/schemas/Asset'
        created:
          type: string
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
    ReportVatResumeRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    'Map<String, Double>':
      type: object
      additionalProperties:
        type: number
    Double:
      type: number
    SaleinvoicedetailWithTotal:
      type: object
      properties: null
    TemplateRequest:
      type: object
      properties:
        laboralcontractor:
          $ref: '#/components/schemas/Laboralcontractor'
        month:
          type: integer
        year:
          type: integer
    SettlementResume:
      type: object
      properties: null
    double:
      type: number
    VatResumeBillingDTO:
      type: object
      properties: null
    PendingPlannedproductionResponse:
      type: object
      properties: null
    TreatmentResumeRequest:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        workspace:
          $ref: '#/components/schemas/Workspace'
        weeks:
          $ref: '#/components/schemas/List%3CInteger%3E'
        irrigationsector:
          $ref: '#/components/schemas/Irrigationsector'
        year:
          type: integer
        varietyproduct:
          $ref: '#/components/schemas/Varietyproduct'
        executed:
          type: boolean
    ExpenseResume:
      type: object
      properties:
        purchases:
          $ref: '#/components/schemas/Collection%3CCommercialDetail%3E'
        sales:
          $ref: '#/components/schemas/Collection%3CCommercialDetail%3E'
        expenses:
          $ref: '#/components/schemas/Collection%3CCommercialDetail%3E'
    List<StockData>:
      type: array
      items:
        $ref: '#/components/schemas/StockData'
    StockData:
      type: object
      properties: null
    SubjectChargeActuationCall:
      type: object
      properties:
        phoneNumber:
          type: string
        balance:
          type: number
        contractorId:
          type: integer
        subjectId:
          type: integer
        remarks:
          type: string
    List<PaymentWorkerResume>:
      type: array
      items:
        $ref: '#/components/schemas/PaymentWorkerResume'
    PaymentWorkerResume:
      type: object
      properties: null
    NewContainerRequestExtraField:
      type: object
      properties:
        extraFieldRequest:
          $ref: '#/components/schemas/ExecutionExtraFieldRequest'
    RemoteInstancePersisterResponse:
      type: object
      properties: null
    List<DocumentDetailTotalizer>:
      type: array
      items:
        $ref: '#/components/schemas/DocumentDetailTotalizer'
    List<NonFinishedEntry>:
      type: array
      items:
        $ref: '#/components/schemas/NonFinishedEntry'
    List<CostCenterNode>:
      type: array
      items:
        $ref: '#/components/schemas/CostCenterNode'
    CostCenterNode:
      type: object
      properties: null
    CurrentPresenceWorkstationFree:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/List%3CTask%3E'
        workstation:
          $ref: '#/components/schemas/List%3CWorkstation%3E'
        unfinishedTimeticks:
          $ref: '#/components/schemas/List%3CTimetick%3E'
        lines:
          $ref: '#/components/schemas/List%3CLine%3E'
        sections:
          $ref: '#/components/schemas/List%3CSection%3E'
    WorkedDayTime:
      type: object
      properties: null
    Stockmovement:
      type: object
      properties: null
    BarcodeReaderRequest:
      type: object
      properties:
        barcode:
          type: string
    List<Stockcontainer>:
      type: array
      items:
        $ref: '#/components/schemas/Stockcontainer'
    Lead:
      type: object
      properties:
        opportunityid:
          type: integer
    List<Purchaseinvoice>:
      type: array
      items:
        $ref: '#/components/schemas/Purchaseinvoice'
    ClassToCheck:
      type: object
      properties: null
    List<SettlementGeneratorRecord>:
      type: array
      items:
        $ref: '#/components/schemas/SettlementGeneratorRecord'
    List<EmailItem>:
      type: array
      items:
        $ref: '#/components/schemas/EmailItem'
    CommercialDetail:
      type: object
      properties: null
    ProductionResponse:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/List%3CProductionResume%3E'
        confections:
          $ref: '#/components/schemas/List%3CPlannedproduction%3E'
    TransportPurchaseInvoiceGenerationRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        salenotes:
          $ref: '#/components/schemas/List%3CSalenote%3E'
    AvailabilityRequest:
      type: object
      properties:
        date:
          type: string
        allCategories:
          type: boolean
        checkWorkerAssigned:
          type: boolean
        tasks:
          $ref: '#/components/schemas/List%3CTask%3E'
    LinkedList<Menuitem>:
      type: array
      items:
        $ref: '#/components/schemas/Menuitem'
    SaledetailResume:
      type: object
      properties: null
    Serialshippingcontainer:
      type: object
      properties: null
    List<ExecutionExtraField>:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionExtraField'
    ExecutionExtraField:
      type: object
      properties: null
    SerialShippingSearchRequest:
      type: object
      properties:
        fromDate:
          type: string
        product:
          type: string
        sscc:
          type: string
        toDate:
          type: string
        batch:
          type: string
        customer:
          type: string
        order:
          type: string
    List<SeizureResume>:
      type: array
      items:
        $ref: '#/components/schemas/SeizureResume'
    SeizureResume:
      type: object
      properties: null
    GrossPeriodRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    Principal:
      type: object
      properties: null
    Collection<ProductionassetDetail>:
      type: array
      items:
        $ref: '#/components/schemas/ProductionassetDetail'
    ProductionassetDetail:
      type: object
      properties: null
    List<LoanResume>:
      type: array
      items:
        $ref: '#/components/schemas/LoanResume'
    List<Polygon>:
      type: array
      items:
        $ref: '#/components/schemas/Polygon'
    Polygon:
      type: object
      properties: null
    Treatmentcultivationdetail:
      type: object
      properties: null
    ProductionCultivationsLinkedRequest:
      type: object
      properties:
        production:
          type: integer
        cultivations:
          $ref: '#/components/schemas/List%3CInteger%3E'
    NonFinishedEntriesRequest:
      type: object
      properties:
        contractorIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
    TimetickFixerRequest:
      type: object
      properties:
        fromDate:
          type: string
        endLunch:
          type: string
        ticks:
          $ref: '#/components/schemas/List%3CInteger%3E'
        toDate:
          type: string
        subjects:
          $ref: '#/components/schemas/List%3CSubject%3E'
        startLunch:
          type: string
    PendingPurchaseOrderDetailsRequest:
      type: object
      properties:
        fromDate:
          type: string
        product:
          type: string
        provider:
          type: string
        toDate:
          type: string
        producttype:
          type: string
    List<MailAttachment>:
      type: array
      items:
        $ref: '#/components/schemas/MailAttachment'
    MailAttachment:
      type: object
      properties: null
    List<OpportunityDTO>:
      type: array
      items:
        $ref: '#/components/schemas/OpportunityDTO'
    OpportunityDTO:
      type: object
      properties: null
    Production:
      type: object
      properties:
        date:
          type: string
        tasklevelid:
          $ref: '#/components/schemas/Tasklevel'
        week:
          type: string
        productid:
          $ref: '#/components/schemas/Product'
        lineid:
          $ref: '#/components/schemas/Line'
        cycle:
          type: string
        additionalcost:
          type: number
        serialVersionUID:
          type: string
        imputationid:
          $ref: '#/components/schemas/Imputation'
        externalcode:
          type: string
        movementunitid:
          $ref: '#/components/schemas/Movementunit'
        warehouseid:
          $ref: '#/components/schemas/Warehouse'
        productionid:
          type: integer
        defective:
          type: number
        materialcost:
          type: number
        executioncost:
          type: number
        distribute:
          type: boolean
        sector:
          type: string
        taskid:
          $ref: '#/components/schemas/Task'
        varietyproductid:
          $ref: '#/components/schemas/Varietyproduct'
        unitsbycontainer:
          type: number
        hours:
          type: number
        amount:
          type: number
        associatedincome:
          type: number
        quantity:
          type: string
        weight:
          type: number
        hourlycost:
          type: number
        batchid:
          $ref: '#/components/schemas/Batch'
        linecapacity:
          type: number
        subjectid:
          $ref: '#/components/schemas/Subject'
        analyticscost:
          type: number
        providerid:
          $ref: '#/components/schemas/Provider'
        containerunits:
          type: number
        remarks:
          type: string
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    UserSession:
      type: object
      properties: null
    Treatmentuse:
      type: object
      properties: null
    List<Model111>:
      type: array
      items:
        $ref: '#/components/schemas/Model111'
    Model111:
      type: object
      properties: null
    ExtraFieldsRequest:
      type: object
      properties:
        executionid:
          type: integer
        productid:
          $ref: '#/components/schemas/Product'
        taskid:
          $ref: '#/components/schemas/Task'
    Consumption:
      type: object
      properties:
        date:
          type: string
        quantity:
          type: string
        cost:
          type: string
        plannedproductionid:
          $ref: '#/components/schemas/Plannedproduction'
        week:
          type: string
        productid:
          $ref: '#/components/schemas/Product'
        weight:
          type: number
        batchid:
          $ref: '#/components/schemas/Batch'
        cycle:
          type: string
        executionid:
          $ref: '#/components/schemas/Execution'
        serialVersionUID:
          type: string
        consumptionid:
          type: integer
        warehouseid:
          $ref: '#/components/schemas/Warehouse'
        movementunitid:
          $ref: '#/components/schemas/Movementunit'
        stocklocationid:
          $ref: '#/components/schemas/Stocklocation'
        productionid:
          $ref: '#/components/schemas/Production'
        defective:
          type: number
        containerunits:
          type: string
        sector:
          type: string
        stockmovementid:
          $ref: '#/components/schemas/Stockmovement'
        workspaceid:
          $ref: '#/components/schemas/Workspace'
        varietyproductid:
          $ref: '#/components/schemas/Varietyproduct'
    PendingAssignationRequest:
      type: object
      properties: null
    FromTimetickByCustomerRequest:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
        dateTo:
          type: string
        dateFrom:
          type: string
        worker:
          $ref: '#/components/schemas/Worker'
        customer:
          $ref: '#/components/schemas/Customer'
    Priority:
      type: object
      properties: null
    ChangeContractsRequest:
      type: object
      properties:
        laboralcontractsinfo:
          $ref: '#/components/schemas/ArrayList%3CChangeContractInfo%3E'
    GetSSNumberInfo:
      type: object
      properties:
        idcardnumber:
          type: string
        surname1:
          type: string
        surname2:
          type: string
    List<Additionalfield>:
      type: array
      items:
        $ref: '#/components/schemas/Additionalfield'
    Additionalfield:
      type: object
      properties: null
    CurrentPresenceResume:
      type: object
      properties:
        workerPresenceInformationList:
          $ref: '#/components/schemas/List%3CWorkerPresenceInformation%3E'
    List<WorkstationAssignment>:
      type: array
      items:
        $ref: '#/components/schemas/WorkstationAssignment'
    WorkstationAssignment:
      type: object
      properties: null
    PurchasedetailResume:
      type: object
      properties: null
    List<DataperiodResume>:
      type: array
      items:
        $ref: '#/components/schemas/DataperiodResume'
    Modeldeclaration:
      type: object
      properties:
        date:
          type: string
        period:
          type: string
        deleted:
          type: string
        year:
          type: integer
        modelid:
          $ref: '#/components/schemas/Model'
        revised:
          type: string
        modeldeclarationid:
          type: integer
        sent:
          type: string
        payusing:
          type: string
        documentpath:
          type: string
        advisercustomerid:
          $ref: '#/components/schemas/Advisercustomer'
    List<Documentfield>:
      type: array
      items:
        $ref: '#/components/schemas/Documentfield'
    Documentfield:
      type: object
      properties: null
    List<WorkedDayTimetick>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedDayTimetick'
    Producer:
      type: object
      properties: null
    List<Treatmentcultivationdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Treatmentcultivationdetail'
    List<CultivationListDTO>:
      type: array
      items:
        $ref: '#/components/schemas/CultivationListDTO'
    List<Accountingentry>:
      type: array
      items:
        $ref: '#/components/schemas/Accountingentry'
    Laboralspecialitsituaitiontype:
      type: object
      properties: null
    Irrigationsector:
      type: object
      properties: null
    ReportWorkersDuplicatedRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    List<CultivationTreatments>:
      type: array
      items:
        $ref: '#/components/schemas/CultivationTreatments'
    PhotoFromSubjectResponse:
      type: object
      properties:
        photossubjects:
          $ref: '#/components/schemas/List%3CPhotoSubject%3E'
    'Map<Long, List<Dialog>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CDialog%3E'
    List<Dialog>:
      type: array
      items:
        $ref: '#/components/schemas/Dialog'
    AssignationIncidences:
      type: object
      properties:
        nonProducedSales:
          $ref: '#/components/schemas/List%3CNonProducedSale%3E'
        unSoldProductions:
          $ref: '#/components/schemas/List%3CPlannedproduction%3E'
    List<FileResponse>:
      type: array
      items:
        $ref: '#/components/schemas/FileResponse'
    FileResponse:
      type: object
      properties:
        hidden:
          type: boolean
        tagIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        name:
          type: string
        childrenIds:
          $ref: '#/components/schemas/List%3CString%3E'
        id:
          type: string
        modification:
          type: string
        directory:
          type: boolean
        parentId:
          type: string
    Actiontype:
      type: object
      properties: null
    GarageVehicleHistoryDTO:
      type: object
      properties:
        garagevehicle:
          type: string
        platenumber:
          type: string
        garagevehicleid:
          type: integer
        framenumber:
          type: string
        sales:
          $ref: '#/components/schemas/ArrayList%3CGarageVehicleSaleDetailDTO%3E'
    List<Menuitem>:
      type: array
      items:
        $ref: '#/components/schemas/Menuitem'
    NewModelRequest:
      type: object
      properties:
        regions:
          $ref: '#/components/schemas/List%3CProvidermodeldetail%3E'
        providerid:
          $ref: '#/components/schemas/Provider'
    ReadproductioncardRequest:
      type: object
      properties:
        code:
          type: string
    FormsamplingFull:
      type: object
      properties:
        formsampling:
          $ref: '#/components/schemas/Formsampling'
        formtemplatequestionListMap:
          $ref: '#/components/schemas/Map%3CInteger,Collection%3CFormquestionformula%3E%3E'
    'Map<String,List<ObjectRender>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CObjectRender%3E'
    List<ObjectRender>:
      type: array
      items:
        $ref: '#/components/schemas/ObjectRender'
    Satisfactiondegree:
      type: object
      properties: null
    GetSubjectsResponse:
      type: object
      properties:
        excludedSubjects:
          $ref: '#/components/schemas/List%3CSubject%3E'
        nonClassifiedSubjects:
          $ref: '#/components/schemas/List%3CSubject%3E'
        includedSubjects:
          $ref: '#/components/schemas/List%3CSubject%3E'
        additionalfields:
          $ref: '#/components/schemas/Map%3CInteger,List%3CSubjectadditionalfieldvalue%3E%3E'
    Caliber:
      type: object
      properties: null
    PaymentSettlementRequest:
      type: object
      properties:
        bankaccount:
          $ref: '#/components/schemas/Bankaccount'
        settlementIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        type:
          type: integer
    List<SearchLaboralworker>:
      type: array
      items:
        $ref: '#/components/schemas/SearchLaboralworker'
    SearchLaboralworker:
      type: object
      properties: null
    List<AvailabilityByCategory>:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityByCategory'
    AvailabilityByCategory:
      type: object
      properties: null
    Subjectaddress:
      type: object
      properties: null
    Presencecardcode:
      type: object
      properties: null
    FromFileTimetickGenerationRequest:
      type: object
      properties:
        file:
          type: string
        regenerate:
          type: boolean
        month:
          type: integer
        year:
          type: integer
        suppressExistent:
          type: boolean
        shifts:
          $ref: '#/components/schemas/List%3CShift%3E'
        terminal:
          $ref: '#/components/schemas/Terminal'
    SaveSaleorderdetailcontainerRequest:
      type: object
      properties:
        saleorderdetailcontainer:
          $ref: '#/components/schemas/List%3CSaleorderdetailcontainer%3E'
    Terminal:
      type: object
      properties: null
    Date:
      type: string
    Collection<SaledetailResume>:
      type: array
      items:
        $ref: '#/components/schemas/SaledetailResume'
    List<Transportagency>:
      type: array
      items:
        $ref: '#/components/schemas/Transportagency'
    DataperiodCultivation:
      type: object
      properties:
        dataperiodcultivationid:
          type: integer
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
        cultivationid:
          $ref: '#/components/schemas/Cultivation'
    Attributesubject:
      type: object
      properties: null
    SimpleDateFormat:
      type: object
      properties: null
    List<Providermodeldetail>:
      type: array
      items:
        $ref: '#/components/schemas/Providermodeldetail'
    Providermodeldetail:
      type: object
      properties: null
    Monitorable:
      type: object
      properties: null
    List<CasefileEvent>:
      type: array
      items:
        $ref: '#/components/schemas/CasefileEvent'
    CasefileEvent:
      type: object
      properties: null
    List<Serialshippingcontainer>:
      type: array
      items:
        $ref: '#/components/schemas/Serialshippingcontainer'
    FixExcelRequest:
      type: object
      properties:
        file:
          type: string
        definition:
          $ref: '#/components/schemas/CrudFormDefinition'
    SerialshippingByTerminalResponse:
      type: object
      properties: null
    List<DocumentEntity>:
      type: array
      items:
        $ref: '#/components/schemas/DocumentEntity'
    DocumentEntity:
      type: object
      properties: null
    List<Attribute>:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
    NewStockMovementRequest:
      type: object
      properties:
        date:
          type: string
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: number
        origin:
          $ref: '#/components/schemas/Warehouse'
        destination:
          $ref: '#/components/schemas/Warehouse'
        batch:
          $ref: '#/components/schemas/Batch'
        destinationLocation:
          $ref: '#/components/schemas/Stocklocation'
        containerCode:
          type: string
        user:
          type: string
        originLocation:
          $ref: '#/components/schemas/Stocklocation'
        stockcontainerList:
          $ref: '#/components/schemas/List%3CStockcontainer%3E'
    DailyTimetickGenerationRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
    PendingSaleInvoicesRequest:
      type: object
      properties:
        fromDate:
          type: string
        contractorid:
          $ref: '#/components/schemas/Contractor'
        toDate:
          type: string
        onlyChecked:
          type: boolean
        represented:
          $ref: '#/components/schemas/Customer'
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        showall:
          type: boolean
        onlyNotChecked:
          type: boolean
        casefileid:
          $ref: '#/components/schemas/Casefile'
        customer:
          $ref: '#/components/schemas/Customer'
    Garagevehicle:
      type: object
      properties: null
    ContainerAssociation:
      type: object
      properties: null
    SaleNoteFromSalesRequest:
      type: object
      properties: null
    List<Saleorder>:
      type: array
      items:
        $ref: '#/components/schemas/Saleorder'
    AutoAssociationProductionExecutionRequest:
      type: object
      properties:
        executions:
          $ref: '#/components/schemas/List%3CExecution%3E'
        productions:
          $ref: '#/components/schemas/List%3CProduction%3E'
    PurchaseinvoiceResumeResponse:
      type: object
      properties: null
    List<Opportunity>:
      type: array
      items:
        $ref: '#/components/schemas/Opportunity'
    List<Chargeduedate>:
      type: array
      items:
        $ref: '#/components/schemas/Chargeduedate'
    Chargeduedate:
      type: object
      properties: null
    ComunicateSaleInvoicesSIIPendingRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        saleinvoiceList:
          $ref: '#/components/schemas/List%3CSaleinvoice%3E'
        modified:
          type: boolean
    BatchRequest:
      type: object
      properties:
        date:
          type: string
        producttypeid:
          type: integer
        plannedproductionId:
          type: integer
        productid:
          $ref: '#/components/schemas/Product'
        fields:
          $ref: '#/components/schemas/List%3CBatchField%3E'
    List<ComparisonOperator>:
      type: array
      items:
        $ref: '#/components/schemas/ComparisonOperator'
    ComparisonOperator:
      type: object
      properties: null
    List<Fertigationcultivationdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Fertigationcultivationdetail'
    DocumentToSignDTO:
      type: object
      properties:
        date:
          type: string
        hours:
          type: number
        notes:
          $ref: '#/components/schemas/List%3CDocumentNoteDTO%3E'
        signature:
          type: string
        initDate:
          type: string
        minutes:
          type: number
        description:
          type: string
        plateNumber:
          type: string
        pauseDate:
          type: string
        number:
          type: integer
        responsible:
          $ref: '#/components/schemas/SubjectDTO'
        serie:
          type: string
        dataperiodid:
          type: integer
        documentid:
          type: integer
        customer:
          type: string
        status:
          $ref: '#/components/schemas/GaragedataperiodStatus'
    'Map<Object,Timestamp>':
      type: object
      additionalProperties:
        type: string
    List<Cultivationgeopoint>:
      type: array
      items:
        $ref: '#/components/schemas/Cultivationgeopoint'
    Cultivationgeopoint:
      type: object
      properties: null
    Activeworkerreport:
      type: object
      properties:
        activeworkerreportid:
          type: integer
        date:
          type: string
        laboralcontractorid:
          $ref: '#/components/schemas/Laboralcontractor'
    BarcodeDataperiodRequest:
      type: object
      properties:
        paletnumber:
          type: string
        dataperiodid:
          type: integer
        operationtype:
          type: string
        barcode:
          type: string
    List<SectorWithCultivationDTO>:
      type: array
      items:
        $ref: '#/components/schemas/SectorWithCultivationDTO'
    Accountingentrydetail:
      type: object
      properties:
        accountid:
          $ref: '#/components/schemas/Account'
        externalcode:
          type: string
        detailorder:
          type: integer
        accountingentrydetailid:
          type: integer
        concept:
          type: string
        counterpart:
          $ref: '#/components/schemas/Account'
        debit:
          type: number
        credit:
          type: number
        accountingentryid:
          $ref: '#/components/schemas/Accountingentry'
        confirmed:
          type: boolean
    'Map<Integer,Double[]>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Double[]'
    'Double[]':
      type: array
      items:
        type: number
    ArrayList<Plannedproduction>:
      type: array
      items:
        $ref: '#/components/schemas/Plannedproduction'
    AttributeValueRequest:
      type: object
      properties:
        attributeid:
          type: integer
        request:
          $ref: '#/components/schemas/AttributeValueRequest'
        className:
          type: string
        entityid:
          type: integer
    Productioncard:
      type: object
      properties: null
    List<ProductNeed>:
      type: array
      items:
        $ref: '#/components/schemas/ProductNeed'
    Temporaryworkagency:
      type: object
      properties: null
    LastSessionResponse:
      type: object
      properties:
        lastSessions:
          $ref: '#/components/schemas/Map%3CInteger,Appointment%3E'
        nextSessions:
          $ref: '#/components/schemas/Map%3CInteger,Appointment%3E'
        customers:
          $ref: '#/components/schemas/List%3CCustomer%3E'
    Collection<CommercialDetail>:
      type: array
      items:
        $ref: '#/components/schemas/CommercialDetail'
    RetrieveEnterprisesResponse:
      type: object
      properties: null
    RiskResume:
      type: object
      properties:
        pendingnotes:
          type: number
        pendingcharges:
          type: number
        pendingorders:
          type: number
    Laboralreportdocument:
      type: object
      properties:
        laboralcontractorid:
          $ref: '#/components/schemas/Laboralcontractor'
        laboralreportid:
          $ref: '#/components/schemas/Laboralreport'
        until:
          type: string
        laboralworkerid:
          $ref: '#/components/schemas/Laboralworker'
        documentid:
          $ref: '#/components/schemas/Document'
        laboralreportdocumentid:
          type: integer
        subjectid:
          $ref: '#/components/schemas/Subject'
        remarks:
          type: string
        since:
          type: string
        timestamp:
          type: string
    Entry:
      type: object
      properties:
        date:
          type: string
        entry:
          type: string
        loss:
          type: number
        externalcode:
          type: string
        totalweight:
          type: number
        entryid:
          type: integer
    List<Purchaseorder>:
      type: array
      items:
        $ref: '#/components/schemas/Purchaseorder'
    PurchaseinvoicedetailWithCostcenter:
      type: object
      properties:
        purchaseinvoicedetail:
          $ref: '#/components/schemas/Purchaseinvoicedetail'
        costcenter:
          $ref: '#/components/schemas/Costcenter'
    ProductDataDTO:
      type: object
      properties:
        product:
          type: string
        externalcode:
          type: string
        productid:
          type: integer
        price:
          type: number
        lastStocklocation:
          $ref: '#/components/schemas/Stocklocation'
        vatid:
          $ref: '#/components/schemas/Vat'
        lastDiscount:
          type: number
        stocklocationList:
          $ref: '#/components/schemas/List%3CStocklocation%3E'
    SaveCasefileAttachmentDTO:
      type: object
      properties:
        path:
          type: string
        emailAddress:
          type: string
        customerId:
          type: integer
        emailId:
          type: integer
        customerPath:
          type: string
        saveEmailBody:
          type: boolean
        casefileId:
          type: integer
    List<PurchaseOrderFromSalesRequest>:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseOrderFromSalesRequest'
    PurchaseOrderFromSalesRequest:
      type: object
      properties: null
    List<Warehouse>:
      type: array
      items:
        $ref: '#/components/schemas/Warehouse'
    Incomestatement:
      type: object
      properties: null
    Planned:
      type: object
      properties:
        date:
          type: string
        plannedid:
          type: integer
        prospectid:
          $ref: '#/components/schemas/Prospect'
        actiontypeid:
          $ref: '#/components/schemas/Actiontype'
        finish:
          type: boolean
        planned:
          type: string
    OperationError:
      type: object
      properties: null
    Productionadditionalfieldvalue:
      type: object
      properties: null
    'byte[]':
      type: array
      items:
        type: string
    PhotoSubjectResumeResponse:
      type: object
      properties: null
    List<Subjectvacation>:
      type: array
      items:
        $ref: '#/components/schemas/Subjectvacation'
    'Map<Integer,List<Attributebatchvalue>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CAttributebatchvalue%3E'
    List<Attributebatchvalue>:
      type: array
      items:
        $ref: '#/components/schemas/Attributebatchvalue'
    Attributebatchvalue:
      type: object
      properties: null
    FertigationDuplicationRequest:
      type: object
      properties:
        date:
          type: string
        fertigations:
          $ref: '#/components/schemas/List%3CFertigation%3E'
    NewPendingTaskRequest:
      type: object
      properties:
        duration:
          type: number
        executionid:
          type: integer
        eventid:
          type: integer
        plannedproductionid:
          type: integer
        executor:
          $ref: '#/components/schemas/Subject'
        delegatesubjectid:
          type: integer
        registeredat:
          type: string
        sector:
          type: string
        remarks:
          type: string
    List<UserSession>:
      type: array
      items:
        $ref: '#/components/schemas/UserSession'
    Batchtype:
      type: object
      properties: null
    List<Salenote>:
      type: array
      items:
        $ref: '#/components/schemas/Salenote'
    Salenote:
      type: object
      properties:
        date:
          type: string
        trailerplatenumber:
          type: string
        drivername:
          type: string
        contractorid:
          $ref: '#/components/schemas/Contractor'
        transportinstructions:
          type: string
        transportcost:
          type: number
        discount:
          type: number
        sendtoaddressid:
          $ref: '#/components/schemas/Subjectaddress'
        number:
          type: integer
        platenumber:
          type: string
        transportagencyid:
          $ref: '#/components/schemas/Transportagency'
        salenoteid:
          type: integer
        saleinvoiceid:
          $ref: '#/components/schemas/Saleinvoice'
        externalcode:
          type: string
        incoterm:
          type: string
        internalremarks:
          type: string
        serie:
          type: string
        customerid:
          $ref: '#/components/schemas/Subject'
        checked:
          type: boolean
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        creationuser:
          type: string
        casefileid:
          $ref: '#/components/schemas/Casefile'
        remarks:
          type: string
    Collection<PurchasedetailResume>:
      type: array
      items:
        $ref: '#/components/schemas/PurchasedetailResume'
    List<Statement>:
      type: array
      items:
        $ref: '#/components/schemas/Statement'
    List<PendingAssignationRequest>:
      type: array
      items:
        $ref: '#/components/schemas/PendingAssignationRequest'
    Attachment:
      type: object
      properties:
        path:
          type: string
        createdat:
          type: string
        originalfilename:
          type: string
    Execution:
      type: object
      properties:
        productioncardid:
          $ref: '#/components/schemas/Productioncard'
        plannedproductionid:
          $ref: '#/components/schemas/Plannedproduction'
        productid:
          $ref: '#/components/schemas/Product'
        executorid:
          $ref: '#/components/schemas/Subject'
        registeredat:
          type: string
        executioncontainerid:
          type: string
        duration:
          type: number
        executionid:
          type: integer
        externalcode:
          type: string
        machineid:
          $ref: '#/components/schemas/Machine'
        hour:
          type: string
        movementunitid:
          $ref: '#/components/schemas/Movementunit'
        productionid:
          $ref: '#/components/schemas/Production'
        defective:
          type: number
        unitsbycontainer:
          type: number
        quantity:
          type: number
        delegatesubject:
          $ref: '#/components/schemas/Subject'
        batchid:
          $ref: '#/components/schemas/Batch'
        containersweight:
          type: number
        produced:
          type: boolean
        producedstockid:
          $ref: '#/components/schemas/Stockmovement'
        partialduration:
          type: number
        stocklocationid:
          $ref: '#/components/schemas/Stocklocation'
        containerunits:
          type: number
        remarks:
          type: string
    List<GarageDataperiodHoursItem>:
      type: array
      items:
        $ref: '#/components/schemas/GarageDataperiodHoursItem'
    GarageDataperiodHoursItem:
      type: object
      properties: null
    List<Model349>:
      type: array
      items:
        $ref: '#/components/schemas/Model349'
    Model349:
      type: object
      properties: null
    ProductionCheckerRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
    Procedure:
      type: object
      properties: null
    List:
      type: object
      properties: null
    ProductionExecutionResumeRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        workspacetypeid:
          $ref: '#/components/schemas/Workspacetype'
        taskid:
          $ref: '#/components/schemas/Task'
        subjectid:
          $ref: '#/components/schemas/Subject'
    Serialshippingcontainerdetail:
      type: object
      properties: null
    List<Formmeasure>:
      type: array
      items:
        $ref: '#/components/schemas/Formmeasure'
    ResumedDataperiodRequest:
      type: object
      properties:
        fromTime:
          type: string
        toTime:
          type: string
    TimeticksFromTemplateSaveRequest:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/Timetick'
        timetickIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        subjectIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
    UpdateSettlementsRequest:
      type: object
      properties:
        settlementGroupList:
          $ref: '#/components/schemas/List%3CInteger%3E'
        settlementList:
          $ref: '#/components/schemas/List%3CInteger%3E'
    GetCallingTicksRequest:
      type: object
      properties:
        fromDate:
          type: string
        terminalRoles:
          $ref: '#/components/schemas/List%3CInteger%3E'
        toDate:
          type: string
    ProvisioningRequest:
      type: object
      properties:
        fromDate:
          type: string
        groupByShippingDate:
          type: boolean
        toDate:
          type: string
        includeOrders:
          type: boolean
        groupByCustomer:
          type: boolean
        productTypes:
          $ref: '#/components/schemas/List%3CProducttype%3E'
        responsibles:
          $ref: '#/components/schemas/List%3CSubject%3E'
        workspaces:
          $ref: '#/components/schemas/List%3CWorkspace%3E'
        groupByBatch:
          type: boolean
    List<SerialshippingcontainerExtra>:
      type: array
      items:
        $ref: '#/components/schemas/SerialshippingcontainerExtra'
    McnOlapRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
    List<BatchNode>:
      type: array
      items:
        $ref: '#/components/schemas/BatchNode'
    List<Saleorderdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Saleorderdetail'
    Saleorderdetail:
      type: object
      properties: null
    Model347:
      type: object
      properties: null
    'List<Map<String,List<ObjectRender>>>':
      type: array
      items:
        $ref: '#/components/schemas/Map%3CString,List%3CObjectRender%3E%3E'
    ReportIntrastatCsvRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    ETTWorkedDay:
      type: object
      properties:
        ettDataperiodWorkedDay:
          $ref: '#/components/schemas/List%3CETTDataperiodWorkedDay%3E'
    BankReconciliationRequest:
      type: object
      properties:
        fromDate:
          type: string
        bankaccountid:
          $ref: '#/components/schemas/Bankaccount'
        contractorid:
          $ref: '#/components/schemas/Contractor'
        toDate:
          type: string
        onlyChecked:
          type: boolean
        showall:
          type: boolean
        onlyNotChecked:
          type: boolean
    ResumedEntrydetail:
      type: object
      properties: null
    ArrayList<String>:
      type: array
      items:
        type: string
    AccountResumeRequest:
      type: object
      properties:
        contractorIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        from:
          type: string
        to:
          type: string
        levels:
          type: string
        account:
          type: string
    SaveMassiveImputationsRequest:
      type: object
      properties:
        imputations:
          $ref: '#/components/schemas/List%3CInteger%3E'
        template:
          $ref: '#/components/schemas/Imputation'
    Collection<Salenote>:
      type: array
      items:
        $ref: '#/components/schemas/Salenote'
    Language:
      type: object
      properties: null
    Batch:
      type: object
      properties:
        batchtypeid:
          $ref: '#/components/schemas/Batchtype'
        productid:
          $ref: '#/components/schemas/Product'
        unitcost:
          type: number
        created:
          type: string
        batchadditionalfieldvalueList:
          $ref: '#/components/schemas/List%3CBatchadditionalfieldvalue%3E'
        batch:
          type: string
        batchid:
          type: integer
    TimetickByCustomerRow:
      type: object
      properties: null
    List<Model347>:
      type: array
      items:
        $ref: '#/components/schemas/Model347'
    Attributesubjectvalue:
      type: object
      properties:
        attributesubjectvalueid:
          type: integer
        attributesubjectid:
          $ref: '#/components/schemas/Attributesubject'
        value:
          type: string
        subjectid:
          $ref: '#/components/schemas/Subject'
    List<Contract>:
      type: array
      items:
        $ref: '#/components/schemas/Contract'
    Contract:
      type: object
      properties: null
    List<ImputationsMonthResume>:
      type: array
      items:
        $ref: '#/components/schemas/ImputationsMonthResume'
    List<Lead>:
      type: array
      items:
        $ref: '#/components/schemas/Lead'
    Laboralausence:
      type: object
      properties: null
    List<TaskPerDayDTO>:
      type: array
      items:
        $ref: '#/components/schemas/TaskPerDayDTO'
    TaskPerDayDTO:
      type: object
      properties: null
    ObjectRenderResponse:
      type: object
      properties:
        selecteds:
          $ref: '#/components/schemas/Map%3CString,ObjectRender%3E'
        typeNames:
          $ref: '#/components/schemas/Map%3CString,String%3E'
        values:
          $ref: '#/components/schemas/List%3CMap%3CString,List%3CObjectRender%3E%3E%3E'
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
        update:
          type: boolean
    IntrospectionController:
      type: object
      properties: null
    GenerateFertigationFromRecommendationRequest:
      type: object
      properties:
        date:
          type: string
        materialList:
          $ref: '#/components/schemas/List%3CMaterial%3E'
        totalhour:
          type: number
        irrigator:
          $ref: '#/components/schemas/Subject'
        fertigationrecommendationgroups:
          $ref: '#/components/schemas/List%3CFertigationrecommendationgroup%3E'
    OperationResult<Laboralausence>:
      type: object
    Material:
      type: object
      properties: null
    Attributevalue:
      type: object
      properties: null
    List<Purchaseorderdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Purchaseorderdetail'
    List<ContactWix>:
      type: array
      items:
        $ref: '#/components/schemas/ContactWix'
    List<Laboralcontractor>:
      type: array
      items:
        $ref: '#/components/schemas/Laboralcontractor'
    GenerateFertigationRecommendationsRequest:
      type: object
      properties:
        fertigationRecommendationList:
          $ref: '#/components/schemas/List%3CFertigationrecommendation%3E'
    AutoAssociateContainersRequest:
      type: object
      properties:
        date:
          type: string
        serialshippingcontainerList:
          $ref: '#/components/schemas/List%3CSerialshippingcontainer%3E'
    CurrentPresenceResponse:
      type: object
      properties:
        workstations:
          $ref: '#/components/schemas/List%3CWorkstation%3E'
        busyWorkstations:
          $ref: '#/components/schemas/List%3CWorkstation%3E'
        nonFinishedTicks:
          $ref: '#/components/schemas/List%3CTimetick%3E'
        productionTicks:
          $ref: '#/components/schemas/Collection%3CTimetick%3E'
        workingPeopleLastTicks:
          $ref: '#/components/schemas/List%3CTimetick%3E'
        freeWorkstations:
          $ref: '#/components/schemas/List%3CWorkstation%3E'
    GetEntriesRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
        warehouse:
          $ref: '#/components/schemas/Warehouse'
    Hydrant:
      type: object
      properties: null
    List<Production>:
      type: array
      items:
        $ref: '#/components/schemas/Production'
    List<GarageDataperiodMaterialsItem>:
      type: array
      items:
        $ref: '#/components/schemas/GarageDataperiodMaterialsItem'
    GarageDataperiodMaterialsItem:
      type: object
      properties: null
    List<Plannedproductionmachine>:
      type: array
      items:
        $ref: '#/components/schemas/Plannedproductionmachine'
    List<InvoiceFormat>:
      type: array
      items:
        $ref: '#/components/schemas/InvoiceFormat'
    InvoiceFormat:
      type: object
      properties: null
    FLDSaleorderdetailDTO:
      type: object
      properties:
        productcategoryid:
          $ref: '#/components/schemas/Productcategory'
        caliberid:
          $ref: '#/components/schemas/Caliber'
        palettypeid:
          $ref: '#/components/schemas/Palettype'
        brandid:
          $ref: '#/components/schemas/Brand'
        confectiontypeid:
          $ref: '#/components/schemas/Confectiontype'
        bagtypeid:
          $ref: '#/components/schemas/Bagtype'
        containertypeid:
          $ref: '#/components/schemas/Containertype'
    List<Fertigationrecommendationgroup>:
      type: array
      items:
        $ref: '#/components/schemas/Fertigationrecommendationgroup'
    Fertigationrecommendationgroup:
      type: object
      properties: null
    WorkedDayImputation:
      type: object
      properties: null
    List<Execution>:
      type: array
      items:
        $ref: '#/components/schemas/Execution'
    'Map<String,List<Integer>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CInteger%3E'
    DateTime:
      type: object
      properties: null
    Warehousetype:
      type: object
      properties: null
    List<WorkerCalendar>:
      type: array
      items:
        $ref: '#/components/schemas/WorkerCalendar'
    WorkerCalendar:
      type: object
      properties: null
    SaveCalendarsRequest:
      type: object
      properties:
        calendar:
          $ref: '#/components/schemas/Calendar'
        deleteOthers:
          type: boolean
        subjects:
          $ref: '#/components/schemas/List%3CSubject%3E'
    List<WeeklyForecastResume>:
      type: array
      items:
        $ref: '#/components/schemas/WeeklyForecastResume'
    WeeklyForecastResume:
      type: object
      properties: null
    List<Forecast>:
      type: array
      items:
        $ref: '#/components/schemas/Forecast'
    ShareData:
      type: object
      properties:
        parameterName:
          type: string
    List<Material>:
      type: array
      items:
        $ref: '#/components/schemas/Material'
    StockDataDTO:
      type: object
      properties: null
    DataperiodcustomerRequest:
      type: object
      properties:
        date:
          type: string
        detailed:
          type: boolean
        dataperiodcustomerList:
          $ref: '#/components/schemas/List%3CDataperiodcustomer%3E'
        productions:
          type: boolean
        paymentmethod:
          $ref: '#/components/schemas/Paymentmethod'
        customer:
          $ref: '#/components/schemas/Customer'
    CreateSaleNotesRequest:
      type: object
      properties:
        date:
          type: string
        divideByOrder:
          type: boolean
        serie:
          type: string
        saleNotesFromSalesList:
          $ref: '#/components/schemas/List%3CSaleNoteFromSalesRequest%3E'
        paymentmethod:
          $ref: '#/components/schemas/Paymentmethod'
    AddInventoryDetailDTO:
      type: object
      properties:
        productId:
          type: integer
        warehouseId:
          type: integer
        stockLocationId:
          type: integer
        inventoryId:
          type: integer
    List<SerialShippingContainerInfo>:
      type: array
      items:
        $ref: '#/components/schemas/SerialShippingContainerInfo'
    SerialShippingContainerInfo:
      type: object
      properties: null
    GaragePurchaseItem:
      type: object
      properties: null
    Completionreason:
      type: object
      properties: null
    BirdDataperiodExecutionRequest:
      type: object
      properties:
        executionid:
          $ref: '#/components/schemas/BirdExecution'
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
    'Map<Integer,List<Subjectadditionalfieldvalue>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CSubjectadditionalfieldvalue%3E'
    List<Subjectadditionalfieldvalue>:
      type: array
      items:
        $ref: '#/components/schemas/Subjectadditionalfieldvalue'
    UpdateProductionCostsRequest:
      type: object
      properties:
        newQuantityPrice:
          type: number
        dataperiodId:
          type: integer
        newHourlyPrice:
          type: number
        taskid:
          $ref: '#/components/schemas/Task'
    List<Task>:
      type: array
      items:
        $ref: '#/components/schemas/Task'
    SaveSubjectRequest:
      type: object
      properties:
        excludedSubjects:
          $ref: '#/components/schemas/List%3CInteger%3E'
        mailing:
          $ref: '#/components/schemas/Mailing'
        includedSubjects:
          $ref: '#/components/schemas/List%3CInteger%3E'
    UpdateHourlyPriceRequest:
      type: object
      properties:
        updateImputation:
          type: boolean
        updateContract:
          type: boolean
        until:
          type: string
        workers:
          $ref: '#/components/schemas/List%3CWorker%3E'
        since:
          type: string
    ConsumptionSummary:
      type: object
      properties: null
    ArrayList<StockDataDTO>:
      type: array
      items:
        $ref: '#/components/schemas/StockDataDTO'
    FormDataContentDisposition:
      type: object
      properties: null
    List<StockchangeFormat>:
      type: array
      items:
        $ref: '#/components/schemas/StockchangeFormat'
    List<WorkerTimetick>:
      type: array
      items:
        $ref: '#/components/schemas/WorkerTimetick'
    WorkerTimetick:
      type: object
      properties: null
    List<Producttask>:
      type: array
      items:
        $ref: '#/components/schemas/Producttask'
    List<VatResumeBillingDTO>:
      type: array
      items:
        $ref: '#/components/schemas/VatResumeBillingDTO'
    MonitorableResumeResponse:
      type: object
      properties:
        datapoints:
          $ref: '#/components/schemas/Map%3CMonitorable,List%3CMonitorabledataResume%3E%3E'
        targets:
          $ref: '#/components/schemas/Map%3CMonitorable,List%3CMonitorableTarget%3E%3E'
    ChangeAttributeRequest:
      type: object
      properties:
        entityType:
          type: string
        dataperiodid:
          type: integer
        primaryKey:
          type: integer
    ContainerBarcodeRequest:
      type: object
      properties:
        saleorderid:
          type: integer
        pendingSaleOrderLoadedResume:
          $ref: '#/components/schemas/PendingSaleOrderLoadedResume'
        barcode:
          type: string
        paletSelected:
          $ref: '#/components/schemas/Serialshippingcontainer'
    List<RetrieveEnterprisesResponse>:
      type: array
      items:
        $ref: '#/components/schemas/RetrieveEnterprisesResponse'
    ErteCommunicationRequest:
      type: object
      properties:
        excel:
          type: string
        company:
          $ref: '#/components/schemas/Company'
        procedure:
          $ref: '#/components/schemas/Procedure'
        sendingType:
          type: string
        workCenter:
          $ref: '#/components/schemas/WorkCenter'
    List<Productionadditionalfieldvalue>:
      type: array
      items:
        $ref: '#/components/schemas/Productionadditionalfieldvalue'
    DueDateRequest:
      type: object
      properties:
        chargeList:
          $ref: '#/components/schemas/List%3CCharge%3E'
        paymentduedateList:
          $ref: '#/components/schemas/List%3CPendingDuedate%3E'
        chargeduedateList:
          $ref: '#/components/schemas/List%3CPendingDuedate%3E'
        group:
          type: boolean
        paymentList:
          $ref: '#/components/schemas/List%3CPayment%3E'
    Collection<ConsumptionSummary>:
      type: array
      items:
        $ref: '#/components/schemas/ConsumptionSummary'
    ImportModelRequest:
      type: object
      properties:
        period:
          type: string
        periodType:
          type: string
        year:
          type: string
        model:
          type: string
        documentData:
          type: string
        customer:
          type: string
    StartOrderRequest:
      type: object
      properties:
        orderNumber:
          type: string
        dataperiodId:
          type: integer
        startedAt:
          type: string
    MovementQuery:
      type: object
      properties:
        fromDate:
          type: string
        batches:
          $ref: '#/components/schemas/List%3CString%3E'
        toDate:
          type: string
        warehouses:
          $ref: '#/components/schemas/List%3CWarehouse%3E'
        products:
          $ref: '#/components/schemas/List%3CProduct%3E'
    Workspacetype:
      type: object
      properties: null
    List<DataperiodSimpleResume>:
      type: array
      items:
        $ref: '#/components/schemas/DataperiodSimpleResume'
    List<PhotoSubjectResumeResponse>:
      type: array
      items:
        $ref: '#/components/schemas/PhotoSubjectResumeResponse'
    List<SaleInvoiceExtra>:
      type: array
      items:
        $ref: '#/components/schemas/SaleInvoiceExtra'
    Settlementgroup:
      type: object
      properties: null
    RoleMenuitemsRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        menuitemList:
          $ref: '#/components/schemas/List%3CMenuitem%3E'
    List<TimetickByCustomerRow>:
      type: array
      items:
        $ref: '#/components/schemas/TimetickByCustomerRow'
    List<DocumentToSignDTO>:
      type: array
      items:
        $ref: '#/components/schemas/DocumentToSignDTO'
    Prospect:
      type: object
      properties: null
    OperationResult:
      type: object
      properties:
        createdAt:
          type: string
        data:
          $ref: '#/components/schemas/T'
        success:
          type: boolean
        messages:
          $ref: '#/components/schemas/List%3CString%3E'
        error:
          $ref: '#/components/schemas/OperationError'
    List<Workstation>:
      type: array
      items:
        $ref: '#/components/schemas/Workstation'
    Formtemplate:
      type: object
      properties: null
    SubjectDTO:
      type: object
      properties: null
    List<ExecutionItem>:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionItem'
    SearchTimeTicksRequest:
      type: object
      properties:
        endDate:
          type: string
        tickType:
          type: integer
        subjects:
          $ref: '#/components/schemas/List%3CSubject%3E'
        workspaces:
          $ref: '#/components/schemas/List%3CWorkspace%3E'
        startDate:
          type: string
        onlyGeolocalizated:
          type: boolean
    Formsampling:
      type: object
      properties:
        formsamplingid:
          type: integer
        formid:
          $ref: '#/components/schemas/Form'
        formsampling:
          type: string
    List<Saleorderfinaldestination>:
      type: array
      items:
        $ref: '#/components/schemas/Saleorderfinaldestination'
    Saleorderfinaldestination:
      type: object
      properties: null
    List<Laboralausence>:
      type: array
      items:
        $ref: '#/components/schemas/Laboralausence'
    Costcenterconcept:
      type: object
      properties: null
    StockBalance:
      type: object
      properties: null
    Advisercustomer:
      type: object
      properties:
        fiscaldata:
          $ref: '#/components/schemas/Fiscaldata'
        fiscal:
          type: boolean
        legal:
          type: boolean
        laboral:
          type: boolean
        type:
          type: string
        governmenttypeid:
          $ref: '#/components/schemas/Governmenttype'
        foundationaldata:
          $ref: '#/components/schemas/Foundationaldata'
    Foundationaldata:
      type: object
      properties: null
    List<DocumentTotalDTO>:
      type: array
      items:
        $ref: '#/components/schemas/DocumentTotalDTO'
    DocumentTotalDTO:
      type: object
      properties: null
    List<ProductivityItem>:
      type: array
      items:
        $ref: '#/components/schemas/ProductivityItem'
    ProductivityItem:
      type: object
      properties: null
    List<Email>:
      type: array
      items:
        $ref: '#/components/schemas/Email'
    List<ContainerAssociation>:
      type: array
      items:
        $ref: '#/components/schemas/ContainerAssociation'
    CasefileSelectorFilter:
      type: object
      properties:
        datemax:
          type: string
        casefiletyperootname:
          type: string
        donetype:
          type: integer
        customername:
          type: string
        responsibletype:
          type: integer
    GetSubjectsRequest:
      type: object
      properties:
        additionafieldsToInclude:
          $ref: '#/components/schemas/List%3CInteger%3E'
        mailing:
          $ref: '#/components/schemas/Mailing'
    WorkerPlus:
      type: object
      properties: null
    List<ProductionProvision>:
      type: array
      items:
        $ref: '#/components/schemas/ProductionProvision'
    PendingDocumentResponse:
      type: object
      properties:
        date:
          type: string
        path:
          type: string
        documentname:
          type: string
    ByteArrayInputStream:
      type: object
      properties: null
    'Map<String, Integer>':
      type: object
      additionalProperties:
        type: integer
    ProvisionLabelInfo:
      type: object
      properties:
        eanProduct:
          type: string
        quantity:
          type: string
        eanBox:
          type: string
        remarks:
          type: string
    UpdateWorkspaceRequest:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
        worker:
          $ref: '#/components/schemas/Worker'
        previousWorkspace:
          $ref: '#/components/schemas/Workspace'
        operation:
          type: string
    GenerateTreatmentRequest:
      type: object
      properties:
        treatment:
          $ref: '#/components/schemas/Treatment'
        treatmentcultivationdetailList:
          $ref: '#/components/schemas/List%3CTreatmentcultivationdetail%3E'
    SaleinvoiceCreditRequest:
      type: object
      properties:
        saleinvoiceCreditList:
          $ref: '#/components/schemas/List%3CSaleinvoiceCredit%3E'
        saleinvoice:
          $ref: '#/components/schemas/Saleinvoice'
    PurchasesDataRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    TreatmentChangesRequest:
      type: object
      properties:
        treatment:
          $ref: '#/components/schemas/Treatment'
        materialList:
          $ref: '#/components/schemas/List%3CMaterial%3E'
    AppointmentChangesResponse:
      type: object
      properties:
        updatedAppointments:
          $ref: '#/components/schemas/List%3CAppointment%3E'
        month:
          type: integer
        year:
          type: integer
        details:
          $ref: '#/components/schemas/List%3CAppointmentcustomer%3E'
        deletedKeys:
          $ref: '#/components/schemas/List%3CInteger%3E'
    List<PurchaseinvoiceResumeResponse>:
      type: array
      items:
        $ref: '#/components/schemas/PurchaseinvoiceResumeResponse'
    FLDTreatmentExcelReportRequest:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
        campaign:
          $ref: '#/components/schemas/Campaign'
        cultivationproduct:
          $ref: '#/components/schemas/Cultivationproduct'
    VatResumeDTO:
      type: object
      properties:
        billingList:
          $ref: '#/components/schemas/List%3CVatResumeBillingDTO%3E'
        accountingList:
          $ref: '#/components/schemas/List%3CVatResumeAccountingDTO%3E'
    ChangeWorkerRequest:
      type: object
      properties:
        oldWorker:
          $ref: '#/components/schemas/Worker'
        newWorker:
          $ref: '#/components/schemas/Worker'
    Laboralcontingencetype:
      type: object
      properties: null
    Confectiontype:
      type: object
      properties: null
    ReportDiaryRequest:
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    List<Amortizationdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Amortizationdetail'
    Amortizationdetail:
      type: object
      properties: null
    ProductionListRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    List<ETTDataperiodWorkedDay>:
      type: array
      items:
        $ref: '#/components/schemas/ETTDataperiodWorkedDay'
    List<LaboralausenceExtended>:
      type: array
      items:
        $ref: '#/components/schemas/LaboralausenceExtended'
    List<Settlementgroup>:
      type: array
      items:
        $ref: '#/components/schemas/Settlementgroup'
    SettlementGeneratorResponse:
      type: object
      properties:
        records:
          $ref: '#/components/schemas/List%3CSettlementGeneratorRecord%3E'
    'Map<Integer, List<Contract>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CContract%3E'
    ReportGenerationRequest:
      type: object
      properties:
        reportFileName:
          type: string
        reportParameters:
          $ref: '#/components/schemas/Map%3CString,Object%3E'
    Subjectchargeactuationtype:
      type: object
      properties: null
    SaveLocationRequest:
      type: object
      properties:
        terminalName:
          type: string
        latitude:
          type: number
        terminalId:
          type: integer
        timestamp:
          type: string
        longitude:
          type: number
    List<WorkerPlus>:
      type: array
      items:
        $ref: '#/components/schemas/WorkerPlus'
    List<EmailfolderItem>:
      type: array
      items:
        $ref: '#/components/schemas/EmailfolderItem'
    EmailfolderItem:
      type: object
      properties: null
    DataperiodtypeResponse:
      type: object
      properties:
        urlToGet:
          type: string
        type:
          type: string
        urlToSave:
          type: string
    List<Dataperiodimputation>:
      type: array
      items:
        $ref: '#/components/schemas/Dataperiodimputation'
    List<ClassToCheck>:
      type: array
      items:
        $ref: '#/components/schemas/ClassToCheck'
    GenerateSettlementFromRecordsRequest:
      type: object
      properties:
        date:
          type: string
        bankaccountid:
          $ref: '#/components/schemas/Bankaccount'
        records:
          $ref: '#/components/schemas/List%3CSettlementGeneratorRecord%3E'
        contractorid:
          $ref: '#/components/schemas/Contractor'
    BRDSacrificeResumeResponse:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/List%3CBRDSacrificeResumeDetail%3E'
    List<PendingPlannedproductionResponse>:
      type: array
      items:
        $ref: '#/components/schemas/PendingPlannedproductionResponse'
    List<Purchasenote>:
      type: array
      items:
        $ref: '#/components/schemas/Purchasenote'
    Laboralreport:
      type: object
      properties: null
    Workspace:
      type: object
      properties: null
    ArrayList<GarageVehicleSaleDetailDTO>:
      type: array
      items:
        $ref: '#/components/schemas/GarageVehicleSaleDetailDTO'
    List<TaskCost>:
      type: array
      items:
        $ref: '#/components/schemas/TaskCost'
    'Map<String,Object>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Object'
    List<AgrosabasAssignable>:
      type: array
      items:
        $ref: '#/components/schemas/AgrosabasAssignable'
    GeneratePlanificationsRequest:
      type: object
      properties:
        until:
          type: string
        planifications:
          $ref: '#/components/schemas/List%3CLaboralreportplanification%3E'
        notify:
          type: boolean
        since:
          type: string
    NewPaletNumberResponse:
      type: object
      properties:
        paletnumber:
          type: string
    BankreconciliationMatch:
      type: object
      properties: null
    CheckImporterRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    List<ShareEmailPlanificationsRequest>:
      type: array
      items:
        $ref: '#/components/schemas/ShareEmailPlanificationsRequest'
    ETTWorkedDayRequest:
      type: object
      properties:
        day:
          $ref: '#/components/schemas/DateTime'
        temporaryworkagency:
          $ref: '#/components/schemas/Temporaryworkagency'
    List<PendingDocumentResponse>:
      type: array
      items:
        $ref: '#/components/schemas/PendingDocumentResponse'
    List<ReportParameter>:
      type: array
      items:
        $ref: '#/components/schemas/ReportParameter'
    ReportParameter:
      type: object
      properties: null
    EmailsResponse:
      type: object
      properties:
        emails:
          $ref: '#/components/schemas/List%3CEmailItem%3E'
        emailFolders:
          $ref: '#/components/schemas/List%3CEmailfolderItem%3E'
    GaragedataperiodStatus:
      type: object
      properties: null
    PurchaseResponse:
      type: object
      properties:
        purchaseorders:
          $ref: '#/components/schemas/Collection%3CPurchaseorder%3E'
        orderrelationships:
          $ref: '#/components/schemas/Collection%3COrderRelationship%3E'
        salenotes:
          $ref: '#/components/schemas/Collection%3CSalenote%3E'
        purchasenotes:
          $ref: '#/components/schemas/Collection%3CPurchasenote%3E'
        details:
          $ref: '#/components/schemas/Collection%3CPurchasedetailResume%3E'
        purchaseinvoices:
          $ref: '#/components/schemas/Collection%3CPurchaseinvoice%3E'
    List<PendingDuedate>:
      type: array
      items:
        $ref: '#/components/schemas/PendingDuedate'
    List<VatResumeAccountingDTO>:
      type: array
      items:
        $ref: '#/components/schemas/VatResumeAccountingDTO'
    Accountingentrytype:
      type: object
      properties: null
    List<ResumedCasefile>:
      type: array
      items:
        $ref: '#/components/schemas/ResumedCasefile'
    ResumedCasefile:
      type: object
      properties: null
    WorkedDayDataperiod:
      type: object
      properties: null
    ValidContractsRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
        workerCodes:
          $ref: '#/components/schemas/List%3CInteger%3E'
    List<Modeldeclaration>:
      type: array
      items:
        $ref: '#/components/schemas/Modeldeclaration'
    FertigationrecommendationByIrrigationSectorResume:
      type: object
      properties: null
    'Object[]':
      type: array
      items:
        $ref: '#/components/schemas/Object'
    Paymentmethod:
      type: object
      properties: null
    List<Monitorable>:
      type: array
      items:
        $ref: '#/components/schemas/Monitorable'
    SaleInvoicesToMailingRequest:
      type: object
      properties:
        fromDate:
          type: string
        onlyPending:
          type: boolean
        toDate:
          type: string
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        customer:
          $ref: '#/components/schemas/Customer'
        onlyNotPending:
          type: boolean
    TrainerUpdateRequest:
      type: object
      properties:
        appointments:
          $ref: '#/components/schemas/List%3CAppointment%3E'
        newTrainer:
          $ref: '#/components/schemas/Trainer'
        oldTrainer:
          $ref: '#/components/schemas/Trainer'
        from:
          type: string
        to:
          type: string
    PendingPurchaseInvoicesRequest:
      type: object
      properties:
        fromDate:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
        contractorid:
          $ref: '#/components/schemas/Contractor'
        confirmedquantity:
          type: boolean
        toDate:
          type: string
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        showall:
          type: boolean
        casefileid:
          $ref: '#/components/schemas/Casefile'
    TraceabilityItem:
      type: object
      properties: null
    ChangeAccountingContractorRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        accountingIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
    Logger:
      type: object
      properties: null
    long:
      type: string
    List<Batchadditionalfieldvalue>:
      type: array
      items:
        $ref: '#/components/schemas/Batchadditionalfieldvalue'
    List<Planned>:
      type: array
      items:
        $ref: '#/components/schemas/Planned'
    StockDetailResume:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/Map%3CString,List%3CStockDetail%3E%3E'
        previousBalances:
          $ref: '#/components/schemas/Map%3CString,StockBalance%3E'
        followingBalances:
          $ref: '#/components/schemas/Map%3CString,StockBalance%3E'
    Team:
      type: object
      properties: null
    Provision:
      type: object
      properties:
        provisionid:
          type: integer
        date:
          type: string
        driverid:
          $ref: '#/components/schemas/Subject'
        chargerid:
          $ref: '#/components/schemas/Subject'
        sent:
          type: string
        workspaceid:
          $ref: '#/components/schemas/Workspace'
    ForecastWeekSummary:
      type: object
      properties: null
    Siisubmission:
      type: object
      properties: null
    Calendar:
      type: object
      properties: null
    List<TotalResult>:
      type: array
      items:
        $ref: '#/components/schemas/TotalResult'
    List<PhocusCall>:
      type: array
      items:
        $ref: '#/components/schemas/PhocusCall'
    PhocusCall:
      type: object
      properties: null
    List<Laboralreport>:
      type: array
      items:
        $ref: '#/components/schemas/Laboralreport'
    Mailing:
      type: object
      properties: null
    Settlement:
      type: object
      properties:
        date:
          type: string
        settlementid:
          type: integer
        confirmed:
          type: string
        trainerid:
          $ref: '#/components/schemas/Trainer'
    List<Laboralreportdocument>:
      type: array
      items:
        $ref: '#/components/schemas/Laboralreportdocument'
    Event:
      type: object
      properties: null
    List<Brokerorder>:
      type: array
      items:
        $ref: '#/components/schemas/Brokerorder'
    Brokerorder:
      type: object
      properties: null
    DumpStockInventoryRequest:
      type: object
      properties:
        inventaryId:
          type: integer
        warehouse:
          $ref: '#/components/schemas/Warehouse'
        producttype:
          $ref: '#/components/schemas/Producttype'
    List<Incomestatementbankaccount>:
      type: array
      items:
        $ref: '#/components/schemas/Incomestatementbankaccount'
    DeleteOrUpdatePlannedproduction:
      type: object
      properties:
        plannedproductionid:
          $ref: '#/components/schemas/Plannedproduction'
        delete:
          type: boolean
    ObjectRenderRequest:
      type: object
      properties:
        selecteds:
          $ref: '#/components/schemas/Map%3CString,ObjectRender%3E'
        values:
          $ref: '#/components/schemas/List%3CMap%3CString,List%3CObjectRender%3E%3E%3E'
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
        taskid:
          $ref: '#/components/schemas/Task'
        triggeredBy:
          type: string
    WorknotesIncidenceReport:
      type: object
      properties:
        compositionDetailFaults:
          $ref: '#/components/schemas/List%3CProduction%3E'
        consumedQuantitiesDiffersFromCompositionDetail:
          $ref: '#/components/schemas/List%3CProduction%3E'
        rawMaterialsNotRegistered:
          $ref: '#/components/schemas/List%3CProduction%3E'
    IncidencesSearchRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
    UpdateCalendarsRequest:
      type: object
      properties:
        calendar:
          $ref: '#/components/schemas/Calendar'
        worker:
          $ref: '#/components/schemas/Worker'
        operation:
          type: string
        previousCalendar:
          $ref: '#/components/schemas/Calendar'
    List<Dataperiodtype>:
      type: array
      items:
        $ref: '#/components/schemas/Dataperiodtype'
    Dataperiodtype:
      type: object
      properties: null
    List<TreasuryData>:
      type: array
      items:
        $ref: '#/components/schemas/TreasuryData'
    List<WorkedDayProductionasset>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedDayProductionasset'
    Route:
      type: object
      properties: null
    List<CessionResume>:
      type: array
      items:
        $ref: '#/components/schemas/CessionResume'
    FLDVariationResumeResponse:
      type: object
      properties:
        totalPlantedCost:
          type: number
        records:
          $ref: '#/components/schemas/List%3CFLDVariationResumeRow%3E'
        totalCollectedCost:
          type: number
        totalPlantedQuantity:
          type: integer
        totalCollectedQuantity:
          type: integer
    'Map<String,Map<Object,Timestamp>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Map%3CObject,Timestamp%3E'
    Fldsaleorderdetail:
      type: object
      properties:
        cultivationproductid:
          $ref: '#/components/schemas/Product'
    EnclosureDataDTO:
      type: object
      properties:
        workspace:
          type: string
        cycle:
          type: string
        cultivations:
          $ref: '#/components/schemas/List%3CCultivationDataDTO%3E'
    FLDDataperiodConsumption:
      type: object
      properties:
        applicationreason:
          $ref: '#/components/schemas/Applicationreason'
    FLDResumerExcelReportRequest:
      type: object
      properties:
        rows:
          $ref: '#/components/schemas/List%3CFLDResumeRow%3E'
    Pendingtask:
      type: object
      properties:
        duration:
          type: number
        plannedproductionid:
          $ref: '#/components/schemas/Plannedproduction'
        quantity:
          type: number
        externalcode:
          type: string
        executorid:
          $ref: '#/components/schemas/Subject'
        pendingtaskid:
          type: integer
        productionid:
          $ref: '#/components/schemas/Production'
        registeredat:
          type: string
        delegatesubject:
          $ref: '#/components/schemas/Subject'
        closed:
          type: boolean
        remarks:
          type: string
    Laboralprocessduration:
      type: object
      properties: null
    StockQuery:
      type: object
      properties:
        groupByLocation:
          type: boolean
        movementtypes:
          $ref: '#/components/schemas/List%3CStockMovementType%3E'
        toReturn:
          $ref: '#/components/schemas/StockQuery'
        groupByProduct:
          type: boolean
        logger:
          $ref: '#/components/schemas/Logger'
        toDate:
          type: string
        warehouses:
          $ref: '#/components/schemas/List%3CWarehouse%3E'
        producttypes:
          $ref: '#/components/schemas/List%3CProducttype%3E'
        products:
          $ref: '#/components/schemas/List%3CProduct%3E'
        batchDescriptions:
          $ref: '#/components/schemas/List%3CString%3E'
        fromDate:
          type: string
        batches:
          $ref: '#/components/schemas/List%3CBatch%3E'
        containercodes:
          $ref: '#/components/schemas/List%3CString%3E'
        groupByContainerCode:
          type: boolean
        groupByProductType:
          type: boolean
        groupByWarehouse:
          type: boolean
        warehousetypes:
          $ref: '#/components/schemas/List%3CWarehousetype%3E'
        locations:
          $ref: '#/components/schemas/List%3CStocklocation%3E'
        groupByWarehouseType:
          type: boolean
        groupByBatch:
          type: boolean
    'Map<Monitorable,List<MonitorableTarget>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CMonitorableTarget%3E'
    Campaign:
      type: object
      properties: null
    InstancesByPrimaryKeyRequest:
      type: object
      properties:
        primaryKeys:
          $ref: '#/components/schemas/Object[]'
        persistenceCriteria:
          $ref: '#/components/schemas/PersistenceCriteria'
        clazzName:
          type: string
    CreateGroupRequest:
      type: object
      properties:
        ownerid:
          type: integer
        casefileid:
          type: integer
        memberIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        group:
          type: string
    Productcategory:
      type: object
      properties: null
    List<BankreconciliationMatch>:
      type: array
      items:
        $ref: '#/components/schemas/BankreconciliationMatch'
    List<SaleinvoicedetailWithTotal>:
      type: array
      items:
        $ref: '#/components/schemas/SaleinvoicedetailWithTotal'
    MoveDocumentsRequest:
      type: object
      properties:
        homePath:
          type: string
        destination:
          type: string
        documentIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
    Options:
      type: object
      properties: null
    AppointmentChangesRequest:
      type: object
      properties:
        month:
          type: integer
        year:
          type: integer
        keys:
          $ref: '#/components/schemas/List%3CInteger%3E'
        from:
          type: string
    List<UploadRequest>:
      type: array
      items:
        $ref: '#/components/schemas/UploadRequest'
    List<SaleNoteFromSalesRequest>:
      type: array
      items:
        $ref: '#/components/schemas/SaleNoteFromSalesRequest'
    Time:
      type: string
    List<SaleinvoiceCredit>:
      type: array
      items:
        $ref: '#/components/schemas/SaleinvoiceCredit'
    List<WorkedDayImputation>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedDayImputation'
    Branch:
      type: object
      properties: null
    DataperiodRevision:
      type: object
      properties: null
    ChangeVisibilityDocumentsRequest:
      type: object
      properties:
        visible:
          type: boolean
        documentIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
    ArrayList<ChangeContractInfo>:
      type: array
      items:
        $ref: '#/components/schemas/ChangeContractInfo'
    ChangeContractInfo:
      type: object
      properties: null
    Casefilerequest:
      type: object
      properties:
        dataperiods:
          $ref: '#/components/schemas/Dataperiodrequest[]'
        responsibleid:
          type: integer
        casefiletypeid:
          type: integer
    List<Saleorderdetailcontainer>:
      type: array
      items:
        $ref: '#/components/schemas/Saleorderdetailcontainer'
    Saleorderdetailcontainer:
      type: object
      properties:
        quantity:
          type: number
        saleorderdetailcontainerid:
          type: integer
        serialshippingcontainerdetailid:
          $ref: '#/components/schemas/Serialshippingcontainerdetail'
        saleorderdetailid:
          $ref: '#/components/schemas/Saleorderdetail'
    NewWorkersRequest:
      type: object
      properties:
        date:
          type: string
    CultureDataDTO:
      type: object
      properties:
        advanceDeductionAvailable:
          type: number
        deductionPercentage:
          type: number
        deductionForecast:
          type: number
        generatedDeduction:
          type: number
    NoteRequest:
      type: object
      properties:
        casefile:
          $ref: '#/components/schemas/Casefile'
        filename:
          type: string
        file:
          $ref: '#/components/schemas/byte[]'
        notificables:
          $ref: '#/components/schemas/List%3CNotificable%3E'
        remarks:
          type: string
    PendingSaleNotesRequest:
      type: object
      properties:
        fromDate:
          type: string
        product:
          type: string
        provider:
          type: string
        toDate:
          type: string
        toEstimatedShippingDate:
          type: string
        casefileid:
          $ref: '#/components/schemas/Casefile'
        fromEstimatedShippingDate:
          type: string
        producttype:
          type: string
        customer:
          type: string
    SIIPendingRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        from:
          type: string
        to:
          type: string
    List<PendingProductionItem>:
      type: array
      items:
        $ref: '#/components/schemas/PendingProductionItem'
    PendingProductionItem:
      type: object
      properties:
        executedQuantity:
          type: number
        workspace:
          $ref: '#/components/schemas/Workspace'
        product:
          $ref: '#/components/schemas/Product'
        plannedproductionid:
          type: integer
        batch:
          type: string
        lineid:
          $ref: '#/components/schemas/Line'
        unitsByMovementunit:
          type: number
        saleorderdetailid:
          type: integer
        executionmovementunitid:
          $ref: '#/components/schemas/Movementunit'
        task:
          $ref: '#/components/schemas/Task'
        totalQuantity:
          type: number
        pendingQuantity:
          type: number
        composition:
          $ref: '#/components/schemas/List%3CCompositiondetail%3E'
        plannedorder:
          type: integer
        movementunit:
          $ref: '#/components/schemas/Movementunit'
        containers:
          $ref: '#/components/schemas/List%3CContainer%3E'
        remarks:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
        sendToAddress:
          $ref: '#/components/schemas/Subjectaddress'
    Vat:
      type: object
      properties: null
    List<AgrosabasSaleinvoicedetailWithSalenoteDTO>:
      type: array
      items:
        $ref: '#/components/schemas/AgrosabasSaleinvoicedetailWithSalenoteDTO'
    Trainer:
      type: object
      properties: null
    Saleorderincidence:
      type: object
      properties: null
    AccrualResumeRequest:
      type: object
      properties:
        fromDate:
          type: string
        toDate:
          type: string
        accrualList:
          $ref: '#/components/schemas/List%3CInteger%3E'
    TimetickByCustomerResponse:
      type: object
      properties:
        rowsList:
          $ref: '#/components/schemas/List%3CTimetickByCustomerRow%3E'
        columns:
          type: integer
    List<MonitorabledataResume>:
      type: array
      items:
        $ref: '#/components/schemas/MonitorabledataResume'
    LoanPaymentAccountingRequest:
      type: object
      properties:
        workerAccountId:
          type: integer
        bankAccountId:
          type: integer
        loanPaymentId:
          type: integer
    EmailSmartPlannedproductionRequest:
      type: object
      properties:
        executor:
          $ref: '#/components/schemas/Subject'
        email:
          $ref: '#/components/schemas/Email'
    List<SaveProvisioningModel>:
      type: array
      items:
        $ref: '#/components/schemas/SaveProvisioningModel'
    List<ResumedEntrydetail>:
      type: array
      items:
        $ref: '#/components/schemas/ResumedEntrydetail'
    ComunicatePurchaseInvoicesSIIPendingRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        purchaseinvoiceList:
          $ref: '#/components/schemas/List%3CPurchaseinvoice%3E'
        modified:
          type: boolean
    List<OperationResult<Laboralausence>>:
      type: array
      items:
        $ref: '#/components/schemas/OperationResult%3CLaboralausence%3E'
    List<CultivationDataDTO>:
      type: array
      items:
        $ref: '#/components/schemas/CultivationDataDTO'
    List<Notificable>:
      type: array
      items:
        $ref: '#/components/schemas/Notificable'
    ProductResolverRequest:
      type: object
      properties:
        filter:
          type: string
    List<SerialshippingByTerminalResponse>:
      type: array
      items:
        $ref: '#/components/schemas/SerialshippingByTerminalResponse'
    Modifieddataperiod:
      type: object
      properties:
        modifiedconsumptionid:
          type: integer
        dataperiodid:
          $ref: '#/components/schemas/Dataperiod'
        uploaded:
          type: boolean
    Governmenttype:
      type: object
      properties: null
    PaymentWorkerRequest:
      type: object
      properties:
        document:
          type: string
        id:
          type: integer
        type:
          type: string
    DataperiodSearchRequest:
      type: object
      properties:
        date:
          type: string
    List<SeizureExtra>:
      type: array
      items:
        $ref: '#/components/schemas/SeizureExtra'
    SeizureExtra:
      type: object
      properties: null
    List<FertigationrecommendationByIrrigationSectorResume>:
      type: array
      items:
        $ref: '#/components/schemas/FertigationrecommendationByIrrigationSectorResume'
    List<String>:
      type: array
      items:
        type: string
    MonitorableIntervalResponse:
      type: object
      properties: null
    ImportDataperiodRequest:
      type: object
      properties:
        date:
          type: string
        base64file:
          type: string
    List<Warehousetype>:
      type: array
      items:
        $ref: '#/components/schemas/Warehousetype'
    List<PurchasenoteExtra>:
      type: array
      items:
        $ref: '#/components/schemas/PurchasenoteExtra'
    NewTimetickRequest:
      type: object
      properties:
        workspace:
          type: integer
        line:
          type: integer
        cardCode:
          type: string
        latitude:
          type: number
        workstation:
          type: integer
        subjectid:
          type: integer
        terminalName:
          type: string
        entering:
          type: boolean
        task:
          type: integer
        searchAdditionalInformation:
          type: boolean
        assetid:
          type: integer
        timestamp:
          type: string
        longitude:
          type: number
    NewStoreContainerRequest:
      type: object
      properties:
        netWeight:
          type: number
        batch:
          type: string
        weight:
          type: number
        warehouse:
          $ref: '#/components/schemas/Warehouse'
        stockmovementid:
          type: integer
        operator:
          type: integer
    List<Saleinvoice>:
      type: array
      items:
        $ref: '#/components/schemas/Saleinvoice'
    Saleinvoice:
      type: object
      properties:
        date:
          type: string
        bankaccountid:
          $ref: '#/components/schemas/Bankaccount'
        additionalreference:
          type: string
        contractorid:
          $ref: '#/components/schemas/Contractor'
        discount:
          type: number
        registrationdate:
          type: string
        accountingdate:
          type: string
        sent:
          type: string
        reference:
          type: string
        number:
          type: integer
        saleinvoiceid:
          type: integer
        externalcode:
          type: string
        lastmodified:
          type: string
        internalremarks:
          type: string
        iban:
          type: string
        serie:
          type: string
        customerid:
          $ref: '#/components/schemas/Subject'
        paymentmethodid:
          $ref: '#/components/schemas/Paymentmethod'
        customername:
          type: string
        accountingentryid:
          $ref: '#/components/schemas/Accountingentry'
        casefileid:
          $ref: '#/components/schemas/Casefile'
        remarks:
          type: string
        basemismatch:
          type: number
    List<Treatmentuse>:
      type: array
      items:
        $ref: '#/components/schemas/Treatmentuse'
    ProductionForecastRequest:
      type: object
      properties:
        week:
          type: integer
        extraWeeks:
          type: integer
        year:
          type: integer
        producttype:
          $ref: '#/components/schemas/Producttype'
    List<WorkedDayTime>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedDayTime'
    List<ConsumptionCostOLAPResponse>:
      type: array
      items:
        $ref: '#/components/schemas/ConsumptionCostOLAPResponse'
    ConsumptionCostOLAPResponse:
      type: object
      properties: null
    List<Serialshippingcontainerdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Serialshippingcontainerdetail'
    ProductWithReferencesDTO:
      type: object
      properties: null
    List<SettlementResume>:
      type: array
      items:
        $ref: '#/components/schemas/SettlementResume'
    Collection<Attributesaleorderdetail>:
      type: array
      items:
        $ref: '#/components/schemas/Attributesaleorderdetail'
    PendingProductionRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Plannedproduction'
        since:
          type: string
        status:
          type: integer
    Model:
      type: object
      properties: null
    'Map<String,StockBalance>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StockBalance'
    SearchGroupMessagesRequest:
      type: object
      properties:
        fromDate:
          type: string
        accountid:
          type: integer
        groupid:
          type: integer
        fromId:
          type: integer
        casefileid:
          type: integer
    GenerateFertigationsRequest:
      type: object
      properties:
        fertigationList:
          $ref: '#/components/schemas/List%3CFertigation%3E'
    Company:
      type: object
      properties: null
    List<Fertigation>:
      type: array
      items:
        $ref: '#/components/schemas/Fertigation'
    List<WorkerProductionCostResponse>:
      type: array
      items:
        $ref: '#/components/schemas/WorkerProductionCostResponse'
    Collection<TraceabilityItem>:
      type: array
      items:
        $ref: '#/components/schemas/TraceabilityItem'
    BalanceResult:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/List%3CBalanceDetail%3E'
        nonIncludedAccounts:
          $ref: '#/components/schemas/List%3CAccount%3E'
    AssignTimetickRequest:
      type: object
      properties:
        lineid:
          $ref: '#/components/schemas/Line'
        timeticks:
          $ref: '#/components/schemas/List%3CTimetick%3E'
        taskid:
          $ref: '#/components/schemas/Task'
    Saleinvoicedetail:
      type: object
      properties: null
    List<ForecastWeekSummary>:
      type: array
      items:
        $ref: '#/components/schemas/ForecastWeekSummary'
    List<WorkspaceForecast>:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceForecast'
    PendingProductionResponse:
      type: object
      properties:
        plannedproductions:
          $ref: '#/components/schemas/List%3CPlannedproduction%3E'
        dataperiodsadditionalfield:
          $ref: '#/components/schemas/List%3CDataperiodadditionalfieldvalue%3E'
    List<WorkedDayDataperiod>:
      type: array
      items:
        $ref: '#/components/schemas/WorkedDayDataperiod'
    List<ProductWithReferencesDTO>:
      type: array
      items:
        $ref: '#/components/schemas/ProductWithReferencesDTO'
    Subjectchargeactuation:
      type: object
      properties:
        date:
          type: string
        subjectchargeactuationid:
          type: integer
        balance:
          type: number
        contractorid:
          $ref: '#/components/schemas/Contractor'
        subjectid:
          $ref: '#/components/schemas/Subject'
        remarks:
          type: string
        subjectchargeactuationtype:
          $ref: '#/components/schemas/Subjectchargeactuationtype'
    Systemuser:
      type: object
      properties: null
    List<DocumentNoteDTO>:
      type: array
      items:
        $ref: '#/components/schemas/DocumentNoteDTO'
    Collection<Timetick>:
      type: array
      items:
        $ref: '#/components/schemas/Timetick'
    List<Loan>:
      type: array
      items:
        $ref: '#/components/schemas/Loan'
    'Map<String,String>':
      type: object
      additionalProperties:
        type: string
    CurrentDataperiodAndExecutionResponse:
      type: object
      properties:
        currentDataperiod:
          $ref: '#/components/schemas/Dataperiod'
        currentExecution:
          $ref: '#/components/schemas/Execution'
    Notenotification:
      type: object
      properties:
        readed:
          type: string
        notenotificationid:
          type: integer
        noteid:
          $ref: '#/components/schemas/Note'
        subjectid:
          $ref: '#/components/schemas/Subject'
    AssociateContainersRequest:
      type: object
      properties:
        associationList:
          $ref: '#/components/schemas/List%3CContainerAssociation%3E'
        dividePallets:
          type: boolean
    Set<Casefile>:
      type: array
      items:
        $ref: '#/components/schemas/Casefile'
    SalenoteTransportPendingRequest:
      type: object
      properties:
        fromDate:
          type: string
        contractor:
          $ref: '#/components/schemas/Contractor'
        toDate:
          type: string
        transportAgencies:
          $ref: '#/components/schemas/List%3CTransportagency%3E'
    StatementRequest:
      type: object
      properties:
        contractorIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
        from:
          type: string
        to:
          type: string
        account:
          type: string
    'Map<Monitorable,List<MonitorabledataResume>>':
      type: object
      additionalProperties:
        $ref: '#/components/schemas/List%3CMonitorabledataResume%3E'
    LoginRequest:
      type: object
      properties:
        password:
          type: string
        companyId:
          type: integer
        passwordEncryption:
          type: string
        port:
          type: integer
        host:
          type: string
        guid:
          type: string
        terminal:
          type: string
        pretoken:
          type: string
        username:
          type: string
    RegistrationRequest:
      type: object
      properties:
        password:
          type: string
        phone:
          type: string
        name:
          type: string
        company:
          type: string
        email:
          type: string
    List<SaleorderResume>:
      type: array
      items:
        $ref: '#/components/schemas/SaleorderResume'
    List<AccountingEntryDetailMatch>:
      type: array
      items:
        $ref: '#/components/schemas/AccountingEntryDetailMatch'
    List<Batch>:
      type: array
      items:
        $ref: '#/components/schemas/Batch'
    SettlementsRequest:
      type: object
      properties:
        contractor:
          $ref: '#/components/schemas/Contractor'
        workersMap:
          $ref: '#/components/schemas/Map%3CInteger,Integer%3E'
        maxJourneys:
          type: integer
        recipients:
          $ref: '#/components/schemas/List%3CString%3E'
        from:
          type: string
        to:
          type: string
    List<MatchAccountingEntriesRequest>:
      type: array
      items:
        $ref: '#/components/schemas/MatchAccountingEntriesRequest'
    'Stockmovement[]':
      type: array
      items:
        $ref: '#/components/schemas/Stockmovement'
    List<MonitorableIntervalResponse>:
      type: array
      items:
        $ref: '#/components/schemas/MonitorableIntervalResponse'
    List<GaragePurchaseItem>:
      type: array
      items:
        $ref: '#/components/schemas/GaragePurchaseItem'
    WorkCenter:
      type: object
      properties: null
    List<Workspace>:
      type: array
      items:
        $ref: '#/components/schemas/Workspace'
    List<Stocklocation>:
      type: array
      items:
        $ref: '#/components/schemas/Stocklocation'
    int:
      type: integer
    BigDecimal:
      type: string
    GenerateTreatmentsRequest:
      type: object
      properties:
        treatmentList:
          $ref: '#/components/schemas/List%3CTreatment%3E'
    PrintProvisioningRequest:
      type: object
      properties:
        date:
          type: string
        all:
          type: boolean
    Containertype:
      type: object
      properties: null
    boolean:
      type: boolean
    List<FLDVariationResumeRow>:
      type: array
      items:
        $ref: '#/components/schemas/FLDVariationResumeRow'
    MemberGroupRequest:
      type: object
      properties:
        groupid:
          type: integer
        memberIds:
          $ref: '#/components/schemas/List%3CInteger%3E'
    Planification:
      type: object
      properties:
        branchid:
          $ref: '#/components/schemas/Branch'
        createdat:
          type: string
        planificationid:
          type: integer
        planification:
          type: string
        until:
          type: string
        responsibleid:
          $ref: '#/components/schemas/Worker'
        since:
          type: string
    CheckRequest:
      type: object
      properties:
        idcardnumber:
          type: string
        image:
          type: string
        firstname:
          type: string
        terminalname:
          type: string
        lastname:
          type: string
    List<DataperiodRevision>:
      type: array
      items:
        $ref: '#/components/schemas/DataperiodRevision'
